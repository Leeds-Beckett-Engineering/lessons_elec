%!PS-Adobe-3.0 EPSF-3.0
%%Title: 02419.eps
%%Creator: Xcircuit v3.2
%%CreationDate: Tue Jan 19 01:41:45 2010
%%Pages: 1
%%BoundingBox: 68 68 473 634
%%DocumentNeededResources: font Helvetica 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.1
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--1/5/04  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 3.1 0
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 384 and 0 gt {/mshow {pop} def} {/mshow {show}
	def} ifelse just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {dup type
	/arraytype eq {exec} {12 string cvs true charpath flattenpath} ifelse}
	ifelse} repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {mshow} {dup type
	/arraytype eq {exec} {12 string cvs mshow} ifelse} ifelse} repeat
	grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore} def     

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginDocumentSetup

/arrowhead {
% trivial
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 1.00 endpath
endgate
} def

/arrow {
% trivial
begingate
1 0.80 0 -40 0 20 2 polygon
1.00 0 0 40 arrowhead
endgate
} def

/block {
begingate
0 1.00 96 640 96 512 288 512 288 640 4 polygon
(motor) {CR} (Electric) {/Helvetica cf} 4 16 0 0.80 128 576 label
0 1.00 -288 448 -288 320 -96 320 -96 448 4 polygon
0 1.00 376 464 376 336 568 336 568 464 4 polygon
(AC) {/Helvetica cf} 2 16 0 0.80 -224 384 label
(DC) {/Helvetica cf} 2 16 0 0.80 440 400 label
0 1.00 -648 256 -648 128 -416 128 -416 256 4 polygon
(Asynchronous) {/Helvetica cf} 2 16 0 0.80 -632 192 label
1 1.00 -224 320 -544 256 2 polygon
0 1.00 -480 32 -480 -96 -288 -96 -288 32 4 polygon
0 1.00 -832 32 -832 -96 -640 -96 -640 32 4 polygon
(Polyphase) {/Helvetica cf} 2 16 0 0.80 -816 -32 label
(phase) {CR} (Single) {/Helvetica cf} 4 16 0 0.80 -448 -48 label
0 1.00 -992 -192 -992 -320 -800 -320 -800 -192 4 polygon
0 1.00 -672 -384 -672 -512 -480 -512 -480 -384 4 polygon
0 1.00 -992 -384 -992 -512 -800 -512 -800 -384 4 polygon
(cage) {CR} (Squirrel) {/Helvetica cf} 4 16 0 0.80 -960 -272 label
(rotor) {CR} (Wound) {/Helvetica cf} 4 16 0 0.80 -960 -464 label
0 1.00 -992 -576 -992 -704 -800 -704 -800 -576 4 polygon
(resolvers) {CR} (   &) {CR} (Synchros) {/Helvetica cf} 6 16 0 0.75 -968 -672 
label
0 1.00 -672 -576 -672 -704 -480 -704 -480 -576 4 polygon
0 1.00 -672 -192 -672 -320 -480 -320 -480 -192 4 polygon
0 1.00 -320 -192 -320 -320 -128 -320 -128 -192 4 polygon
0 1.00 -320 -384 -320 -512 -128 -512 -128 -384 4 polygon
0 1.00 -320 -576 -320 -704 -128 -704 -128 -576 4 polygon
(start) {CR} (Capacitor) {/Helvetica cf} 4 16 0 0.80 -656 -464 label
(capacitor) {CR} (split) {CR} (Permanent) {/Helvetica cf} 6 16 0 0.80 -656 -296 
label
(phase) {CR} (Split) {/Helvetica cf} 4 16 0 0.80 -288 -272 label
(run) {CR} (Capacitor) {/Helvetica cf} 4 16 0 0.75 -656 -656 label
(pole) {CR} (Shaded) {/Helvetica cf} 4 16 0 0.80 -288 -464 label
(reluctance) {CR} (Variable) {hS} {/Helvetica cf} 5 16 0 0.75 -304 -656 label
(Electric motor family tree) {/Helvetica cf} 2 16 0 1.50 -712 672 label
0 1.00 -128 0 -128 -128 64 -128 64 0 4 polygon
0 1.00 128 0 128 -128 320 -128 320 0 4 polygon
0 1.00 800 0 800 -128 992 -128 992 0 4 polygon
0 1.00 0 -384 0 -512 192 -512 192 -384 4 polygon
0 1.00 288 -384 288 -512 480 -512 480 -384 4 polygon
0 1.00 -4 -576 -4 -704 196 -704 196 -576 4 polygon
0 1.00 288 -576 288 -704 480 -704 480 -576 4 polygon
1 1.00 192 704 192 640 2 polygon
1 1.00 -576 128 -736 32 2 polygon
1 1.00 -512 128 -384 32 2 polygon
1 1.00 -736 -96 -736 -416 -800 -416 3 polygon
( condenser) {CR} (Synchronous) {/Helvetica cf} 4 16 0 0.75 8 -656 label
(wave) {CR} (Sine) {/Helvetica cf} 4 16 0 0.80 -80 -80 label
(Brushless) {/Helvetica cf} 2 16 0 0.80 464 -72 label
0 1.00 448 0 448 -128 640 -128 640 0 4 polygon
(Stepper) {/Helvetica cf} 2 19 0 0.80 272 -72 label
1 1.00 -384 -96 -384 -608 -320 -608 3 polygon
1 1.00 -320 -416 -384 -416 2 polygon
1 1.00 -320 -224 -384 -224 2 polygon
(Reluctance) {/Helvetica cf} 2 16 0 0.80 822 -64 label
0 1.00 288 -192 288 -320 480 -320 480 -192 4 polygon
1 1.00 -32 -128 -32 -640 -4 -640 3 polygon
1 1.00 -32 -448 0 -448 2 polygon
1 1.00 320 128 -32 0 2 polygon
1 1.00 352 128 224 0 2 polygon
1 1.00 240 -128 240 -640 288 -640 3 polygon
1 1.00 240 -440 288 -440 2 polygon
1 1.00 240 -256 288 -256 2 polygon
(reluctance) {CR} (Variable) {/Helvetica cf} 4 16 0 0.80 310 -288 label
(PM) {/Helvetica cf} 2 16 0 0.80 352 -448 label
(Hybrid) {/Helvetica cf} 2 16 0 0.75 320 -640 label
3 1.00 472 336 552 8 2 polygon
1 1.00 -896 -512 -896 -576 2 polygon
0 1.00 608 -192 608 -320 816 -320 816 -192 4 polygon
0 1.00 608 -384 608 -512 800 -512 800 -384 4 polygon
1 1.00 896 -128 896 -448 800 -448 3 polygon
1 1.00 896 -256 816 -256 2 polygon
(reluctance) {CR} (Switched) {/Helvetica cf} 4 16 0 0.80 624 -464 label
(reluctance) {CR} (Synchronous) {/Helvetica cf} 4 16 0 0.80 624 -272 label
0 1.00 256 256 256 128 464 128 464 256 4 polygon
(Synchronous) {/Helvetica cf} 2 16 0 0.80 268 192 label
1 1.00 -128 320 352 256 2 polygon
1 1.00 416 128 928 0 2 polygon
1 1.00 544 0 384 128 2 polygon
1 1.00 160 512 -192 448 2 polygon
1 1.00 224 512 472 464 2 polygon
0.600 0.600 0.600 scb
0 1.00 800 192 800 64 992 64 992 192 4 polygon
(motors) {CR} (Other DC) {/Helvetica cf} 4 16 0 0.80 824 112 label
1 1.00 536 336 888 192 2 polygon
sce
0 1.00 0 -208 0 -336 192 -336 192 -208 4 polygon
1 1.00 -32 -272 0 -272 2 polygon
( rotor) {CR} (Wound) {/Helvetica cf} 4 16 0 0.80 48 -288 label
(PM rotor) {/Helvetica cf} 2 16 0 0.75 32 -448 label
3 1.00 416 336 40 216 2 polygon
0 1.00 -336 216 -336 88 -144 88 -144 216 4 polygon
(brushed) {CR} (AC) {/Helvetica cf} 4 16 0 0.80 -296 128 label
0 1.00 -64 216 -64 88 128 88 128 216 4 polygon
(Universal) {/Helvetica cf} 2 16 0 0.80 -40 144 label
1 1.00 -416 200 -336 152 2 polygon
1.00 90 -104 152 arrow
1 1.00 -480 -224 -384 -224 2 polygon
1 1.00 -384 -416 -480 -416 2 polygon
1 1.00 -384 -608 -480 -608 2 polygon
1 1.00 -800 -224 -736 -224 2 polygon
endgate
} def


%%EndDocumentSetup

%%Page: 1 1
%%PageOrientation: Portrait
/pgsave save def bop
0.7500 inchscale
5.2000 setlinewidth 1095 1120 translate

1.00 270 -128 128 block
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
