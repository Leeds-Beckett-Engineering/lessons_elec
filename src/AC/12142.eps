%!PS-Adobe-3.0 EPSF-3.0
%%Title: 12142.eps
%%Creator: Xcircuit v2.0
%%CreationDate: Sun Nov 25 09:55:44 2001
%%Pages: 1
%%BoundingBox: 68 68 369 310
%%DocumentNeededResources: font Helvetica font Helvetica-Bold 
%%+ font Helvetica-Oblique 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.0
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--2/25/99  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.0 2
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/cf { dup type /realtype eq {40 mul /fscale exch def} if dup /xfont exch def
   findfont fscale scalefont setfont } def
/Ss { gsave 0.67 dup scale gsave mty neg rmoveto
   glevel 1 add /glevel exch def } def
/ss { gsave 0.67 dup scale gsave mty 0.5 mul rmoveto
   glevel 1 add /glevel exch def } def
/ns { currentpoint transform   % preserve x position!
   glevel {grestore} repeat /glevel 0 def
   itransform pop currentpoint pop sub 0 rmoveto } def
/ul { showflag 1 eq { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { showflag 1 eq { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave true charpath flattenpath pathbbox pop exch pop sub
   grestore } def
/bs { stW 0 rmoveto } def
/pspc 0 def
/qS { (aa) stW (a a) stW sub 4 div 0 rmoveto } def
/hS { qS qS } def
/textx { dup 1 add copy 0 exch { exch dup type /stringtype eq
	{stringwidth pop add}{exec} ifelse } repeat neg ns } def
/mty { 0 topmat setmatrix (A) true charpath flattenpath pathbbox exch
   pop exch sub exch pop neg grestore } def
/texty { gsave 2 copy pop exec mty } def
/tcenter { textx grestore 0.5 mul 0 rmoveto } def
/tright  { textx grestore fspc sub 0 rmoveto } def
/tmiddle { texty 0.5 mul rmoveto } def
/ttop    { texty fspc sub rmoveto } def
/tshow {{ dup type /stringtype eq {show}{exec} ifelse} repeat ns } def

/label  { gsave translate 0 0 moveto rotate /just exch def just 16 and 0 gt
	{0 1 dtransform gsave pagemat setmatrix idtransform exch grestore
	1 0 dtransform gsave pagemat setmatrix idtransform exch grestore
	dup 0 eq {pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse
	{-1 /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse exch 0 lt
	{-1 /just just dup 12 and 4 ne {12 xor} if def} {1} ifelse scale } if
	/glevel 0 def /showflag 0 def /fspc pspc def
	just 1 and 0 gt {gsave just 2 and 0 gt {tright}{tcenter} ifelse}
	{fspc 0 rmoveto} ifelse
	just 4 and 0 gt {just 8 and 0 gt {ttop}{tmiddle} ifelse}
	{0 fspc rmoveto} ifelse
	/showflag 1 def tshow grestore } def
/pinlabel { hlevel 0 eq { /pspc 20 def label /pspc 0 def }
	{ pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/begingate { /hlevel hlevel 1 add def gsave translate 0 0 moveto dup 0 lt
	{neg 1 sub -1 1 scale} if rotate dup scale } bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore } bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt { newpath } { stroke } ifelse grestore } def
/scb { gsave setrgbcolor } bind def  /sce { grestore } bind def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 setgray } def
/insertion {/PSobj save def /showpage {} def bop translate} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%Page: 12141.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
% 772 944 offsets
0.7500 inchscale
2.6000 setlinewidth

(Fundamental) {/Helvetica 1.000 cf} 2 16 0 260 1016 label
(A) {/Helvetica-Bold 1.000 cf} 2 16 0 580 1040 label
(B) {/Helvetica-Bold 1.000 cf} 2 16 0 764 1040 label
(C) {/Helvetica-Bold 1.000 cf} 2 16 0 988 1040 label
(o) {Ss} (0) {/Helvetica 1.000 cf} 4 16 0 580 992 label
(o) {Ss} (120) {/Helvetica 1.000 cf} 4 16 0 740 992 label
(o) {Ss} (240) {/Helvetica 1.000 cf} 4 16 0 964 992 label
(A') {/Helvetica-Bold 1.000 cf} 2 16 0 580 912 label
(B') {/Helvetica-Bold 1.000 cf} 2 16 0 764 912 label
(C') {/Helvetica-Bold 1.000 cf} 2 16 0 988 912 label
{ns} (o) {Ss} (3 x 0) {/Helvetica 1.000 cf} 5 16 0 548 864 label
(o) {Ss} (120) {ns} {Ss} (3 x ) {/Helvetica 1.000 cf} 7 16 0 708 864 label
(o) {Ss} (3 x 240) {/Helvetica 1.000 cf} 4 16 0 924 864 label
(\)) {ns} (o) {Ss} (\(0) {/Helvetica 1.000 cf} 6 16 0 564 816 label
(\)) {ns} (o) {Ss} ( = 0) {ns} (o) {Ss} (\(360) {/Helvetica 1.000 cf} 10 16 0 684 816 label
(\)) {ns} (o) {Ss} ( = 0) {ns} (o) {Ss} (\(720) {/Helvetica 1.000 cf} 10 16 0 908 816 label
1  1.00 676 1088 676 784 2 polygon
1  1.00 884 1088 884 784 2 polygon
(A-B-C) {/Helvetica-Bold 1.000 cf} 2 16 0 1148 1016 label
0  1.00 532 960 532 1088 1300 1088 1300 960 4 polygon
0  1.00 532 960 532 784 1300 784 1300 960 4 polygon
1  1.00 1124 784 1124 1088 2 polygon
(no) {/Helvetica-Oblique 1.000 cf} 2 16 0 1180 888 label
(rotation) {/Helvetica-Oblique 1.000 cf} 2 16 0 1140 848 label
0  1.00 532 784 532 608 1300 608 1300 784 4 polygon
(5th harmonic) {/Helvetica 1.000 cf} 2 16 0 256 688 label
(A'') {/Helvetica-Bold 1.000 cf} 2 16 0 580 736 label
(B'') {/Helvetica-Bold 1.000 cf} 2 16 0 764 736 label
(C'') {/Helvetica-Bold 1.000 cf} 2 16 0 980 736 label
{ns} (o) {Ss} (5 x 0) {/Helvetica 1.000 cf} 5 16 0 548 696 label
1  1.00 676 784 676 608 2 polygon
1  1.00 884 784 884 608 2 polygon
1  1.00 1124 784 1124 608 2 polygon
{ns} (o) {Ss} (5 x 120) {/Helvetica 1.000 cf} 5 16 0 708 696 label
{ns} (o) {Ss} (5 x 240) {/Helvetica 1.000 cf} 5 16 0 920 696 label
(\)) {ns} (o) {Ss} (\(0) {/Helvetica 1.000 cf} 6 16 0 564 640 label
(\)) {ns} (o) {Ss} ( - 120) {ns} (o) {Ss} ( = 720) {ns} (o) {Ss} (\(600) {/Helvetica 0.500 cf} 14 16 0 692 664 label
(\)) {ns} (o) {Ss} (\(-120) {/Helvetica 1.000 cf} 6 16 0 716 624 label
(\)) {ns} (o) {Ss} ( - 240) {ns} (o) {Ss} ( = 1440) {ns} (o) {Ss} (\(1200) {/Helvetica 0.500 cf} 14 16 0 900 664 label
(\)) {ns} (o) {Ss} (\(-240) {/Helvetica 1.000 cf} 6 16 0 932 624 label
(C-B-A) {/Helvetica-Bold 1.000 cf} 2 16 0 1148 688 label
0  1.00 532 608 532 432 1300 432 1300 608 4 polygon
1  1.00 676 608 676 432 2 polygon
1  1.00 884 608 884 432 2 polygon
1  1.00 1124 608 1124 432 2 polygon
(7th harmonic) {/Helvetica 1.000 cf} 2 16 0 256 508 label
(A''') {/Helvetica-Bold 1.000 cf} 2 16 0 572 560 label
(B''') {/Helvetica-Bold 1.000 cf} 2 16 0 756 560 label
(C''') {/Helvetica-Bold 1.000 cf} 2 16 0 980 560 label
{ns} (o) {Ss} (7 x 0) {/Helvetica 1.000 cf} 5 16 0 548 520 label
(\)) {ns} (o) {Ss} (\(0) {/Helvetica 1.000 cf} 6 16 0 564 464 label
{ns} (o) {Ss} (7 x 120) {/Helvetica 1.000 cf} 5 16 0 708 520 label
{ns} (o) {Ss} (7 x 240) {/Helvetica 1.000 cf} 5 16 0 924 520 label
(\)) {ns} (o) {Ss} ( + 120) {ns} (o) {Ss} ( = 720) {ns} (o) {Ss} (\(840) {/Helvetica 0.500 cf} 14 16 0 692 488 label
(\)) {ns} (o) {Ss} (\(120) {/Helvetica 1.000 cf} 6 16 0 732 448 label
(\)) {ns} (o) {Ss} ( + 240) {ns} (o) {Ss} ( = 1440) {ns} (o) {Ss} (\(1680) {/Helvetica 0.500 cf} 14 16 0 908 488 label
(\)) {ns} (o) {Ss} (\(240) {/Helvetica 1.000 cf} 6 16 0 956 448 label
(A-B-C) {/Helvetica-Bold 1.000 cf} 2 16 0 1148 512 label
0  1.00 532 432 532 256 1300 256 1300 432 4 polygon
(A'''') {/Helvetica-Bold 1.000 cf} 2 16 0 564 392 label
(B'''') {/Helvetica-Bold 1.000 cf} 2 16 0 748 392 label
1  1.00 676 432 676 256 2 polygon
1  1.00 884 432 884 256 2 polygon
1  1.00 1124 432 1124 256 2 polygon
(C'''') {/Helvetica-Bold 1.000 cf} 2 16 0 972 392 label
{ns} (o) {Ss} (9 x 0) {/Helvetica 1.000 cf} 5 16 0 548 344 label
(\)) {ns} (o) {Ss} (\(0) {/Helvetica 1.000 cf} 6 16 0 564 288 label
{ns} (o) {Ss} (9 x 120) {/Helvetica 1.000 cf} 5 16 0 708 344 label
(\)) {ns} (o) {Ss} ( = 0) {ns} (o) {Ss} (\(1080) {/Helvetica 0.900 cf} 10 16 0 684 288 label
{ns} (o) {Ss} (9 x 240) {/Helvetica 1.000 cf} 5 16 0 924 344 label
(\)) {ns} (o) {Ss} ( = 0) {ns} (o) {Ss} (\(2160) {/Helvetica 1.000 cf} 10 16 0 900 288 label
(no) {/Helvetica-Oblique 1.000 cf} 2 16 0 1180 360 label
(rotation) {/Helvetica-Oblique 1.000 cf} 2 16 0 1140 320 label
(3rd harmonic) {/Helvetica 1.000 cf} 2 16 0 260 864 label
(9th harmonic) {/Helvetica 1.000 cf} 2 16 0 258 328 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
