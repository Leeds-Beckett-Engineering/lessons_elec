%!PS-Adobe-3.0 EPSF-3.0
%%Title: 04369.eps
%%Creator: Xcircuit v2.0
%%CreationDate: Sun Jun 16 11:13:55 2002
%%Pages: 1
%%BoundingBox: 68 68 365 391
%%DocumentNeededResources: font Helvetica font Times-Roman font Courier 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.0
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--2/25/99  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.0 2
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/cf { dup type /realtype eq {40 mul /fscale exch def} if dup /xfont exch def
   findfont fscale scalefont setfont } def
/Ss { gsave 0.67 dup scale gsave mty neg rmoveto
   glevel 1 add /glevel exch def } def
/ss { gsave 0.67 dup scale gsave mty 0.5 mul rmoveto
   glevel 1 add /glevel exch def } def
/ns { currentpoint transform   % preserve x position!
   glevel {grestore} repeat /glevel 0 def
   itransform pop currentpoint pop sub 0 rmoveto } def
/ul { showflag 1 eq { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { showflag 1 eq { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave true charpath flattenpath pathbbox pop exch pop sub
   grestore } def
/bs { stW 0 rmoveto } def
/pspc 0 def
/qS { (aa) stW (a a) stW sub 4 div 0 rmoveto } def
/hS { qS qS } def
/textx { dup 1 add copy 0 exch { exch dup type /stringtype eq
	{stringwidth pop add}{exec} ifelse } repeat neg ns } def
/mty { 0 topmat setmatrix (A) true charpath flattenpath pathbbox exch
   pop exch sub exch pop neg grestore } def
/texty { gsave 2 copy pop exec mty } def
/tcenter { textx grestore 0.5 mul 0 rmoveto } def
/tright  { textx grestore fspc sub 0 rmoveto } def
/tmiddle { texty 0.5 mul rmoveto } def
/ttop    { texty fspc sub rmoveto } def
/tshow {{ dup type /stringtype eq {show}{exec} ifelse} repeat ns } def

/label  { gsave translate 0 0 moveto rotate /just exch def just 16 and 0 gt
	{0 1 dtransform gsave pagemat setmatrix idtransform exch grestore
	1 0 dtransform gsave pagemat setmatrix idtransform exch grestore
	dup 0 eq {pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse
	{-1 /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse exch 0 lt
	{-1 /just just dup 12 and 4 ne {12 xor} if def} {1} ifelse scale } if
	/glevel 0 def /showflag 0 def /fspc pspc def
	just 1 and 0 gt {gsave just 2 and 0 gt {tright}{tcenter} ifelse}
	{fspc 0 rmoveto} ifelse
	just 4 and 0 gt {just 8 and 0 gt {ttop}{tmiddle} ifelse}
	{0 fspc rmoveto} ifelse
	/showflag 1 def tshow grestore } def
/pinlabel { hlevel 0 eq { /pspc 20 def label /pspc 0 def }
	{ pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/begingate { /hlevel hlevel 1 add def gsave translate 0 0 moveto dup 0 lt
	{neg 1 sub -1 1 scale} if rotate dup scale } bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore } bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt { newpath } { stroke } ifelse grestore } def
/scb { gsave setrgbcolor } bind def  /sce { grestore } bind def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 setgray } def
/insertion {/PSobj save def /showpage {} def bop translate} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/ladder_start {
% -512 -80 1029 172 bbox
begingate
(1) {ss} (L) {/Times-Roman 1.000 cf} 4 16 0 -512 64 label
1  1.00 -496 -80 -496 48 2 polygon
(2) {ss} (L) {/Times-Roman 1.000 cf} 4 16 0 480 64 label
1  1.00 496 48 496 -80 2 polygon
endgate
} def

/no_contact {
% -64 -32 128 64 bbox
begingate
1  1.00 -64 0 -16 0 2 polygon
1  1.00 -16 32 -16 -32 2 polygon
1  1.00 16 0 64 0 2 polygon
1  1.00 16 32 16 -32 2 polygon
endgate
} def

/no_electronic {
% -64 -64 128 128 bbox
begingate
1.00 0 0 0 no_contact
0.600 0.600 0.600 scb
1  1.00 0 64 -64 0 0 -64 64 0 0 64 5 polygon
sce
endgate
} def

/relay_coil {
% -64 -32 128 64 bbox
begingate
1  1.00 0 0 32 0.00 360.00 xcarc
1  1.00 -64 0 -32 0 2 polygon
1  1.00 32 0 64 0 2 polygon
endgate
} def

/dot {
% -10 -10 20 20 bbox
begingate
248  1.00 0 0 6 0.00 360.00 xcarc
endgate
} def

/indicator {
% -64 -28 128 56 bbox
begingate
1  1.00 0 0 22 0.00 360.00 xcarc
1  1.00 -20 20 -28 28 2 polygon
1  1.00 20 20 28 28 2 polygon
1  1.00 24 0 64 0 2 polygon
1  1.00 22 0 24 0 2 polygon
1  1.00 20 -20 28 -28 2 polygon
1  1.00 -20 -20 -28 -28 2 polygon
1  1.00 -64 0 -24 0 2 polygon
1  1.00 -24 0 -22 0 2 polygon
endgate
} def

/nc_contact {
% -64 -32 128 64 bbox
begingate
1.00 0 0 0 no_contact
1  1.00 32 32 -32 -32 2 polygon
endgate
} def

%%Page: 04360.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
% 688 1056 offsets
0.7500 inchscale
2.6000 setlinewidth

(A) {/Courier 1.000 cf} 2 16 0 432 1184 label
(B) {/Courier 1.000 cf} 2 16 0 432 1008 label
(C) {/Courier 1.000 cf} 2 16 0 432 816 label
1.00 0 768 1216 ladder_start
1.00 0 400 1136 no_electronic
1  1.00 336 1136 272 1136 2 polygon
1.00 0 1200 1136 relay_coil
1  1.00 464 1136 1136 1136 2 polygon
(CR1) {/Helvetica 1.000 cf} 2 16 0 1152 1184 label
1.00 0 400 960 no_electronic
1  1.00 336 960 272 960 2 polygon
1  1.00 464 960 1136 960 2 polygon
1.00 0 1200 960 relay_coil
1.00 0 400 768 no_electronic
1  1.00 336 768 272 768 2 polygon
1  1.00 464 768 1136 768 2 polygon
1.00 0 1200 768 relay_coil
1  1.00 272 1136 272 768 2 polygon
1.00 0 272 768 dot
1.00 0 272 960 dot
1.00 0 272 1136 dot
(CR2) {/Helvetica 1.000 cf} 2 16 0 1152 1008 label
1.00 0 1264 1136 dot
1  1.00 1264 1136 1264 768 2 polygon
1.00 0 1264 768 dot
1.00 0 1264 960 dot
(CR3) {/Helvetica 1.000 cf} 2 16 0 1152 816 label
1  1.00 272 768 272 608 336 608 3 polygon
1.00 0 400 608 no_contact
1  1.00 1264 768 1264 608 2 polygon
1.00 0 1200 608 indicator
(Output) {/Helvetica 1.000 cf} 2 16 0 1136 656 label
1.00 0 400 480 no_contact
1.00 0 400 352 no_contact
1.00 0 272 608 dot
1  1.00 272 608 272 352 336 352 3 polygon
1  1.00 336 480 272 480 2 polygon
1.00 0 272 480 dot
(CR2) {/Helvetica 1.000 cf} 2 16 0 720 528 label
(CR2) {/Helvetica 1.000 cf} 2 16 0 368 528 label
(CR3) {/Helvetica 1.000 cf} 2 16 0 720 400 label
1.000 0.000 0.000 scb
(Output = \(A + B + C\)\(A + B + C\)) {/Courier 1.000 cf} 2 16 0 384 1344 label
1  1.00 912 1376 888 1376 2 polygon
1  1.00 1008 1376 984 1376 2 polygon
1  1.00 1104 1376 1080 1376 2 polygon
sce
1  1.00 464 608 528 608 2 polygon
1.00 0 528 608 dot
1  1.00 528 608 528 352 464 352 3 polygon
1  1.00 464 480 528 480 2 polygon
1.00 0 528 480 dot
1  1.00 624 608 688 608 2 polygon
1  1.00 624 480 688 480 2 polygon
1  1.00 624 352 688 352 2 polygon
1  1.00 816 352 880 352 2 polygon
1  1.00 816 480 880 480 2 polygon
1  1.00 816 608 880 608 2 polygon
1  1.00 528 608 624 608 2 polygon
1.00 0 624 608 dot
1  1.00 624 608 624 352 2 polygon
1.00 0 624 480 dot
1.00 0 880 480 dot
1  1.00 880 352 880 608 2 polygon
1.00 0 880 608 dot
1  1.00 880 608 1136 608 2 polygon
(CR3) {/Helvetica 1.000 cf} 2 16 0 368 400 label
(CR1) {/Helvetica 1.000 cf} 2 16 0 368 656 label
(CR1) {/Helvetica 1.000 cf} 2 16 0 720 656 label
1.00 0 752 608 nc_contact
1.00 0 752 480 nc_contact
1.00 0 752 352 nc_contact
1.000 0.000 0.000 scb
(\(A + B + C\)) {/Courier 1.000 cf} 2 16 0 264 256 label
(\(A + B + C\)) {/Courier 1.000 cf} 2 16 0 616 256 label
1  1.00 664 288 640 288 2 polygon
1  1.00 760 288 736 288 2 polygon
1  1.00 856 288 832 288 2 polygon
sce
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
