%!PS-Adobe-3.0 EPSF-3.0
%%Title: shift/04392.eps
%%Creator: Xcircuit v3.1
%%CreationDate: Wed Jan 26 21:37:14 2005
%%Pages: 1
%%BoundingBox: 68 68 327 281
%%DocumentNeededResources: font Helvetica font Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.4
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--1/15/03  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.4 2
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {exec}
	ifelse } repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {show}{exec} ifelse}
	repeat grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate { /hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore} def     

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def bop rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/arrowhead {
% trivial
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 1.00 endpath
endgate
} def

/arrow {
% trivial
begingate
1 0.80 0 -40 0 20 2 polygon
1.00 0 0 40 arrowhead
endgate
} def

%%Page: 1 1
%%PageOrientation: Portrait
/pgsave save def bop
% 877 1175 offsets
% 32.00 1.00 gridspace
0.5258 inchscale
2.0000 setlinewidth

0.80 0 911 1307 arrow
1 1.00 783 1339 847 1339 847 1275 911 1275 4 polygon
0.80 0 1039 1307 arrow
1 1.00 911 1339 975 1339 975 1275 1039 1275 4 polygon
0.80 0 1167 1307 arrow
1 1.00 1039 1339 1103 1339 1103 1275 1167 1275 4 polygon
0.80 0 1295 1307 arrow
1 1.00 1167 1339 1231 1339 1231 1275 1295 1275 4 polygon
0.80 0 1423 1307 arrow
1 1.00 1295 1339 1359 1339 1359 1275 1423 1275 4 polygon
1 1.00 1165 1143 1293 1143 1293 1079 1421 1079 4 polygon
1 1.00 1165 1143 1165 1079 2 polygon
1 1.00 653 1047 781 1047 781 983 1421 983 4 polygon
1 1.00 653 983 653 983 653 1047 3 polygon
1 1.00 653 887 1421 887 1421 887 3 polygon
1 1.00 1165 1079 653 1079 2 polygon
0.80 0 783 1307 arrow
1 1.00 655 1339 719 1339 719 1275 783 1275 4 polygon
{ns} (A) {ss} (D) {/Times-Roman cf} 5 16 0 1.25 525 991 label
(B) {ss} (D) {/Times-Roman cf} 4 16 0 1.25 525 895 label
{ns} (C) {ss} (D) {/Times-Roman cf} 5 16 0 1.25 525 799 label
(data in) {/Times-Roman cf} 2 16 0 1.25 525 1095 label
(clock) {/Times-Roman cf} 2 16 0 1.25 527 1283 label
(1) {ss} (t) {/Times-Roman cf} 4 16 0 1.25 767 1379 label
(2) {ss} (t) {/Times-Roman cf} 4 16 0 1.25 895 1379 label
(3) {ss} (t) {/Times-Roman cf} 4 16 0 1.25 1023 1379 label
(4) {ss} (t) {/Times-Roman cf} 4 16 0 1.25 1151 1371 label
1 1.00 653 855 781 855 781 791 1421 791 4 polygon
1 1.00 653 791 653 791 653 855 3 polygon
(LD) {ol} {} (SHIFT/) {/Times-Roman 0.750 cf} {/Times-Roman cf} 6 16 0 1.25 522 
1179 label
1 1.00 637 1239 701 1239 701 1175 861 1175 861 1239 1405 1239 6 polygon
1 1.00 781 471 781 471 781 535 3 polygon
(Parallel-in/ serial-out shift register load/shift waveforms) 
{/Helvetica 1.250 cf} {/Helvetica cf} 3 16 0 1.00 365 372 label
1 1.00 781 727 909 727 909 663 1293 663 4 polygon
1 1.00 781 663 781 663 781 727 3 polygon
0.000 0.000 1.000 scb
1 1.00 839 690 841 706 2 polygon
1 1.00 839 690 832 698 2 polygon
sce
{ns} (A) {ss} (Q) {/Times-Roman cf} 5 16 0 1.25 525 671 label
(B) {ss} (Q) {/Times-Roman cf} 4 16 0 1.25 525 575 label
(\(SO\)) {hS} {ns} {ns} (C) {ss} (Q) {/Times-Roman cf} 8 16 0 1.25 525 485 
label
1 1.00 781 663 653 663 2 polygon
1 1.00 781 471 653 471 2 polygon
5 1.00 1167 1259 1167 427 2 polygon
5 1.00 911 1259 911 427 2 polygon
5 1.00 1039 1259 1039 427 2 polygon
0.000 0.000 1.000 scb
1 1.00 733 1007 822 820 838 692 717 1007 spline
1 1.00 834 611 834 627 2 polygon
1 1.00 833 611 824 617 2 polygon
1 1.00 761 859 728 746 833 612 716 918 spline
1 1.00 839 499 837 515 2 polygon
1 1.00 839 499 827 502 2 polygon
1 1.00 697 762 750 595 837 501 701 799 spline
(1) {/Times-Roman cf} 2 16 0 1.00 692 1006 label
(0) {/Times-Roman cf} 2 16 0 1.00 687 908 label
(1) {/Times-Roman cf} 2 16 0 1.00 692 814 label
(1) {/Times-Roman cf} 2 16 0 1.00 848 682 label
(0) {/Times-Roman cf} 2 16 0 1.00 841 592 label
(1) {/Times-Roman cf} 2 16 0 1.00 848 490 label
sce
1 1.00 1293 663 1293 727 1421 727 3 polygon
1 1.00 653 567 909 567 909 631 1037 631 1037 567 1421 567 6 polygon
1 1.00 781 535 909 535 909 471 1037 471 1037 535 1165 535 1165 471 1421 471 
8 polygon
5 1.00 1294 1260 1294 428 2 polygon
5 1.00 782 1258 782 426 2 polygon
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
