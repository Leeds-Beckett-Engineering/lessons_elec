%!PS-Adobe-3.0 EPSF-3.0
%%Title: /home/dennis/Digital/14092.eps
%%Creator: Xcircuit v3.1
%%CreationDate: Mon Jun 28 16:41:11 2004
%%Pages: 1
%%BoundingBox: 68 68 392 180
%%DocumentNeededResources: font Courier 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.4
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--1/15/03  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.4 2
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {exec}
	ifelse } repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {show}{exec} ifelse}
	repeat grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate { /hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore} def     

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def bop rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%Page: 1 1
%%PageOrientation: Portrait
/pgsave save def bop
% 3109 1125 offsets
% 32.00 32.00 gridspace
0.2209 inchscale
10.4000 setlinewidth

0.000 0.000 1.000 scb
0 1.00 1151 1894 1151 1142 1510 1142 1510 1894 4 polygon
0 1.00 2327 1901 2327 1149 2686 1149 2686 1901 4 polygon
1.000 0.000 0.000 scb
0 1.00 1165 1874 1165 1534 2668 1534 2668 1874 4 polygon
0 1.00 1165 1507 1165 1160 2668 1160 2668 1507 4 polygon
0.000 0.000 1.000 scb
0 1.00 1525 1901 1525 1146 2307 1146 2307 1901 4 polygon
sce
1 1.00 1131 1921 954 2098 2 polygon
0 1.00 2709 1126 2709 1921 1131 1921 1131 1126 4 polygon
0.159 0.540 0.349 scb
2 1.00 1185 1853 1185 1180 1893 1180 1893 1853 4 polygon
2 1.00 1926 1853 1926 1180 2634 1180 2634 1853 4 polygon
1.000 0.000 0.000 scb
(A) {ol} {/Courier cf} 3 16 0 4.00 869 1669 label
(A) {/Courier cf} 2 16 0 4.00 869 1317 label
0.000 0.000 1.000 scb
(C) {/Courier cf} 2 16 0 4.00 1829 2021 label
(C) {ol} {/Courier cf} 3 16 0 4.00 1317 2021 label
(C) {ol} {/Courier cf} 3 16 0 4.00 2405 2021 label
0.159 0.540 0.349 scb
(B) {/Courier cf} 2 16 0 4.00 2277 869 label
(B) {ol} {/Courier cf} 3 16 0 4.00 1509 869 label
0.000 0.000 1.000 scb
1 1.00 1541 1957 1861 1989 2245 1957 3 polygon
1 1.00 1157 1957 1349 1989 1509 1957 3 polygon
1 1.00 2309 1957 2501 1989 2661 1957 3 polygon
0.159 0.540 0.349 scb
1 1.00 1189 1093 1541 1061 1861 1093 3 polygon
1 1.00 1957 1093 2309 1061 2629 1093 3 polygon
1.000 0.000 0.000 scb
1 1.00 1095 1538 1060 1729 1095 1888 3 polygon
1 1.00 1095 1154 1060 1345 1095 1504 3 polygon
0.000 0.000 1.000 scb
0 1.00 3135 1894 3135 1142 3494 1142 3494 1894 4 polygon
0 1.00 4311 1901 4311 1149 4670 1149 4670 1901 4 polygon
1.000 0.000 0.000 scb
0 1.00 3149 1874 3149 1534 4652 1534 4652 1874 4 polygon
0 1.00 3149 1507 3149 1160 4652 1160 4652 1507 4 polygon
0.000 0.000 1.000 scb
0 1.00 3509 1901 3509 1146 4291 1146 4291 1901 4 polygon
sce
1 1.00 3115 1921 2938 2098 2 polygon
0 1.00 4693 1126 4693 1921 3115 1921 3115 1126 4 polygon
0.159 0.540 0.349 scb
2 1.00 3169 1853 3169 1180 3877 1180 3877 1853 4 polygon
2 1.00 3910 1853 3910 1180 4618 1180 4618 1853 4 polygon
1.000 0.000 0.000 scb
(A) {ol} {/Courier cf} 3 16 0 4.00 2917 1669 label
(A) {/Courier cf} 2 16 0 4.00 2917 1317 label
0.159 0.540 0.349 scb
(B) {ol} {/Courier cf} 3 16 0 4.00 3141 1957 label
(B) {ol} {/Courier cf} 3 16 0 4.00 3557 1957 label
(B) {/Courier cf} 2 16 0 4.00 3941 1957 label
(B) {/Courier cf} 2 16 0 4.00 4357 1957 label
0.000 0.000 1.000 scb
(C) {ol} {/Courier cf} 3 16 0 4.00 3269 1957 label
(C) {ol} {/Courier cf} 3 16 0 4.00 4485 1957 label
(C) {/Courier cf} 2 16 0 4.00 4069 1957 label
(C) {/Courier cf} 2 16 0 4.00 3685 1957 label
0.000 0.000 0.000 scb
(*) {/Courier cf} 2 16 0 4.00 4389 1285 label
(x) {/Courier cf} 2 16 0 4.00 3269 1637 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
