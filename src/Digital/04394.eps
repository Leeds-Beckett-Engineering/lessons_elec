%!PS-Adobe-3.0 EPSF-3.0
%%Title: shift/04394.eps
%%Creator: Xcircuit v3.1
%%CreationDate: Mon Jul 19 09:49:54 2004
%%Pages: 1
%%BoundingBox: 68 68 392 161
%%DocumentNeededResources: font Helvetica font Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.4
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--1/15/03  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.4 2
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {exec}
	ifelse } repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {show}{exec} ifelse}
	repeat grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate { /hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore} def     

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def bop rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/d_flipflop {
begingate
(D) {/Helvetica cf} 2 16 0 1.00 -112 112 label
0 1.00 -80 144 -80 -144 80 -144 80 144 4 polygon
1 1.00 -80 96 -144 96 2 polygon
(C) {/Helvetica cf} 2 16 0 1.00 -112 16 label
1 1.00 -80 16 -48 0 -80 -16 3 polygon
1 1.00 -80 0 -144 0 2 polygon
1 1.00 96 -96 144 -96 2 polygon
1 1.00 88 -96 8 0.00 360.00 xcarc
(Q) {/Helvetica cf} 2 16 0 1.00 96 -80 label
1 1.00 96 -48 128 -48 2 polygon
1 1.00 80 96 144 96 2 polygon
(Q) {/Helvetica cf} 2 16 0 1.00 96 112 label
endgate
} def

/jumper {
% trivial
begingate
1 1.00 0 0 10 -90.00 90.00 xcarc
1 1.00 0 10 0 16 2 polygon
1 1.00 0 -10 0 -16 2 polygon
1.000 0.000 0.000 scb
(a) {/Times-Roman cf} 2 1 0 1.00 0 16 pinlabel
(a) {/Times-Roman cf} 2 13 0 1.00 0 -16 pinlabel
endgate
} def

/dot {
% trivial
begingate
248 1.00 0 0 6 0.00 360.00 xcarc
1.000 0.000 0.000 scb
(x) {/Times-Roman cf} 2 29 0 1.00 0 0 pinlabel
endgate
} def

/and_gate {
% trivial
begingate
1 1.00 0 -48 -64 -48 -64 48 0 48 4 polygon
1 1.00 0 0 48 -90.00 90.00 xcarc
1.000 0.000 0.000 scb
(Out) {/Times-Roman cf} 2 4 0 1.00 48 0 pinlabel
(In.1) {/Times-Roman cf} 2 7 0 1.00 -64 32 pinlabel
(In.2) {/Times-Roman cf} 2 7 0 1.00 -64 -32 pinlabel
endgate
} def

/arrowhead {
% trivial
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 1.00 endpath
endgate
} def

/arrow {
% trivial
begingate
1 0.80 0 -40 0 20 2 polygon
1.00 0 0 40 arrowhead
endgate
} def

/invert {
% trivial
begingate
0 1.00 -32 -40 -32 40 40 0 3 polygon
1 1.00 48 0 8 0.00 360.00 xcarc
1 1.00 -32 0 -48 0 2 polygon
1 1.00 56 0 64 0 2 polygon
1.000 0.000 0.000 scb
(Out) {/Times-Roman cf} 2 4 0 1.00 64 0 pinlabel
(In) {/Times-Roman cf} 2 7 0 1.00 -48 0 pinlabel
endgate
} def

/or_gate {
% trivial
begingate
1 1.00 -19 -48 96 30.00 90.00 xcarc
1 1.00 -19 48 96 270.00 330.00 xcarc
1 1.00 -112 0 80 -37.00 37.00 xcarc
1 1.00 -48 48 -19 48 2 polygon
1 1.00 -48 -48 -19 -48 2 polygon
1.000 0.000 0.000 scb
(Out) {/Times-Roman cf} 2 4 0 1.00 64 0 pinlabel
(In.1) {/Times-Roman cf} 2 7 0 1.00 -40 32 pinlabel
(In.2) {/Times-Roman cf} 2 7 0 1.00 -40 -32 pinlabel
endgate
} def

/nor {
% trivial
begingate
1 1.00 -64 48 -35 48 2 polygon
1 1.00 -64 -48 -35 -48 2 polygon
1 1.00 -128 0 80 -37.00 37.00 xcarc
1 1.00 56 0 8 0.00 360.00 xcarc
1 1.00 -35 -48 96 30.00 90.00 xcarc
1 1.00 -35 48 96 270.00 330.00 xcarc
1.000 0.000 0.000 scb
(Out) {/Times-Roman cf} 2 4 0 1.00 64 0 pinlabel
(In.1) {/Times-Roman cf} 2 7 0 1.00 -56 32 pinlabel
(In.2) {/Times-Roman cf} 2 7 0 1.00 -56 -32 pinlabel
endgate
} def

%%Page: 1 1
%%PageOrientation: Portrait
/pgsave save def bop
% 2404 1251 offsets
% 32.00 4.00 gridspace
0.2772 inchscale
2.6000 setlinewidth

0.000 0.000 0.000 scb
1.00 0 1668 1203 d_flipflop
1.00 0 2484 1203 d_flipflop
sce
1.00 0 3476 1203 d_flipflop
0.000 0.000 0.000 scb
1 1.00 2340 1203 2340 995 2 polygon
1 1.00 1524 1203 1524 995 2 polygon
sce
1 1.00 3332 1203 3332 995 2 polygon
1 1.00 3340 995 996 995 2 polygon
1.00 0 1844 995 jumper
1.00 0 2860 995 jumper
1 1.00 1844 979 1844 931 2 polygon
1 1.00 2860 979 2860 931 2 polygon
1 1.00 2860 931 924 931 2 polygon
1.00 0 1524 995 dot
1.00 0 2340 995 dot
1.00 0 1844 931 dot
{ns} (H) {ss} (Q) {/Times-Roman cf} 5 16 0 1.50 3572 1379 label
0.000 0.000 0.000 scb
-1.00 180 1252 1235 and_gate
1 1.00 1188 1251 1028 1251 1028 1331 1028 1347 1044 1347 5 polygon
1 1.00 1300 1235 1332 1235 1332 1267 1332 1283 1364 1283 5 polygon
1 1.00 932 1219 1188 1219 2 polygon
1.00 0 1028 1219 jumper
sce
1.00 0 1028 995 jumper
0.000 0.000 0.000 scb
(SER) {/Times-Roman cf} 2 16 0 1.00 916 1239 label
sce
(CLK) {/Times-Roman cf} 2 16 0 1.00 692 1123 label
(LD) {ol} {qS} {} (SH/) {/Times-Roman cf} 6 28 0 1.00 876 971 label
1.00 90 3700 1299 arrow
1 1.00 3620 1299 3668 1299 2 polygon
1 1.00 1028 979 1028 931 2 polygon
1.00 0 1028 931 dot
0.000 0.000 0.000 scb
1 1.00 1028 1251 1028 1235 2 polygon
1 1.00 1028 1203 1028 1011 2 polygon
1.00 0 1030 1251 dot
-1.00 180 2068 1235 and_gate
1 1.00 2116 1235 2148 1235 2148 1267 2148 1283 2180 1283 5 polygon
1.00 0 1844 1219 jumper
1 1.00 1844 1251 1844 1235 2 polygon
1 1.00 1844 1203 1844 1011 2 polygon
1.00 0 1846 1251 dot
-1.00 180 3084 1235 and_gate
1 1.00 3132 1235 3164 1235 3164 1267 3164 1283 3196 1283 5 polygon
1.00 0 2860 1219 jumper
1 1.00 2860 1251 2860 1235 2 polygon
1 1.00 2860 1203 2860 1011 2 polygon
1.00 0 2862 1251 dot
sce
(SN74ALS166 Parallel-in/ serial-out 8-bit shift register) {/Helvetica 2.500 cf} 
{/Helvetica cf} 3 16 0 1.00 1084 707 label
0.000 0.000 0.000 scb
-1.00 180 1092 1347 invert
1 1.00 2004 1251 1844 1251 1844 1331 1844 1347 1860 1347 5 polygon
-1.00 180 1908 1347 invert
1 1.00 1812 1299 1812 1219 2004 1219 3 polygon
1 1.00 3020 1251 2860 1251 2860 1331 2860 1347 2876 1347 5 polygon
-1.00 180 2924 1347 invert
1 1.00 2828 1299 2828 1219 3020 1219 3 polygon
(A) {ss} (Q) {/Times-Roman cf} 4 16 0 1.50 1764 1379 label
(B) {ss} (Q) {/Times-Roman cf} 4 16 0 1.50 2580 1379 label
{ss} (B) {/Times-Roman cf} 3 16 0 1.50 2004 1475 label
(H) {/Times-Roman cf} 2 16 0 1.50 3012 1459 label
(A) {/Times-Roman cf} 2 28 0 1.50 1180 1483 label
-1.00 180 1252 1363 and_gate
1 2.00 1300 1363 1332 1363 1332 1315 1364 1315 4 polygon
1 2.00 1156 1347 1188 1347 2 polygon
1 2.00 1188 1379 1156 1379 1156 1483 3 polygon
-1.00 180 2068 1363 and_gate
1 2.00 2116 1363 2148 1363 2148 1315 2180 1315 4 polygon
1 1.00 1972 1347 2004 1347 2 polygon
1 2.00 2004 1379 1972 1379 1972 1483 3 polygon
-1.00 180 3084 1363 and_gate
1 2.00 3132 1363 3164 1363 3164 1315 3196 1315 4 polygon
1 2.00 2988 1347 3020 1347 2 polygon
1 2.00 3020 1379 2988 1379 2988 1483 3 polygon
1 2.00 1524 1299 1460 1299 2 polygon
1 2.00 2340 1299 2276 1299 2 polygon
-1.00 180 1396 1299 or_gate
-1.00 180 2212 1299 or_gate
-1.00 180 3228 1299 or_gate
sce
1 1.00 2484 1051 8 0.00 360.00 xcarc
1 1.00 1668 1051 8 0.00 360.00 xcarc
1 1.00 3476 1051 8 0.00 360.00 xcarc
1.00 0 900 1075 nor
1.00 0 2484 995 jumper
1.00 0 1668 995 jumper
1 1.00 2484 1011 2484 1043 2 polygon
1 1.00 1668 1011 1668 1043 2 polygon
1.00 0 1668 931 jumper
1 1.00 1668 947 1668 979 2 polygon
1.00 0 2484 931 jumper
1 1.00 2484 947 2484 979 2 polygon
1 1.00 3476 1043 3476 867 924 867 3 polygon
1 1.00 1668 915 1668 867 2 polygon
1.00 0 1668 867 dot
1.00 0 2484 867 dot
1 1.00 2484 915 2484 867 2 polygon
(CLR) {ol} {/Helvetica cf} 3 16 0 1.00 916 879 label
1 1.00 964 1075 996 1075 996 995 3 polygon
1 1.00 844 1107 700 1107 2 polygon
1 1.00 844 1051 708 1051 2 polygon
(CLKINH) {/Times-Roman cf} 2 16 0 1.00 692 1059 label
1 1.00 3292 1299 3332 1299 2 polygon
0.000 0.000 0.000 scb
2.00 0 2628 1235 dot
2.00 0 2692 1235 dot
2.00 0 2748 1235 dot
1 1.00 2828 1299 2788 1299 2 polygon
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
