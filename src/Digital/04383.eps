%!PS-Adobe-3.0 EPSF-3.0
%%Title: 04383.eps
%%Creator: Xcircuit v3.2
%%CreationDate: Wed Oct 31 12:51:40 2007
%%Pages: 1
%%BoundingBox: 68 68 420 254
%%DocumentNeededResources: font Times-Roman font Helvetica 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.1
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--1/5/04  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 3.1 0
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 384 and 0 gt {/mshow {pop} def} {/mshow {show}
	def} ifelse just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {dup type
	/arraytype eq {exec} {12 string cvs true charpath flattenpath} ifelse}
	ifelse} repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {mshow} {dup type
	/arraytype eq {exec} {12 string cvs mshow} ifelse} ifelse} repeat
	grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore} def     

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginDocumentSetup

/arrowhead {
% trivial
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 1.00 endpath
endgate
} def

/arrow {
% trivial
begingate
1 0.80 0 -40 0 20 2 polygon
1.00 0 0 40 arrowhead
endgate
} def

/invert {
% trivial
begingate
0 1.00 -32 -40 -32 40 40 0 3 polygon
1 1.00 48 0 8 0.00 360.00 xcarc
1 1.00 -32 0 -48 0 2 polygon
1 1.00 56 0 64 0 2 polygon
1.000 0.000 0.000 scb
(Out) {/Times-Roman cf} 2 4 0 1.00 64 0 pinlabel
(In) {/Times-Roman cf} 2 7 0 1.00 -48 0 pinlabel
endgate
} def


%%EndDocumentSetup

%%Page: 1 1
%%PageOrientation: Portrait
/pgsave save def bop
% 32.00 8.00 gridspace
0.3799 inchscale
2.6000 setlinewidth 1177 517 translate

1 1.00 -384 516 -384 196 2 polygon
1 1.00 -192 516 -192 196 2 polygon
1 1.00 0 516 0 196 2 polygon
0 2.00 -576 516 -576 196 192 196 192 516 4 polygon
1.00 90 -608 452 arrow
1.00 90 -608 356 arrow
1.00 90 488 452 arrow
(clock) {/Times-Roman cf} 2 16 0 1.50 -656 1092 label
0.000 0.000 1.000 scb
(4) {/Times-Roman cf} 2 16 0 1.50 -672 484 label
(12) {/Times-Roman cf} 2 16 0 1.50 464 484 label
sce
1.50 0 -454 1168 invert
1.50 0 -187 1166 invert
1.50 90 -30 1166 arrow
1.50 90 -584 1168 arrow
(CL) {/Times-Roman cf} 2 16 0 1.50 -58 1200 label
1 1.00 -384 932 -384 612 2 polygon
1 1.00 -192 932 -192 612 2 polygon
1 1.00 0 932 0 612 2 polygon
1.00 90 -608 868 arrow
1.00 90 -608 772 arrow
1.00 90 232 868 arrow
0.000 0.000 1.000 scb
(1) {/Times-Roman cf} 2 16 0 1.50 -672 900 label
(13) {/Times-Roman cf} 2 16 0 1.50 232 900 label
sce
(+4) {hS} {ns} (1) {ss} (D) {/Helvetica cf} 7 16 0 1.50 16 868 label
{ns} (1) {ss} (D) {/Helvetica cf} 5 16 0 1.50 -544 868 label
(2) {ss} (D) {/Helvetica cf} 4 16 0 1.50 -544 452 label
(+5) {hS} {ns} {qS} (2) {ss} (D) {/Helvetica cf} 8 16 0 1.50 272 452 label
(CL) {/Times-Roman cf} 2 16 0 1.50 -672 788 label
1.00 90 640 452 arrow
1.00 90 640 356 arrow
0.000 0.000 1.000 scb
(6) {/Times-Roman cf} 2 16 0 1.50 592 484 label
(9) {/Times-Roman cf} 2 16 0 1.50 1712 484 label
sce
1 1.00 864 932 864 612 2 polygon
1 1.00 1056 932 1056 612 2 polygon
1 1.00 1248 932 1248 612 2 polygon
0 2.00 672 932 672 612 1440 612 1440 932 4 polygon
1.00 90 640 868 arrow
1.00 90 640 772 arrow
1.00 90 1480 868 arrow
0.000 0.000 1.000 scb
(5) {/Times-Roman cf} 2 16 0 1.50 592 900 label
(10) {/Times-Roman cf} 2 16 0 1.50 1480 900 label
sce
(+4) {hS} {ns} (3) {ss} (D) {/Helvetica cf} 7 16 0 1.50 1264 868 label
{ns} (3) {ss} (D) {/Helvetica cf} 5 16 0 1.50 704 868 label
(4) {ss} (D) {/Helvetica cf} 4 16 0 1.50 704 452 label
(+5) {hS} {ns} {qS} (4) {ss} (D) {/Helvetica cf} 8 16 0 1.50 1520 452 label
0.000 0.000 1.000 scb
(3) {/Times-Roman cf} 2 16 0 1.50 -664 1196 label
sce
0 2.00 256 516 256 196 448 196 448 516 4 polygon
1 1.00 192 448 256 448 2 polygon
1 1.00 224 452 224 580 464 580 3 polygon
1.00 90 472 580 arrow
0.000 0.000 1.000 scb
(11) {/Times-Roman cf} 2 16 0 1.50 464 612 label
sce
(+4) {hS} {ns} {qS} (2) {ss} (D) {/Helvetica cf} 8 16 0 1.50 16 452 label
1 1.00 864 516 864 196 2 polygon
1 1.00 1056 516 1056 196 2 polygon
1 1.00 1248 516 1248 196 2 polygon
0 2.00 672 516 672 196 1440 196 1440 516 4 polygon
0 2.00 1504 516 1504 196 1696 196 1696 516 4 polygon
1 1.00 1440 448 1504 448 2 polygon
1 1.00 1472 452 1472 580 1712 580 3 polygon
1.00 90 1688 580 arrow
(+4) {hS} {ns} {qS} (4) {ss} (D) {/Helvetica cf} 8 16 0 1.50 1264 452 label
0.000 0.000 1.000 scb
(8) {/Times-Roman cf} 2 16 0 1.50 1696 612 label
sce
0 2.00 256 612 256 836 384 836 384 612 4 polygon
1.00 90 424 772 arrow
0.000 0.000 1.000 scb
(2) {/Times-Roman cf} 2 16 0 1.50 424 804 label
sce
1 1.00 192 772 256 772 2 polygon
(latch) {/Helvetica cf} 2 16 0 1.50 416 676 label
1.50 0 -40 1072 invert
1.50 90 118 1072 arrow
(CL) {ol} {/Times-Roman cf} 3 16 0 1.50 124 1108 label
(CL to all 18-stages & latch.) {ol} {} (CL and ) {/Helvetica cf} 5 16 0 1.50 
320 1044 label
(CL) {ol} {/Times-Roman cf} 3 16 0 1.50 -672 628 label
1.00 90 -608 708 arrow
1.00 90 -608 292 arrow
1.00 90 640 708 arrow
1.00 90 640 292 arrow
{ns} (DC) {ss} ( = +3 to +18  V) {ns} (\(pin 14\)) {ns} (DD ) {ss} 
( \( pin 7\) = Gnd, V) {ns} (SS) {ss} (V) {/Helvetica cf} 15 31 0 1.50 1616 
1220 label
(CD4006b Serial-in/ serial-out shift register) {/Helvetica 2.000 cf} 
{/Helvetica cf} 3 16 0 1.00 -672 0 label
0 2.00 -576 932 -576 612 192 612 192 932 4 polygon
1 1.00 -358 1168 -262 1168 2 polygon
1 1.00 -304 1168 -304 1072 -112 1072 3 polygon
(CL) {/Times-Roman cf} 2 16 0 1.50 -672 372 label
(CL) {ol} {/Times-Roman cf} 3 16 0 1.50 -672 212 label
(CL) {/Times-Roman cf} 2 16 0 1.50 576 372 label
(CL) {ol} {/Times-Roman cf} 3 16 0 1.50 576 212 label
(CL) {/Times-Roman cf} 2 16 0 1.50 592 788 label
(CL) {ol} {/Times-Roman cf} 3 16 0 1.50 592 628 label
1 1.00 1696 448 1744 448 2 polygon
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
