%!PS-Adobe-3.0 EPSF-3.0
%%Title: shift/04411.eps
%%Creator: Xcircuit v3.1
%%CreationDate: Mon Aug  2 13:48:53 2004
%%Pages: 1
%%BoundingBox: 68 68 392 200
%%DocumentNeededResources: font Helvetica font Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.4
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--1/15/03  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.4 2
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {exec}
	ifelse } repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {show}{exec} ifelse}
	repeat grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate { /hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore} def     

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def bop rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/dot {
begingate
248 1.00 0 0 6 0.00 360.00 xcarc
endgate
} def

%%Page: 1 1
%%PageOrientation: Portrait
/pgsave save def bop
% 243 407 offsets
0.7881 inchscale
2.0000 setlinewidth

0.619 0.603 0.619 scb
224 1.00 243 407 243 599 435 599 435 407 4 polygon
sce
224 1.00 723 407 723 599 947 599 947 407 4 polygon
0.619 0.603 0.619 scb
497 0.10 462 447 457 444 454 443 448 441 435 439 447 437 457 434 462 431 460 
435 460 439 460 442 462 447 12 polygon
1 1.00 243 535 435 535 2 polygon
1 1.00 243 471 435 471 2 polygon
1 1.00 307 599 307 407 2 polygon
1 1.00 371 599 371 407 2 polygon
1 1.00 723 535 435 535 2 polygon
497 0.10 696 511 701 508 704 507 710 505 723 503 711 501 701 498 696 495 698 
499 698 503 698 506 696 511 12 polygon
1 1.00 723 503 435 503 2 polygon
(1) {/Times-Roman cf} 2 16 0 1.00 267 551 label
(2) {/Helvetica cf} 2 16 0 1.00 331 551 label
(3) {/Times-Roman cf} 2 16 0 1.00 395 551 label
(4) {/Times-Roman cf} 2 16 0 1.00 267 487 label
(5) {/Helvetica cf} 2 16 0 1.00 331 487 label
(6) {/Times-Roman cf} 2 16 0 1.00 395 487 label
(8) {/Times-Roman cf} 2 16 0 1.00 331 423 label
(7) {/Helvetica cf} 2 16 0 1.00 267 423 label
(9) {/Times-Roman cf} 2 16 0 1.00 395 423 label
(Keypad) {/Helvetica 0.750 cf} {/Helvetica cf} 3 16 0 1.00 275 359 label
sce
(Alarm) {/Helvetica 0.750 cf} {/Helvetica cf} 3 16 0 1.00 755 359 label
0.619 0.603 0.619 scb
497 0.10 462 543 457 540 454 539 448 537 435 535 447 533 457 530 462 527 460 
531 460 535 460 538 462 543 12 polygon
497 0.10 462 479 457 476 454 475 448 473 435 471 447 469 457 466 462 463 460 
467 460 471 460 474 462 479 12 polygon
1 1.00 723 471 435 471 2 polygon
1 1.00 723 439 435 439 2 polygon
sce
(Gnd) {/Times-Roman 0.750 cf} {/Times-Roman cf} 3 16 0 1.00 755 431 label
(Clock) {/Times-Roman 0.750 cf} {/Times-Roman cf} 3 16 0 1.00 755 463 label
(Serial data) {/Times-Roman 0.750 cf} {/Times-Roman cf} 3 16 0 1.00 755 495 
label
(+5V) {/Times-Roman 0.750 cf} {/Times-Roman cf} 3 16 0 1.00 755 527 label
(Alarm with remote keypad and display) {/Helvetica 0.750 cf} {/Helvetica cf} 3 
16 0 1.00 323 247 label
497 0.10 1208 447 1213 444 1216 443 1222 441 1235 439 1223 437 1213 434 1208 
431 1210 435 1210 439 1210 442 1208 447 12 polygon
497 0.10 1208 511 1213 508 1216 507 1222 505 1235 503 1223 501 1213 498 1208 
495 1210 499 1210 503 1210 506 1208 511 12 polygon
497 0.10 1208 543 1213 540 1216 539 1222 537 1235 535 1223 533 1213 530 1208 
527 1210 531 1210 535 1210 538 1208 543 12 polygon
497 0.10 1208 479 1213 476 1216 475 1222 473 1235 471 1223 469 1213 466 1208 
463 1210 467 1210 471 1210 474 1208 479 12 polygon
1 1.00 947 535 1235 535 2 polygon
1 1.00 1235 503 947 503 2 polygon
1 1.00 947 471 1235 471 2 polygon
1 1.00 947 439 1235 439 2 polygon
0 1.00 1235 663 1235 247 1315 247 1315 663 4 polygon
1.000 0.000 0.000 scb
1 1.00 1275 615 22 0.00 360.00 xcarc
1 1.00 1275 551 22 0.00 360.00 xcarc
1 1.00 1275 487 22 0.00 360.00 xcarc
1 1.00 1275 423 22 0.00 360.00 xcarc
1 1.00 1275 295 22 0.00 360.00 xcarc
sce
(Remote display) {/Helvetica 0.750 cf} {/Helvetica cf} 3 16 360 1.00 1011 295 
label
1.00 0 1259 391 dot
1.00 0 1259 359 dot
1.00 0 1259 327 dot
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
