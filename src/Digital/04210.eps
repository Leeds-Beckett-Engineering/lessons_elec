%!PS-Adobe-3.0 EPSF-3.0
%%Title: 04210.eps
%%Creator: Xcircuit v2.0
%%CreationDate: Thu Aug 23 11:09:10 2001
%%Pages: 1
%%BoundingBox: 68 68 379 180
%%DocumentNeededResources: font Helvetica font Helvetica-Oblique 
%%+ font Times-Roman font Symbol 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.0
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--2/25/99  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.0 2
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/cf { dup type /realtype eq {40 mul /fscale exch def} if dup /xfont exch def
   findfont fscale scalefont setfont } def
/Ss { gsave 0.67 dup scale gsave mty neg rmoveto
   glevel 1 add /glevel exch def } def
/ss { gsave 0.67 dup scale gsave mty 0.5 mul rmoveto
   glevel 1 add /glevel exch def } def
/ns { currentpoint transform   % preserve x position!
   glevel {grestore} repeat /glevel 0 def
   itransform pop currentpoint pop sub 0 rmoveto } def
/ul { showflag 1 eq { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { showflag 1 eq { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave true charpath flattenpath pathbbox pop exch pop sub
   grestore } def
/bs { stW 0 rmoveto } def
/pspc 0 def
/qS { (aa) stW (a a) stW sub 4 div 0 rmoveto } def
/hS { qS qS } def
/textx { dup 1 add copy 0 exch { exch dup type /stringtype eq
	{stringwidth pop add}{exec} ifelse } repeat neg ns } def
/mty { 0 topmat setmatrix (A) true charpath flattenpath pathbbox exch
   pop exch sub exch pop neg grestore } def
/texty { gsave 2 copy pop exec mty } def
/tcenter { textx grestore 0.5 mul 0 rmoveto } def
/tright  { textx grestore fspc sub 0 rmoveto } def
/tmiddle { texty 0.5 mul rmoveto } def
/ttop    { texty fspc sub rmoveto } def
/tshow {{ dup type /stringtype eq {show}{exec} ifelse} repeat ns } def

/label  { gsave translate 0 0 moveto rotate /just exch def just 16 and 0 gt
	{0 1 dtransform gsave pagemat setmatrix idtransform exch grestore
	1 0 dtransform gsave pagemat setmatrix idtransform exch grestore
	dup 0 eq {pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse
	{-1 /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse exch 0 lt
	{-1 /just just dup 12 and 4 ne {12 xor} if def} {1} ifelse scale } if
	/glevel 0 def /showflag 0 def /fspc pspc def
	just 1 and 0 gt {gsave just 2 and 0 gt {tright}{tcenter} ifelse}
	{fspc 0 rmoveto} ifelse
	just 4 and 0 gt {just 8 and 0 gt {ttop}{tmiddle} ifelse}
	{0 fspc rmoveto} ifelse
	/showflag 1 def tshow grestore } def
/pinlabel { hlevel 0 eq { /pspc 20 def label /pspc 0 def }
	{ pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/begingate { /hlevel hlevel 1 add def gsave translate 0 0 moveto dup 0 lt
	{neg 1 sub -1 1 scale} if rotate dup scale } bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore } bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt { newpath } { stroke } ifelse grestore } def
/scb { gsave setrgbcolor } bind def  /sce { grestore } bind def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 setgray } def
/insertion {/PSobj save def /showpage {} def bop translate} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/samp {
% -80 -80 160 160 bbox
begingate
0  1.00 -80 -80 -80 80 80 0 3 polygon
1  1.00 0 -40 0 -80 2 polygon
(-) {/Symbol 1.000 cf} 2 5 0 -61 50 label
(+) {/Symbol 1.000 cf} 2 5 0 -61 -46 label
1.000 0.000 0.000 scb
(in.m) {/Times-Roman 1.000 cf} 2 7 0 -80 48 pinlabel
(in.p) {/Times-Roman 1.000 cf} 2 7 0 -80 -48 pinlabel
(out) {/Times-Roman 1.000 cf} 2 4 0 80 0 pinlabel
(bias) {/Times-Roman 1.000 cf} 2 13 0 0 -80 pinlabel
sce
endgate
} def

/arrowhead {
% -12 -32 24 36 bbox
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249  1.00 endpath
endgate
} def

/arrow {
% -12 -40 24 80 bbox
begingate
1  0.80 0 -40 0 20 2 polygon
1.00 0 0 40 arrowhead
endgate
} def

%%Page: 1 1
%%PageOrientation: Portrait
/pgsave save def bop
% 1053 589 offsets
0.5500 inchscale
2.6000 setlinewidth

1  2.00 637 621 1501 621 2 polygon
1  2.00 637 557 1501 557 2 polygon
1  2.00 621 605 621 573 637 557 637 621 spline
1  2.00 1517 605 1517 573 1501 557 1501 621 spline
241  1.00 637 605 637 573 653 573 653 605 637 605 5 polygon
241  1.00 1485 605 1485 573 1501 573 1501 605 1485 605 5 polygon
1  1.00 637 597 605 597 605 605 3 polygon
1  1.00 637 581 605 581 605 573 3 polygon
1  1.00 1501 581 1533 581 1533 573 3 polygon
1  1.00 1501 597 1533 597 1533 605 3 polygon
0.810 0.810 0.810 scb
48  1.00 637 621 637 557 1501 557 1501 621 4 polygon
sce
(Mercury) {/Helvetica 1.000 cf} 2 16 0 973 581 label
1  1.00 665 597 665 581 661 577 661 601 spline
1  1.00 677 601 677 577 669 569 669 609 spline
1  1.00 689 605 689 573 677 561 677 617 spline
1  1.00 705 605 705 573 693 561 693 617 spline
1  1.00 721 605 721 573 709 561 709 617 spline
1  1.00 737 605 737 573 725 561 725 617 spline
1  1.00 785 605 785 573 773 561 773 617 spline
1  1.00 801 605 801 573 789 561 789 617 spline
1  1.00 817 605 817 573 805 561 805 617 spline
1  1.00 865 605 865 573 853 561 853 617 spline
1  1.00 881 605 881 573 869 561 869 617 spline
1  1.00 897 605 897 573 885 561 885 617 spline
1  1.00 1201 605 1201 573 1189 561 1189 617 spline
1  1.00 1217 605 1217 573 1205 561 1205 617 spline
1  1.00 1233 605 1233 573 1221 561 1221 617 spline
1  1.00 1313 605 1313 573 1301 561 1301 617 spline
1  1.00 1329 605 1329 573 1317 561 1317 617 spline
1  1.00 1345 605 1345 573 1333 561 1333 617 spline
1  1.00 1425 605 1425 573 1413 561 1413 617 spline
1  1.00 1441 605 1441 573 1429 561 1429 617 spline
1  1.00 1457 605 1457 573 1445 561 1445 617 spline
1.00 0 493 589 samp
1  1.00 605 605 605 621 509 621 3 polygon
1  1.00 605 573 605 557 509 557 3 polygon
1.00 0 1677 589 samp
1  1.00 1533 605 1533 637 1597 637 3 polygon
1  1.00 1533 573 1533 541 1597 541 3 polygon
(Amplifier) {/Helvetica 1.000 cf} 2 16 0 429 685 label
(Amplifier) {/Helvetica 1.000 cf} 2 16 0 1597 685 label
1  1.00 1757 589 1821 589 1821 429 349 429 349 589 413 589 6 polygon
(Data pulses moving at speed of sound) {/Helvetica-Oblique 1.000 cf} 2 16 0 733 685 label
1.00 270 797 653 arrow
1.00 270 941 653 arrow
1.00 270 1085 653 arrow
1.00 270 1229 653 arrow
1.00 270 1373 653 arrow
(Data pulses moving at speed of light) {/Helvetica-Oblique 1.000 cf} 2 16 0 749 349 label
1.00 90 1357 397 arrow
1.00 90 1213 397 arrow
1.00 90 1069 397 arrow
1.00 90 925 397 arrow
1.00 90 781 397 arrow
(Mercury tube delay-line memory) {/Helvetica 1.000 cf} 2 16 0 749 829 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
