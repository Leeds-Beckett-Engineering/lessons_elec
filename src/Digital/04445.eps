%!PS-Adobe-3.0 EPSF-3.0
%%Title: shift/04445.eps
%%Creator: Xcircuit v3.1
%%CreationDate: Sat Sep 18 01:55:07 2004
%%Pages: 1
%%BoundingBox: 68 68 292 257
%%DocumentNeededResources: font Helvetica font Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.4
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--1/15/03  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.4 2
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {exec}
	ifelse } repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {show}{exec} ifelse}
	repeat grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate { /hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore} def     

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def bop rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%Page: 1 1
%%PageOrientation: Portrait
/pgsave save def bop
% 594 314 offsets
% 32.00 4.00 gridspace
0.8862 inchscale
2.0000 setlinewidth

1 1.00 402 570 594 570 2 polygon
1 1.00 402 378 594 378 2 polygon
1 1.00 402 410 594 410 2 polygon
1 1.00 402 442 594 442 2 polygon
1 1.00 402 474 594 474 2 polygon
1 1.00 402 506 594 506 2 polygon
1 1.00 402 538 594 538 2 polygon
1 1.00 578 602 578 618 594 618 594 762 402 762 402 618 418 618 418 602 
8 polygon
1 1.00 594 602 594 282 402 282 402 602 594 602 5 polygon
(SRG8) {/Times-Roman 0.500 cf} {/Times-Roman 0.500 cf} {/Times-Roman cf} 4 16 0 
1.00 466 730 label
(C1/) {/Times-Roman 0.500 cf} {/Times-Roman cf} 3 16 0 1.00 430 710 label
1 1.00 690 586 594 586 2 polygon
1 1.00 690 554 594 554 2 polygon
1 1.00 690 522 594 522 2 polygon
1 1.00 690 490 594 490 2 polygon
1 1.00 690 458 594 458 2 polygon
1 1.00 690 426 594 426 2 polygon
1 1.00 690 394 594 394 2 polygon
1 1.00 690 362 594 362 2 polygon
1 1.00 402 714 306 714 2 polygon
(13) {/Times-Roman 0.500 cf} {/Times-Roman 0.500 cf} {/Times-Roman cf} 4 23 0 
1.00 658 438 label
(11) {/Times-Roman 0.500 cf} {/Times-Roman 0.500 cf} {/Times-Roman cf} 4 23 0 
1.00 656 374 label
(5) {/Times-Roman 0.500 cf} {/Times-Roman 0.500 cf} {/Times-Roman cf} 4 23 0 
1.00 660 568 label
(6) {/Times-Roman 0.500 cf} {/Times-Roman 0.500 cf} {/Times-Roman cf} 4 23 0 
1.00 658 534 label
(7) {/Times-Roman 0.500 cf} {/Times-Roman 0.500 cf} {/Times-Roman cf} 4 23 0 
1.00 658 502 label
(15) {/Times-Roman 0.500 cf} {/Times-Roman 0.500 cf} {/Times-Roman cf} 4 23 0 
1.00 322 662 label
(2) {/Times-Roman 0.500 cf} {/Times-Roman 0.500 cf} {/Times-Roman cf} 4 23 0 
1.00 324 597 label
(3) {/Times-Roman 0.500 cf} {/Times-Roman 0.500 cf} {/Times-Roman cf} 4 23 0 
1.00 322 726 label
(4) {/Times-Roman 0.500 cf} {/Times-Roman 0.500 cf} {/Times-Roman cf} 4 23 0 
1.00 660 598 label
(SERIAL OUT) {/Times-Roman 0.500 cf} {/Times-Roman 0.500 cf} {/Times-Roman cf} 
4 23 0 1.00 864 340 label
(1) {ss} (Q) {/Times-Roman 0.500 cf} {/Times-Roman 0.500 cf} {/Times-Roman cf} 
6 16 0 1.00 710 586 label
(2) {ss} (Q) {/Times-Roman 0.500 cf} {/Times-Roman 0.500 cf} {/Times-Roman cf} 
6 16 0 1.00 710 554 label
(3) {ss} (Q) {/Times-Roman 0.500 cf} {/Times-Roman 0.500 cf} {/Times-Roman cf} 
6 16 0 1.00 710 522 label
(4) {ss} (Q) {/Times-Roman 0.500 cf} {/Times-Roman 0.500 cf} {/Times-Roman cf} 
6 16 0 1.00 710 490 label
(5) {ss} (Q) {/Times-Roman 0.500 cf} {/Times-Roman 0.500 cf} {/Times-Roman cf} 
6 16 0 1.00 710 458 label
(6) {ss} (Q) {/Times-Roman 0.500 cf} {/Times-Roman 0.500 cf} {/Times-Roman cf} 
6 16 0 1.00 710 426 label
(7) {ss} (Q) {/Times-Roman 0.500 cf} {/Times-Roman 0.500 cf} {/Times-Roman cf} 
6 16 0 1.00 710 394 label
(8) {ss} (Q) {/Times-Roman 0.500 cf} {/Times-Roman 0.500 cf} {/Times-Roman cf} 
6 16 0 1.00 710 362 label
(CLOCK) {/Times-Roman 0.500 cf} {/Times-Roman 0.500 cf} {/Times-Roman cf} 4 16 
0 1.00 216 710 label
(CD4094B/ 74HCT4094  ANSI Symbol) {/Helvetica 0.700 cf} {/Helvetica cf} 3 16 0 
1.00 240 220 label
497 0.10 485 724 490 721 493 720 499 718 512 716 500 714 490 711 485 708 487 
712 487 716 487 719 485 724 12 polygon
1 1.00 486 716 468 716 2 polygon
1 1.00 402 586 306 586 2 polygon
(14) {/Times-Roman 0.500 cf} {/Times-Roman 0.500 cf} {/Times-Roman cf} 4 23 0 
1.00 658 470 label
0.000 0.000 0.000 scb
1 1.00 424 714 402 722 2 polygon
1 1.00 424 714 402 706 2 polygon
sce
(1D) {/Times-Roman 0.500 cf} {/Times-Roman cf} 3 16 0 1.00 406 582 label
1 1.00 690 330 594 330 2 polygon
(') {/Times-Roman 0.500 cf} {ns} (S) {ss} (Q) {/Times-Roman 0.500 cf} 
{/Times-Roman 0.500 cf} {/Times-Roman cf} 9 16 0 1.00 710 302 label
(9) {/Times-Roman 0.500 cf} {/Times-Roman 0.500 cf} {/Times-Roman cf} 4 23 0 
1.00 658 342 label
0.000 0.000 0.000 scb
1 1.00 482 602 482 346 594 346 3 polygon
sce
1 1.00 402 682 306 682 2 polygon
0.000 0.000 0.000 scb
1 1.00 424 682 402 690 2 polygon
1 1.00 424 682 402 674 2 polygon
sce
(STROBE) {/Times-Roman 0.500 cf} {/Times-Roman 0.500 cf} {/Times-Roman cf} 4 16 
0 1.00 216 678 label
(12) {/Times-Roman 0.500 cf} {/Times-Roman 0.500 cf} {/Times-Roman cf} 4 23 0 
1.00 660 406 label
(C2) {/Times-Roman 0.500 cf} {/Times-Roman cf} 3 16 0 1.00 430 678 label
(2D) {/Times-Roman 0.500 cf} {/Times-Roman cf} 3 16 0 1.00 490 582 label
1 1.00 402 650 304 650 2 polygon
(OUTPUT ) {/Times-Roman 0.500 cf} {/Times-Roman 0.500 cf} {/Times-Roman cf} 4 
16 0 1.00 216 652 label
(10) {/Times-Roman 0.500 cf} {/Times-Roman 0.500 cf} {/Times-Roman cf} 4 23 0 
1.00 660 310 label
1 1.00 588 598 564 598 576 574 588 598 4 polygon
(3) {/Times-Roman 0.500 cf} {/Times-Roman cf} 3 16 0 1.00 546 582 label
(1) {/Times-Roman 0.500 cf} {/Times-Roman 0.500 cf} {/Times-Roman cf} 4 23 0 
1.00 322 694 label
(EN3) {/Times-Roman 0.500 cf} {/Times-Roman cf} 3 16 0 1.00 430 646 label
(ENABLE) {/Times-Roman 0.500 cf} {/Times-Roman 0.500 cf} {/Times-Roman cf} 4 16 
0 1.00 216 636 label
1 1.00 690 298 594 298 2 polygon
(S) {ss} (Q) {/Times-Roman 0.500 cf} {/Times-Roman 0.500 cf} {/Times-Roman cf} 
6 16 0 1.00 710 338 label
(SERIAL OUT) {/Times-Roman 0.500 cf} {/Times-Roman 0.500 cf} {/Times-Roman cf} 
4 23 0 1.00 866 304 label
(SERIAL ) {/Times-Roman 0.500 cf} {/Times-Roman 0.500 cf} {/Times-Roman cf} 4 
20 0 1.00 218 596 label
(IN) {/Times-Roman 0.500 cf} {/Times-Roman 0.500 cf} {/Times-Roman cf} 4 20 0 
1.00 218 578 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
