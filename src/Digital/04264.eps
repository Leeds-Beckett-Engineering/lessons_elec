%!PS-Adobe-3.0 EPSF-3.0
%%Title: 04264.eps
%%Creator: Xcircuit v2.0
%%CreationDate: Wed Jun 20 19:21:06 2001
%%Pages: 1
%%BoundingBox: 68 68 346 305
%%DocumentNeededResources: font Helvetica font Times-Roman font Symbol 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.0
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--2/25/99  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.0 2
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/cf { dup type /realtype eq {40 mul /fscale exch def} if dup /xfont exch def
   findfont fscale scalefont setfont } def
/Ss { gsave 0.67 dup scale gsave mty neg rmoveto
   glevel 1 add /glevel exch def } def
/ss { gsave 0.67 dup scale gsave mty 0.5 mul rmoveto
   glevel 1 add /glevel exch def } def
/ns { currentpoint transform   % preserve x position!
   glevel {grestore} repeat /glevel 0 def
   itransform pop currentpoint pop sub 0 rmoveto } def
/ul { showflag 1 eq { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { showflag 1 eq { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave true charpath flattenpath pathbbox pop exch pop sub
   grestore } def
/bs { stW 0 rmoveto } def
/pspc 0 def
/qS { (aa) stW (a a) stW sub 4 div 0 rmoveto } def
/hS { qS qS } def
/textx { dup 1 add copy 0 exch { exch dup type /stringtype eq
	{stringwidth pop add}{exec} ifelse } repeat neg ns } def
/mty { 0 topmat setmatrix (A) true charpath flattenpath pathbbox exch
   pop exch sub exch pop neg grestore } def
/texty { gsave 2 copy pop exec mty } def
/tcenter { textx grestore 0.5 mul 0 rmoveto } def
/tright  { textx grestore fspc sub 0 rmoveto } def
/tmiddle { texty 0.5 mul rmoveto } def
/ttop    { texty fspc sub rmoveto } def
/tshow {{ dup type /stringtype eq {show}{exec} ifelse} repeat ns } def

/label  { gsave translate 0 0 moveto rotate /just exch def just 16 and 0 gt
	{0 1 dtransform gsave pagemat setmatrix idtransform exch grestore
	1 0 dtransform gsave pagemat setmatrix idtransform exch grestore
	dup 0 eq {pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse
	{-1 /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse exch 0 lt
	{-1 /just just dup 12 and 4 ne {12 xor} if def} {1} ifelse scale } if
	/glevel 0 def /showflag 0 def /fspc pspc def
	just 1 and 0 gt {gsave just 2 and 0 gt {tright}{tcenter} ifelse}
	{fspc 0 rmoveto} ifelse
	just 4 and 0 gt {just 8 and 0 gt {ttop}{tmiddle} ifelse}
	{0 fspc rmoveto} ifelse
	/showflag 1 def tshow grestore } def
/pinlabel { hlevel 0 eq { /pspc 20 def label /pspc 0 def }
	{ pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/begingate { /hlevel hlevel 1 add def gsave translate 0 0 moveto dup 0 lt
	{neg 1 sub -1 1 scale} if rotate dup scale } bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore } bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt { newpath } { stroke } ifelse grestore } def
/scb { gsave setrgbcolor } bind def  /sce { grestore } bind def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 setgray } def
/insertion {/PSobj save def /showpage {} def bop translate} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/vdd {
% -32 0 64 66 bbox
begingate
1  1.00 0 0 0 32 2 polygon
1  1.00 -32 32 32 32 2 polygon
(Vdd) {/Times-Roman 0.900 cf} 2 17 0 0 38 label
1.000 0.000 0.000 scb
(Vdd) {/Times-Roman 1.000 cf} 2 13 0 0 0 pinglobal
sce
endgate
} def

/gnd {
% -32 -60 64 68 bbox
begingate
1  1.00 0 0 0 -32 2 polygon
1  1.00 -32 -32 32 -32 2 polygon
1  1.00 -18 -46 18 -46 2 polygon
1  1.00 -4 -60 4 -60 2 polygon
1.000 0.000 0.000 scb
(GND) {/Times-Roman 1.000 cf} 2 1 0 0 0 pinglobal
sce
endgate
} def

/jumper {
% -4 -14 18 28 bbox
begingate
1  1.00 0 0 10 -90.00 90.00 xcarc
1  1.00 0 10 0 16 2 polygon
1  1.00 0 -10 0 -16 2 polygon
1.000 0.000 0.000 scb
(a) {/Times-Roman 1.000 cf} 2 1 0 0 16 pinlabel
(a) {/Times-Roman 1.000 cf} 2 13 0 0 -16 pinlabel
sce
endgate
} def

/dot {
% -10 -10 20 20 bbox
begingate
248  1.00 0 0 6 0.00 360.00 xcarc
endgate
} def

/opamp {
% -80 -80 160 160 bbox
begingate
0  1.00 -80 -80 -80 80 80 0 3 polygon
(-) {/Symbol 1.000 cf} 2 5 0 -61 50 label
(+) {/Symbol 1.000 cf} 2 5 0 -61 -46 label
1.000 0.000 0.000 scb
(in.m) {/Times-Roman 1.000 cf} 2 7 0 -80 48 pinlabel
(in.p) {/Times-Roman 1.000 cf} 2 7 0 -80 -48 pinlabel
(out) {/Times-Roman 1.000 cf} 2 4 0 80 0 pinlabel
sce
endgate
} def

%%Page: 04259.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
% 896 656 offsets
% 32.00 4.00 gridspace
0.7500 inchscale
2.6000 setlinewidth

1  1.00 736 944 768 944 2 polygon
1  1.00 736 912 768 912 2 polygon
1  1.00 736 880 768 880 2 polygon
1  1.00 736 848 768 848 2 polygon
1  1.00 736 816 768 816 2 polygon
1  1.00 736 784 768 784 2 polygon
1  1.00 736 752 768 752 2 polygon
1  1.00 736 720 768 720 2 polygon
0  1.00 736 976 736 688 608 688 608 976 4 polygon
(CTR) {/Helvetica 1.000 cf} 2 16 0 632 824 label
1  1.00 1024 944 1056 944 2 polygon
1  1.00 1024 912 1056 912 2 polygon
1  1.00 1024 880 1056 880 2 polygon
1  1.00 1024 848 1056 848 2 polygon
1  1.00 1024 816 1056 816 2 polygon
1  1.00 1024 784 1056 784 2 polygon
1  1.00 1024 752 1056 752 2 polygon
1  1.00 1024 720 1056 720 2 polygon
0  1.00 1184 976 1184 688 1056 688 1056 976 4 polygon
(DAC) {/Helvetica 1.000 cf} 2 16 0 1080 936 label
1  1.00 1184 848 1216 848 2 polygon
1.00 0 672 976 vdd
1.00 0 672 688 gnd
1.00 0 1120 688 gnd
1.00 0 1120 976 vdd
1  1.00 768 944 1024 944 2 polygon
1  1.00 768 912 1024 912 2 polygon
1  1.00 768 880 1024 880 2 polygon
1  1.00 768 848 1024 848 2 polygon
1  1.00 768 816 1024 816 2 polygon
1  1.00 768 784 1024 784 2 polygon
1  1.00 768 752 1024 752 2 polygon
1  1.00 768 720 1024 720 2 polygon
1  1.00 1024 496 1056 496 2 polygon
1  1.00 1024 464 1056 464 2 polygon
1  1.00 1024 432 1056 432 2 polygon
1  1.00 1024 400 1056 400 2 polygon
1  1.00 1024 368 1056 368 2 polygon
1  1.00 1024 336 1056 336 2 polygon
1  1.00 1024 304 1056 304 2 polygon
1  1.00 1024 272 1056 272 2 polygon
1.00 0 1024 720 jumper
1.00 0 1024 752 jumper
1.00 0 1024 784 jumper
1.00 0 1024 816 jumper
1.00 0 1024 848 jumper
1.00 0 1024 880 jumper
1.00 0 1024 912 jumper
1  1.00 1024 928 1024 944 2 polygon
1.00 0 1024 944 dot
1  1.00 1024 704 1024 496 2 polygon
1.00 0 992 720 jumper
1.00 0 992 752 jumper
1.00 0 992 784 jumper
1.00 0 992 816 jumper
1.00 0 992 848 jumper
1.00 0 992 880 jumper
1.00 0 992 912 dot
1  1.00 992 912 992 896 2 polygon
1  1.00 992 704 992 464 1024 464 3 polygon
1.00 0 960 720 jumper
1.00 0 960 752 jumper
1.00 0 960 784 jumper
1.00 0 960 816 jumper
1.00 0 960 848 jumper
1.00 0 960 880 dot
1  1.00 960 880 960 864 2 polygon
1  1.00 960 704 960 432 1024 432 3 polygon
1.00 0 928 720 jumper
1.00 0 928 752 jumper
1.00 0 928 784 jumper
1.00 0 928 816 jumper
1.00 0 928 848 dot
1  1.00 928 848 928 832 2 polygon
1  1.00 928 704 928 400 1024 400 3 polygon
1.00 0 896 720 jumper
1.00 0 896 752 jumper
1.00 0 896 784 jumper
1.00 0 896 816 dot
1  1.00 896 816 896 800 2 polygon
1  1.00 896 704 896 368 1024 368 3 polygon
1.00 0 864 720 jumper
1.00 0 864 752 jumper
1.00 0 864 784 dot
1  1.00 864 784 864 768 2 polygon
1  1.00 864 704 864 336 1024 336 3 polygon
1.00 0 832 720 jumper
1.00 0 832 752 dot
1  1.00 832 752 832 736 2 polygon
1  1.00 832 704 832 304 1024 304 3 polygon
1  1.00 1024 272 800 272 800 720 3 polygon
1.00 0 800 720 dot
1.00 0 496 480 opamp
1  1.00 1216 848 1216 1072 384 1072 384 528 416 528 5 polygon
1  1.00 416 432 320 432 2 polygon
0.000 1.000 0.000 scb
1  1.00 464 944 464 960 480 960 480 928 496 928 496 960 512 960 512 928 528 928 
528 944 10 polygon
sce
1  1.00 608 960 640 944 608 928 3 polygon
(in) {ss} (V) {/Times-Roman 1.000 cf} 4 16 0 256 432 label
1  1.00 608 944 544 944 2 polygon
0.603 0.603 0.603 scb
1  1.00 1056 512 1072 512 1072 256 1056 256 4 polygon
1  1.00 1072 384 1088 384 2 polygon
sce
(Binary) {/Helvetica 1.000 cf} 2 16 0 1104 392 label
(output) {/Helvetica 1.000 cf} 2 16 0 1104 360 label
1  1.00 576 480 608 480 608 592 544 592 544 752 608 752 6 polygon
(U/D) {/Helvetica 1.000 cf} 2 16 0 624 736 label
1  1.00 664 772 696 772 2 polygon
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
