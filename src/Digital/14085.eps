%!PS-Adobe-3.0 EPSF-3.0
%%Title: ~/Digital/14085.eps
%%Creator: Xcircuit v3.1
%%CreationDate: Sat Jun 19 16:19:00 2004
%%Pages: 1
%%BoundingBox: 68 68 292 239
%%DocumentNeededResources: font Helvetica font Courier 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.4
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--1/15/03  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.4 2
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {exec}
	ifelse } repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {show}{exec} ifelse}
	repeat grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate { /hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore} def     

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def bop rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%Page: 1 1
%%PageOrientation: Portrait
/pgsave save def bop
% 1055 932 offsets
% 784.82 2.05 gridspace
0.7129 inchscale
2.6000 setlinewidth

1.000 0.000 0.000 scb
1 1.00 404 740 108 0.00 360.00 xcarc
sce
0 1.00 270 878 270 607 649 607 649 878 4 polygon
1.000 0.000 0.000 scb
1 1.00 273 660 331 660 2 polygon
1 1.00 484 661 645 661 2 polygon
1 1.00 502 688 645 688 2 polygon
1 1.00 273 688 308 688 2 polygon
1 1.00 273 714 301 714 2 polygon
1 1.00 512 716 647 716 2 polygon
1 1.00 517 744 647 744 647 744 3 polygon
1 1.00 273 744 298 744 298 744 3 polygon
1 1.00 274 770 303 770 303 770 3 polygon
1 1.00 512 770 647 770 647 770 3 polygon
1 1.00 502 795 645 795 2 polygon
1 1.00 273 795 311 795 2 polygon
1 1.00 479 823 647 823 2 polygon
1 1.00 273 821 288 821 2 polygon
1 1.00 334 854 647 854 2 polygon
1 1.00 273 851 283 851 2 polygon
1 1.00 275 635 364 635 2 polygon
1 1.00 436 634 645 634 2 polygon
(A) {/Courier cf} 2 16 0 1.00 348 786 label
0.000 0.000 1.000 scb
1 1.00 514 404 108 -180.00 180.00 xcarc
sce
0 1.00 648 540 648 269 269 269 269 540 4 polygon
0.000 0.000 1.000 scb
(B) {ol} {/Courier cf} 3 19 0 1.00 620 488 label
1 1.00 287 539 287 269 2 polygon
1 1.00 311 539 311 269 2 polygon
1 1.00 336 539 336 269 2 polygon
1 1.00 360 539 360 269 2 polygon
1 1.00 385 539 385 269 2 polygon
1 1.00 409 375 409 269 2 polygon
1 1.00 434 326 434 269 2 polygon
1 1.00 458 539 458 498 2 polygon
1 1.00 483 298 483 269 2 polygon
1 1.00 508 294 508 269 2 polygon
1 1.00 532 294 532 269 2 polygon
1 1.00 557 539 557 506 2 polygon
1 1.00 409 539 409 433 2 polygon
1 1.00 458 310 458 269 2 polygon
1 1.00 434 538 434 481 2 polygon
1 1.00 508 539 508 514 2 polygon
1 1.00 532 539 532 510 2 polygon
1 1.00 483 539 483 510 2 polygon
1 1.00 581 539 581 490 2 polygon
1 1.00 557 302 557 269 2 polygon
1 1.00 581 318 581 269 2 polygon
1 1.00 606 343 606 269 2 polygon
1 1.00 630 539 630 269 2 polygon
1 1.00 606 482 606 465 2 polygon
1 1.00 606 539 606 527 2 polygon
1 1.00 943 743 108 -180.00 180.00 xcarc
sce
0 1.00 1077 879 1077 608 698 608 698 879 4 polygon
0.000 0.000 1.000 scb
(B) {ol} {/Courier cf} 3 19 0 1.00 1049 827 label
1 1.00 716 878 716 608 2 polygon
1 1.00 740 878 740 608 2 polygon
1 1.00 765 878 765 608 2 polygon
1 1.00 789 878 789 608 2 polygon
1 1.00 814 878 814 608 2 polygon
1 1.00 838 714 838 608 2 polygon
1 1.00 863 665 863 608 2 polygon
1 1.00 887 878 887 837 2 polygon
1 1.00 912 637 912 608 2 polygon
1 1.00 937 633 937 608 2 polygon
1 1.00 961 633 961 608 2 polygon
1 1.00 986 878 986 845 2 polygon
1 1.00 838 878 838 772 2 polygon
1 1.00 887 649 887 608 2 polygon
1 1.00 863 877 863 820 2 polygon
1 1.00 937 878 937 853 2 polygon
1 1.00 961 878 961 849 2 polygon
1 1.00 912 878 912 849 2 polygon
1 1.00 1010 878 1010 829 2 polygon
1 1.00 986 641 986 608 2 polygon
1 1.00 1010 657 1010 608 2 polygon
1 1.00 1035 682 1035 608 2 polygon
1 1.00 1059 878 1059 608 2 polygon
1 1.00 1035 821 1035 804 2 polygon
1 1.00 1035 878 1035 866 2 polygon
1.000 0.000 0.000 scb
1 1.00 401 397 108 0.00 360.00 xcarc
1 1.00 270 317 328 317 2 polygon
1 1.00 475 318 646 318 2 polygon
1 1.00 499 345 646 345 2 polygon
1 1.00 270 345 305 345 2 polygon
1 1.00 270 371 298 371 2 polygon
1 1.00 509 373 644 373 2 polygon
1 1.00 514 401 644 401 644 401 3 polygon
1 1.00 270 401 295 401 295 401 3 polygon
1 1.00 271 427 300 427 300 427 3 polygon
1 1.00 509 427 644 427 644 427 3 polygon
1 1.00 499 452 642 452 2 polygon
1 1.00 270 452 308 452 2 polygon
1 1.00 476 480 644 480 2 polygon
1 1.00 270 478 285 478 2 polygon
1 1.00 331 511 644 511 2 polygon
1 1.00 270 508 280 508 2 polygon
1 1.00 272 292 361 292 2 polygon
1 1.00 433 293 647 293 2 polygon
0.000 0.000 1.000 scb
(B) {/Courier cf} 2 19 0 1.00 1000 778 label
0.810 0.000 0.000 scb
(A) {ol} {/Courier cf} 3 16 0 1.00 298 824 label
(A) {ol} {/Courier cf} 3 16 0 1.00 290 489 label
0.000 0.000 0.000 scb
(  double hatch ) {/Helvetica cf} (B) {ol} {/Courier cf} {ol} {} ( ) 
{/Helvetica cf} (A) {ol} {/Courier cf} {ol} {/Helvetica cf} 14 16 0 1.00 721 
286 label
( any hatch) {/Helvetica cf} (B) {ol} {/Courier cf} {ol} {} (+) {/Helvetica cf} 
(A) {ol} {/Courier cf} 12 16 0 1.00 717 494 label
1 1.00 711 294 613 302 2 polygon
1 1.00 711 498 368 408 2 polygon
1 1.00 711 490 572 417 2 polygon
1 1.00 720 490 621 359 630 359 3 polygon
sce
1 1.00 458 387 706 378 2 polygon
0.000 0.000 0.000 scb
( clear area) {/Helvetica cf} (B) {ol} {/Courier cf} {ol} {} (+) 
{/Helvetica cf} (A) {ol} {/Courier cf} 12 16 0 1.00 725 371 label
sce
1 1.00 723 409 799 409 2 polygon
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
