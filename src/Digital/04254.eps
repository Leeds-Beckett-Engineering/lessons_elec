%!PS-Adobe-3.0 EPSF-3.0
%%Title: 04254.eps
%%Creator: Xcircuit v2.0
%%CreationDate: Wed Jun 20 12:40:28 2001
%%Pages: 1
%%BoundingBox: 68 68 382 254
%%DocumentNeededResources: font Helvetica font Helvetica-Oblique 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.0
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--2/25/99  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.0 2
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/cf { dup type /realtype eq {40 mul /fscale exch def} if dup /xfont exch def
   findfont fscale scalefont setfont } def
/Ss { gsave 0.67 dup scale gsave mty neg rmoveto
   glevel 1 add /glevel exch def } def
/ss { gsave 0.67 dup scale gsave mty 0.5 mul rmoveto
   glevel 1 add /glevel exch def } def
/ns { currentpoint transform   % preserve x position!
   glevel {grestore} repeat /glevel 0 def
   itransform pop currentpoint pop sub 0 rmoveto } def
/ul { showflag 1 eq { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { showflag 1 eq { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave true charpath flattenpath pathbbox pop exch pop sub
   grestore } def
/bs { stW 0 rmoveto } def
/pspc 0 def
/qS { (aa) stW (a a) stW sub 4 div 0 rmoveto } def
/hS { qS qS } def
/textx { dup 1 add copy 0 exch { exch dup type /stringtype eq
	{stringwidth pop add}{exec} ifelse } repeat neg ns } def
/mty { 0 topmat setmatrix (A) true charpath flattenpath pathbbox exch
   pop exch sub exch pop neg grestore } def
/texty { gsave 2 copy pop exec mty } def
/tcenter { textx grestore 0.5 mul 0 rmoveto } def
/tright  { textx grestore fspc sub 0 rmoveto } def
/tmiddle { texty 0.5 mul rmoveto } def
/ttop    { texty fspc sub rmoveto } def
/tshow {{ dup type /stringtype eq {show}{exec} ifelse} repeat ns } def

/label  { gsave translate 0 0 moveto rotate /just exch def just 16 and 0 gt
	{0 1 dtransform gsave pagemat setmatrix idtransform exch grestore
	1 0 dtransform gsave pagemat setmatrix idtransform exch grestore
	dup 0 eq {pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse
	{-1 /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse exch 0 lt
	{-1 /just just dup 12 and 4 ne {12 xor} if def} {1} ifelse scale } if
	/glevel 0 def /showflag 0 def /fspc pspc def
	just 1 and 0 gt {gsave just 2 and 0 gt {tright}{tcenter} ifelse}
	{fspc 0 rmoveto} ifelse
	just 4 and 0 gt {just 8 and 0 gt {ttop}{tmiddle} ifelse}
	{0 fspc rmoveto} ifelse
	/showflag 1 def tshow grestore } def
/pinlabel { hlevel 0 eq { /pspc 20 def label /pspc 0 def }
	{ pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/begingate { /hlevel hlevel 1 add def gsave translate 0 0 moveto dup 0 lt
	{neg 1 sub -1 1 scale} if rotate dup scale } bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore } bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt { newpath } { stroke } ifelse grestore } def
/scb { gsave setrgbcolor } bind def  /sce { grestore } bind def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 setgray } def
/insertion {/PSobj save def /showpage {} def bop translate} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/arrowhead {
% -12 -32 24 36 bbox
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249  1.00 endpath
endgate
} def

/arrow {
% -12 -40 24 80 bbox
begingate
1  0.80 0 -40 0 20 2 polygon
1.00 0 0 40 arrowhead
endgate
} def

/dot {
% -10 -10 20 20 bbox
begingate
248  1.00 0 0 6 0.00 360.00 xcarc
endgate
} def

%%Page: 04252.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
% 824 608 offsets
0.7500 inchscale
2.6000 setlinewidth

1  1.00 312 608 1336 608 2 polygon
(Time) {/Helvetica 1.000 cf} 2 16 0 776 544 label
1.00 270 920 560 arrow
0.603 0.603 0.603 scb
1  1.00 408 736 408 608 2 polygon
1  1.00 504 736 504 608 2 polygon
1  1.00 600 736 600 608 2 polygon
1  1.00 696 736 696 608 2 polygon
1  1.00 792 736 792 608 2 polygon
1  1.00 888 736 888 608 2 polygon
1  1.00 984 736 984 608 2 polygon
1  1.00 1080 736 1080 608 2 polygon
1  1.00 1176 736 1176 608 2 polygon
1  1.00 1272 736 1272 608 2 polygon
(Sample times) {/Helvetica 1.000 cf} 2 16 0 440 816 label
1.00 135 440 768 arrow
1.00 165 520 768 arrow
1.00 195 584 768 arrow
1.00 210 680 768 arrow
sce
0.000 1.000 0.000 scb
(Analog) {/Helvetica 1.000 cf} 2 16 0 256 792 label
(input) {/Helvetica 1.000 cf} 2 16 0 264 752 label
sce
(Time) {/Helvetica 1.000 cf} 2 16 0 776 256 label
1.00 270 920 272 arrow
1.000 0.000 0.000 scb
(Digital) {/Helvetica 1.000 cf} 2 16 0 264 448 label
(output) {/Helvetica 1.000 cf} 2 16 0 264 408 label
sce
1  1.00 312 320 1336 320 2 polygon
0.603 0.603 0.603 scb
1  1.00 408 448 408 320 2 polygon
1  1.00 504 448 504 320 2 polygon
1  1.00 600 448 600 320 2 polygon
1  1.00 696 448 696 320 2 polygon
1  1.00 792 448 792 320 2 polygon
1  1.00 888 448 888 320 2 polygon
1  1.00 984 448 984 320 2 polygon
1  1.00 1080 448 1080 320 2 polygon
1  1.00 1176 448 1176 320 2 polygon
1  1.00 1272 448 1272 320 2 polygon
sce
0.000 1.000 0.000 scb
1  1.00 440 728 448 728 480 672 408 672 spline
1  1.00 512 616 520 616 552 672 480 672 spline
1  1.00 368 616 376 616 408 672 336 672 spline
1  1.00 584 728 592 728 624 672 552 672 spline
1  1.00 656 616 664 616 696 672 624 672 spline
1  1.00 728 728 736 728 768 672 696 672 spline
1  1.00 800 616 808 616 840 672 768 672 spline
1  1.00 872 728 880 728 912 672 840 672 spline
1  1.00 944 616 952 616 984 672 912 672 spline
1  1.00 1016 728 1024 728 1056 672 984 672 spline
1  1.00 1088 616 1096 616 1128 672 1056 672 spline
1  1.00 1160 728 1168 728 1200 672 1128 672 spline
1  1.00 1232 616 1240 616 1272 672 1200 672 spline
1  1.00 1304 728 1312 728 1344 672 1272 672 spline
sce
1.000 0.000 0.000 scb
1.00 0 408 672 dot
1.00 0 504 640 dot
1.00 0 600 704 dot
1.00 0 696 672 dot
1.00 0 792 640 dot
1.00 0 888 704 dot
1.00 0 984 672 dot
1.00 0 1080 640 dot
1.00 0 1176 704 dot
1.00 0 1272 672 dot
1.00 0 408 384 dot
1.00 0 504 352 dot
1.00 0 600 416 dot
1.00 0 696 384 dot
1.00 0 792 352 dot
1.00 0 888 416 dot
1.00 0 984 384 dot
1.00 0 1080 352 dot
1.00 0 1176 416 dot
1.00 0 1272 384 dot
1  1.00 408 384 504 384 504 352 600 352 600 416 696 416 696 384 792 384 792 352 
888 352 888 416 984 416 984 384 1080 384 1080 352 1176 352 1176 416 1272 416 
1272 384 1320 384 20 polygon
sce
(Aliasing) {/Helvetica-Oblique 1.000 cf} 2 16 0 760 864 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
