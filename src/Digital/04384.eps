%!PS-Adobe-3.0 EPSF-3.0
%%Title: shift/04384.eps
%%Creator: Xcircuit v3.1
%%CreationDate: Mon Jul 19 10:01:05 2004
%%Pages: 1
%%BoundingBox: 68 68 392 342
%%DocumentNeededResources: font Helvetica font Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.4
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--1/15/03  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.4 2
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {exec}
	ifelse } repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {show}{exec} ifelse}
	repeat grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate { /hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore} def     

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def bop rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/dip_14 {
begingate
1 2.00 -400 32 -400 -32 -448 -32 -448 32 spline
0 2.00 -448 192 -448 -192 448 -192 448 192 4 polygon
0 1.00 -416 256 -416 192 -352 192 -352 256 4 polygon
(14) {/Times-Roman cf} 2 16 0 1.00 -404 208 label
0 1.00 -288 256 -288 192 -224 192 -224 256 4 polygon
(13) {/Times-Roman cf} 2 16 0 1.00 -276 208 label
0 1.00 -160 256 -160 192 -96 192 -96 256 4 polygon
(12) {/Times-Roman cf} 2 16 0 1.00 -148 208 label
(11) {/Times-Roman cf} 2 16 0 1.00 -16 208 label
0 1.00 -32 256 -32 192 32 192 32 256 4 polygon
0 1.00 96 256 96 192 160 192 160 256 4 polygon
(10) {/Times-Roman cf} 2 16 0 1.00 104 208 label
0 1.00 224 256 224 192 288 192 288 256 4 polygon
(9) {/Times-Roman cf} 2 16 0 1.00 248 208 label
0 1.00 352 256 352 192 416 192 416 256 4 polygon
(8) {/Times-Roman cf} 2 16 0 1.00 368 208 label
0 1.00 352 -192 352 -256 416 -256 416 -192 4 polygon
(7) {/Times-Roman cf} 2 16 0 1.00 368 -240 label
0 1.00 224 -192 224 -256 288 -256 288 -192 4 polygon
(6) {/Times-Roman cf} 2 16 0 1.00 240 -240 label
(5) {/Times-Roman cf} 2 16 0 1.00 112 -240 label
0 1.00 96 -192 96 -256 160 -256 160 -192 4 polygon
(4) {/Times-Roman cf} 2 16 0 1.00 -16 -240 label
0 1.00 -32 -192 -32 -256 32 -256 32 -192 4 polygon
0 1.00 -160 -192 -160 -256 -96 -256 -96 -192 4 polygon
(3) {/Times-Roman cf} 2 16 0 1.00 -144 -240 label
0 1.00 -288 -192 -288 -256 -224 -256 -224 -192 4 polygon
(2) {/Times-Roman cf} 2 16 0 1.00 -272 -240 label
0 1.00 -416 -192 -416 -256 -352 -256 -352 -192 4 polygon
(1) {/Times-Roman cf} 2 16 0 1.00 -392 -240 label
endgate
} def

/arrowhead {
% trivial
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 1.00 endpath
endgate
} def

/arrow {
% trivial
begingate
1 0.80 0 -40 0 20 2 polygon
1.00 0 0 40 arrowhead
endgate
} def

/jumper {
% trivial
begingate
1 1.00 0 0 10 -90.00 90.00 xcarc
1 1.00 0 10 0 16 2 polygon
1 1.00 0 -10 0 -16 2 polygon
1.000 0.000 0.000 scb
(a) {/Times-Roman cf} 2 1 0 1.00 0 16 pinlabel
(a) {/Times-Roman cf} 2 13 0 1.00 0 -16 pinlabel
endgate
} def

/gnd {
% trivial
begingate
1 1.00 0 0 0 -32 2 polygon
1 1.00 -32 -32 32 -32 2 polygon
1 1.00 -18 -46 18 -46 2 polygon
1 1.00 -4 -60 4 -60 2 polygon
0.937 0.603 0.000 scb
(GND) {/Times-Roman cf} 2 1 0 1.00 0 0 pinglobal
endgate
} def

/circle {
% trivial
begingate
1 1.00 16 0 6 0.00 360.00 xcarc
1 1.00 0 0 10 0 2 polygon
1.000 0.000 0.000 scb
(out) {/Times-Roman cf} 2 4 0 1.00 16 0 pinlabel
(out) {/Times-Roman cf} 2 7 0 1.00 0 0 pinlabel
endgate
} def

%%Page: 1 1
%%PageOrientation: Portrait
/pgsave save def bop
% 970 832 offsets
% 32.00 8.00 gridspace
0.6993 inchscale
2.6000 setlinewidth

1.00 0 970 832 dip_14
(SS) {ss} (V) {/Times-Roman cf} 4 16 0 1.00 1402 536 label
(DD) {ss} (V) {/Times-Roman cf} 4 16 0 1.00 602 1112 label
(1) {ss} (D) {/Times-Roman cf} 4 16 0 1.00 602 520 label
(2) {ss} (D) {/Times-Roman cf} 4 16 0 1.00 978 512 label
(3) {ss} (D) {/Times-Roman cf} 4 16 0 1.00 1106 512 label
(4) {ss} (D) {/Times-Roman cf} 4 16 0 1.00 1234 512 label
(Clock) {/Times-Roman cf} 2 16 0 1.00 826 464 label
(+4) {ns} (1) {ss} (D) {/Times-Roman cf} 6 16 0 1.00 722 1168 label
(+4 delayed) {ns} (1) {ss} (D) {/Times-Roman cf} 6 16 0 1.00 682 432 label
(+4) {ns} (4) {ss} (D) {/Times-Roman cf} 6 16 0 1.00 1322 1136 label
(+5) {ns} (4) {ss} (D) {/Times-Roman cf} 6 16 0 1.00 1242 1200 label
(+4) {ns} (3) {ss} (D) {/Times-Roman cf} 6 16 0 1.00 1114 1256 label
(+4) {ns} (2) {ss} (D) {/Times-Roman cf} 6 16 0 1.00 938 1152 label
(+5) {ns} (2) {ss} (D) {/Times-Roman cf} 6 16 0 1.00 850 1216 label
0 1.00 938 960 938 704 1018 704 1018 960 4 polygon
1 1.00 938 832 1018 832 2 polygon
1 1.00 938 768 1018 768 2 polygon
1 1.00 938 896 1018 896 2 polygon
0 1.00 1066 960 1066 704 1146 704 1146 960 4 polygon
1 1.00 1066 832 1146 832 2 polygon
1 1.00 1066 768 1146 768 2 polygon
1 1.00 1066 896 1146 896 2 polygon
0 1.00 1306 960 1306 704 1386 704 1386 960 4 polygon
1 1.00 1306 832 1386 832 2 polygon
1 1.00 1306 768 1386 768 2 polygon
1 1.00 1306 896 1386 896 2 polygon
0 1.00 1194 960 1194 896 1274 896 1274 960 4 polygon
1 1.00 1226 640 1226 672 1354 672 1354 704 4 polygon
1 1.00 1354 992 1290 992 1290 864 1226 864 1226 896 5 polygon
0 1.00 586 928 586 672 666 672 666 928 4 polygon
1 1.00 586 800 666 800 2 polygon
1 1.00 586 736 666 736 2 polygon
1 1.00 586 864 666 864 2 polygon
1 1.00 618 928 618 960 714 960 714 960 4 polygon
1 1.00 970 640 970 704 2 polygon
1 1.00 1098 640 1098 704 2 polygon
0 1.00 810 960 810 896 890 896 890 960 4 polygon
1 1.00 970 992 906 992 906 864 842 864 842 896 5 polygon
1.00 0 842 688 arrow
0.80 0 842 992 arrow
0.80 0 970 992 arrow
0.80 0 1098 992 arrow
0.80 0 1226 992 arrow
0.80 0 1354 992 arrow
1 1.00 586 640 586 656 618 656 618 672 4 polygon
0.80 0 714 992 arrow
(cl) {/Helvetica cf} 2 16 0 1.00 858 688 label
1 1.00 682 560 682 520 2 polygon
1 1.00 938 1136 938 1104 2 polygon
(CD4006b 18-bit serial-in/ serial-out shift register) {/Helvetica cf} 2 16 0 
1.00 386 280 label
(D) {/Helvetica cf} 2 16 0 1.00 602 688 label
(Q) {/Helvetica cf} 2 16 0 1.00 602 880 label
0.000 0.000 1.000 scb
1 1.00 714 1088 714 1216 458 1216 458 416 970 416 970 576 6 polygon
1 1.00 842 1088 842 1248 426 1248 426 384 1098 384 1098 576 6 polygon
1 1.00 1098 1088 1098 1280 394 1280 394 352 1226 352 1226 576 6 polygon
1 1.00 1226 1088 1226 1248 1482 1248 3 polygon
1 1.00 586 576 586 456 466 456 3 polygon
1 1.00 842 568 842 504 602 504 3 polygon
1.00 90 458 456 jumper
1.00 90 426 456 jumper
1.00 90 394 456 jumper
1.00 90 394 504 jumper
1.00 90 426 504 jumper
1.00 90 458 504 jumper
1.00 90 586 504 jumper
sce
1 1.00 682 496 682 464 2 polygon
0.000 0.000 1.000 scb
1 1.00 570 504 474 504 2 polygon
1 1.00 378 504 346 504 2 polygon
1 1.00 378 456 346 456 2 polygon
1.00 90 314 504 arrow
1.00 90 314 456 arrow
1.00 90 1442 1248 arrow
sce
1.00 0 1354 568 gnd
-1.00 90 586 1152 circle
1 1.00 586 1160 586 1088 2 polygon
(+5V) {/Times-Roman cf} 2 16 0 1.00 594 1176 label
1 1.00 1354 568 1354 576 2 polygon
(Clock) {/Times-Roman cf} 2 16 0 1.00 274 520 label
(Data) {/Helvetica cf} 2 16 0 1.00 282 416 label
(Out) {/Helvetica cf} 2 16 0 1.00 1410 1264 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
