%!PS-Adobe-3.0 EPSF-3.0
%%Title: liesrc/lessons/Digital/work/14143.eps
%%Creator: Xcircuit v3.1
%%CreationDate: Sun Jun 20 17:59:51 2004
%%Pages: 1
%%BoundingBox: 68 68 378 178
%%DocumentNeededResources: font Helvetica font Courier 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.4
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--1/15/03  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.4 2
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {exec}
	ifelse } repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {show}{exec} ifelse}
	repeat grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate { /hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore} def     

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def bop rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%Page: 1 1
%%PageOrientation: Portrait
/pgsave save def bop
% 1747 726 offsets
% 32.00 8.00 gridspace
0.6405 inchscale
2.6000 setlinewidth

0.000 0.000 1.000 scb
1 1.00 1424 589 108 -180.00 180.00 xcarc
sce
0 1.00 1558 725 1558 454 1179 454 1179 725 4 polygon
0.000 0.000 1.000 scb
(B) {ol} {/Courier cf} 3 19 0 1.00 1530 673 label
1 1.00 1197 724 1197 454 2 polygon
1 1.00 1221 724 1221 454 2 polygon
1 1.00 1246 724 1246 454 2 polygon
1 1.00 1270 724 1270 454 2 polygon
1 1.00 1295 724 1295 454 2 polygon
1 1.00 1319 560 1319 454 2 polygon
1 1.00 1344 511 1344 454 2 polygon
1 1.00 1368 724 1368 683 2 polygon
1 1.00 1393 483 1393 454 2 polygon
1 1.00 1418 479 1418 454 2 polygon
1 1.00 1442 479 1442 454 2 polygon
1 1.00 1467 724 1467 691 2 polygon
1 1.00 1319 724 1319 618 2 polygon
1 1.00 1368 495 1368 454 2 polygon
1 1.00 1344 723 1344 666 2 polygon
1 1.00 1418 724 1418 699 2 polygon
1 1.00 1442 724 1442 695 2 polygon
1 1.00 1393 724 1393 695 2 polygon
1 1.00 1491 724 1491 675 2 polygon
1 1.00 1467 487 1467 454 2 polygon
1 1.00 1491 503 1491 454 2 polygon
1 1.00 1516 528 1516 454 2 polygon
1 1.00 1540 724 1540 454 2 polygon
1 1.00 1516 667 1516 650 2 polygon
1 1.00 1516 724 1516 712 2 polygon
1.000 0.000 0.000 scb
1 1.00 1311 582 108 0.00 360.00 xcarc
1 1.00 1180 502 1238 502 2 polygon
1 1.00 1385 503 1556 503 2 polygon
1 1.00 1409 530 1556 530 2 polygon
1 1.00 1180 530 1215 530 2 polygon
1 1.00 1180 556 1208 556 2 polygon
1 1.00 1419 558 1554 558 2 polygon
1 1.00 1424 586 1554 586 1554 586 3 polygon
1 1.00 1180 586 1205 586 1205 586 3 polygon
1 1.00 1181 612 1210 612 1210 612 3 polygon
1 1.00 1419 612 1554 612 1554 612 3 polygon
1 1.00 1409 637 1552 637 2 polygon
1 1.00 1180 637 1218 637 2 polygon
1 1.00 1386 665 1554 665 2 polygon
1 1.00 1180 663 1195 663 2 polygon
1 1.00 1241 696 1554 696 2 polygon
1 1.00 1180 693 1190 693 2 polygon
1 1.00 1182 477 1271 477 2 polygon
1 1.00 1343 478 1557 478 2 polygon
0.810 0.000 0.000 scb
(A) {ol} {/Courier cf} 3 16 0 1.00 1200 674 label
0.000 0.000 0.000 scb
(B) {hS} (A) {/Courier cf} ( = ) {/Helvetica cf} (B) {ol} {/Courier cf} {ol} {} 
( ) {/Helvetica cf} (A) {ol} {/Courier cf} {} ( = ) {/Helvetica cf} (B) {ol} 
{/Courier cf} {} (+) {/Helvetica cf} (A) {ol} {ol} {/Courier cf} 29 16 0 1.00 
1210 299 label
1 1.00 1210 340 1281 340 2 polygon
(  no hatch) {/Helvetica cf} (B) {ol} {/Courier cf} {ol} {} (+) {/Helvetica cf} 
(A) {ol} {/Courier cf} 12 16 0 1.00 1209 369 label
1 1.00 1209 410 1281 410 2 polygon
1 1.00 1331 338 1355 338 2 polygon
1 1.00 1368 338 1392 338 2 polygon
0.000 0.000 1.000 scb
1 1.00 543 585 108 -90.00 270.00 xcarc
1 1.00 624 588 624 515 2 polygon
1 1.00 597 678 598 493 2 polygon
1 1.00 570 690 571 483 2 polygon
1 1.00 543 692 544 477 2 polygon
1 1.00 516 689 517 482 2 polygon
1 1.00 490 677 490 607 2 polygon
1 1.00 461 654 461 605 2 polygon
1.000 0.000 0.000 scb
1 1.00 435 585 108 0.00 360.00 xcarc
1 1.00 362 665 506 665 2 polygon
1 1.00 394 639 529 639 2 polygon
1 1.00 330 612 538 612 2 polygon
1 1.00 330 558 538 558 2 polygon
1 1.00 342 531 528 531 2 polygon
1 1.00 365 504 506 504 2 polygon
sce
0 1.00 299 721 299 450 678 450 678 721 4 polygon
(AB) {/Courier cf} 2 16 0 1.00 448 573 label
0.000 0.000 1.000 scb
1 1.00 461 565 461 511 2 polygon
1.000 0.000 0.000 scb
1 1.00 328 583 435 583 2 polygon
1 1.00 518 583 541 583 2 polygon
0.000 0.000 1.000 scb
1 1.00 490 565 490 495 2 polygon
1.000 0.000 0.000 scb
(A) {/Courier cf} 2 16 0 1.00 364 622 label
0.000 0.000 1.000 scb
(B) {/Courier cf} 2 16 0 1.00 609 596 label
1.000 0.000 0.000 scb
1 1.00 342 639 365 639 2 polygon
0.000 0.000 1.000 scb
1 1.00 624 656 624 632 2 polygon
1 1.00 984 586 108 120.58 239.29 xcarc
1 1.00 958 561 958 518 2 polygon
1 1.00 958 655 958 607 2 polygon
1.000 0.000 0.000 scb
1 1.00 876 586 107 -60.51 59.59 xcarc
1 1.00 914 666 947 666 2 polygon
1 1.00 894 640 968 640 2 polygon
1 1.00 881 612 978 612 2 polygon
1 1.00 876 587 891 587 2 polygon
1 1.00 881 559 978 559 2 polygon
1 1.00 894 533 968 533 2 polygon
1 1.00 914 505 947 505 2 polygon
sce
0 1.00 740 722 740 451 1119 451 1119 722 4 polygon
(AB) {/Courier cf} 2 16 0 1.00 904 572 label
0.000 0.000 1.000 scb
1 1.00 930 561 930 497 2 polygon
1 1.00 930 678 930 607 2 polygon
1 1.00 904 655 904 607 2 polygon
1 1.00 905 561 905 515 2 polygon
1.000 0.000 0.000 scb
1 1.00 965 587 980 587 2 polygon
sce
(AB) {ol} {/Courier cf} 3 16 0 1.00 789 646 label
0.000 0.000 1.000 scb
(B) {/Courier cf} 2 16 0 1.00 612 596 label
sce
1 1.00 1371 542 1483 414 1467 382 3 polygon
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
