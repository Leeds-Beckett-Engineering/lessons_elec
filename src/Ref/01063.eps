%!PS-Adobe-3.0 EPSF-3.0
%%Title: 01063.eps
%%Creator: Xcircuit v2.0
%%CreationDate: Sun May 19 11:47:44 2002
%%Pages: 1
%%BoundingBox: 68 68 395 394
%%DocumentNeededResources: font Helvetica font Times-Roman font Symbol 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.0
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--2/25/99  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.0 2
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/cf { dup type /realtype eq {40 mul /fscale exch def} if dup /xfont exch def
   findfont fscale scalefont setfont } def
/Ss { gsave 0.67 dup scale gsave mty neg rmoveto
   glevel 1 add /glevel exch def } def
/ss { gsave 0.67 dup scale gsave mty 0.5 mul rmoveto
   glevel 1 add /glevel exch def } def
/ns { currentpoint transform   % preserve x position!
   glevel {grestore} repeat /glevel 0 def
   itransform pop currentpoint pop sub 0 rmoveto } def
/ul { showflag 1 eq { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { showflag 1 eq { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave true charpath flattenpath pathbbox pop exch pop sub
   grestore } def
/bs { stW 0 rmoveto } def
/pspc 0 def
/qS { (aa) stW (a a) stW sub 4 div 0 rmoveto } def
/hS { qS qS } def
/textx { dup 1 add copy 0 exch { exch dup type /stringtype eq
	{stringwidth pop add}{exec} ifelse } repeat neg ns } def
/mty { 0 topmat setmatrix (A) true charpath flattenpath pathbbox exch
   pop exch sub exch pop neg grestore } def
/texty { gsave 2 copy pop exec mty } def
/tcenter { textx grestore 0.5 mul 0 rmoveto } def
/tright  { textx grestore fspc sub 0 rmoveto } def
/tmiddle { texty 0.5 mul rmoveto } def
/ttop    { texty fspc sub rmoveto } def
/tshow {{ dup type /stringtype eq {show}{exec} ifelse} repeat ns } def

/label  { gsave translate 0 0 moveto rotate /just exch def just 16 and 0 gt
	{0 1 dtransform gsave pagemat setmatrix idtransform exch grestore
	1 0 dtransform gsave pagemat setmatrix idtransform exch grestore
	dup 0 eq {pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse
	{-1 /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse exch 0 lt
	{-1 /just just dup 12 and 4 ne {12 xor} if def} {1} ifelse scale } if
	/glevel 0 def /showflag 0 def /fspc pspc def
	just 1 and 0 gt {gsave just 2 and 0 gt {tright}{tcenter} ifelse}
	{fspc 0 rmoveto} ifelse
	just 4 and 0 gt {just 8 and 0 gt {ttop}{tmiddle} ifelse}
	{0 fspc rmoveto} ifelse
	/showflag 1 def tshow grestore } def
/pinlabel { hlevel 0 eq { /pspc 20 def label /pspc 0 def }
	{ pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/begingate { /hlevel hlevel 1 add def gsave translate 0 0 moveto dup 0 lt
	{neg 1 sub -1 1 scale} if rotate dup scale } bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore } bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt { newpath } { stroke } ifelse grestore } def
/scb { gsave setrgbcolor } bind def  /sce { grestore } bind def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 setgray } def
/insertion {/PSobj save def /showpage {} def bop translate} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/opamp {
% -80 -80 160 160 bbox
begingate
0  1.00 -80 -80 -80 80 80 0 3 polygon
(-) {/Symbol 1.000 cf} 2 5 0 -61 50 label
(+) {/Symbol 1.000 cf} 2 5 0 -61 -46 label
1.000 0.000 0.000 scb
(in.m) {/Times-Roman 1.000 cf} 2 7 0 -80 48 pinlabel
(in.p) {/Times-Roman 1.000 cf} 2 7 0 -80 -48 pinlabel
(out) {/Times-Roman 1.000 cf} 2 4 0 80 0 pinlabel
sce
endgate
} def

/arrowhead {
% -12 -32 24 36 bbox
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249  1.00 endpath
endgate
} def

/arrow {
% -12 -40 24 80 bbox
begingate
1  0.80 0 -40 0 20 2 polygon
1.00 0 0 40 arrowhead
endgate
} def

/opamp_norton {
% -92 -80 188 160 bbox
begingate
1.00 0 16 0 opamp
1  1.00 -64 0 28 0.00 360.00 xcarc
1.00 -181 -64 16 arrow
endgate
} def

/invert {
% -48 -40 112 80 bbox
begingate
0  1.00 -32 -40 -32 40 40 0 3 polygon
1  1.00 48 0 8 0.00 360.00 xcarc
1  1.00 -32 0 -48 0 2 polygon
1  1.00 56 0 64 0 2 polygon
1.000 0.000 0.000 scb
(Out) {/Helvetica 1.000 cf} 2 4 0 64 0 pinlabel
(In) {/Helvetica 1.000 cf} 2 7 0 -48 0 pinlabel
sce
endgate
} def

/and_gate {
% -64 -48 112 96 bbox
begingate
1  1.00 0 -48 -64 -48 -64 48 0 48 4 polygon
1  1.00 0 0 48 -90.00 90.00 xcarc
1.000 0.000 0.000 scb
(Out) {/Helvetica 1.000 cf} 2 4 0 48 0 pinlabel
(In.1) {/Helvetica 1.000 cf} 2 7 0 -64 32 pinlabel
(In.2) {/Helvetica 1.000 cf} 2 7 0 -64 -32 pinlabel
sce
endgate
} def

/or_gate {
% -49 -48 113 128 bbox
begingate
1  1.00 -19 -48 96 30.00 90.00 xcarc
1  1.00 -19 48 96 270.00 330.00 xcarc
1  1.00 -112 0 80 -37.00 37.00 xcarc
1  1.00 -48 48 -19 48 2 polygon
1  1.00 -48 -48 -19 -48 2 polygon
1.000 0.000 0.000 scb
(Out) {/Helvetica 1.000 cf} 2 4 0 64 0 pinlabel
(In.1) {/Helvetica 1.000 cf} 2 7 0 -40 32 pinlabel
(In.2) {/Helvetica 1.000 cf} 2 7 0 -40 -32 pinlabel
sce
endgate
} def

/xor_gate {
% -65 -48 145 128 bbox
begingate
1  1.00 -19 -48 96 30.00 90.00 xcarc
1  1.00 -19 48 96 270.00 330.00 xcarc
1  1.00 -128 0 80 -37.00 37.00 xcarc
1  1.00 -112 0 80 -37.00 37.00 xcarc
1  1.00 -48 48 -19 48 2 polygon
1  1.00 -48 -48 -19 -48 2 polygon
1.000 0.000 0.000 scb
(Out) {/Helvetica 1.000 cf} 2 4 0 64 0 pinlabel
(In.1) {/Helvetica 1.000 cf} 2 7 0 -56 32 pinlabel
(In.2) {/Helvetica 1.000 cf} 2 7 0 -56 -32 pinlabel
sce
endgate
} def

/invert2 {
% -64 -40 128 80 bbox
begingate
1  1.00 -32 40 -32 -40 2 polygon
1  1.00 -40 0 8 0.00 360.00 xcarc
1  1.00 -48 0 -64 0 2 polygon
1  1.00 -32 40 40 0 -32 -40 3 polygon
1  1.00 40 0 64 0 2 polygon
endgate
} def

/nand {
% -64 -48 128 96 bbox
begingate
1  1.00 0 -48 -64 -48 -64 48 0 48 4 polygon
1  1.00 56 0 8 0.00 360.00 xcarc
1  1.00 0 0 48 -90.00 90.00 xcarc
1.000 0.000 0.000 scb
(Out) {/Helvetica 1.000 cf} 2 4 0 64 0 pinlabel
(In.1) {/Helvetica 1.000 cf} 2 7 0 -64 32 pinlabel
(In.2) {/Helvetica 1.000 cf} 2 7 0 -64 -32 pinlabel
sce
endgate
} def

/nor {
% -64 -48 128 96 bbox
begingate
1  1.00 -64 48 -35 48 2 polygon
1  1.00 -64 -48 -35 -48 2 polygon
1  1.00 -128 0 80 -37.00 37.00 xcarc
1  1.00 56 0 8 0.00 360.00 xcarc
1  1.00 -35 -48 96 30.00 90.00 xcarc
1  1.00 -35 48 96 270.00 330.00 xcarc
1.000 0.000 0.000 scb
(Out) {/Helvetica 1.000 cf} 2 4 0 64 0 pinlabel
(In.1) {/Helvetica 1.000 cf} 2 7 0 -56 32 pinlabel
(In.2) {/Helvetica 1.000 cf} 2 7 0 -56 -32 pinlabel
sce
endgate
} def

/xnor {
% -65 -48 145 128 bbox
begingate
1  1.00 72 0 8 0.00 360.00 xcarc
1  1.00 -19 -48 96 30.00 90.00 xcarc
1  1.00 -19 48 96 270.00 330.00 xcarc
1  1.00 -128 0 80 -37.00 37.00 xcarc
1  1.00 -112 0 80 -37.00 37.00 xcarc
1  1.00 -48 48 -19 48 2 polygon
1  1.00 -48 -48 -19 -48 2 polygon
1.000 0.000 0.000 scb
(Out) {/Helvetica 1.000 cf} 2 4 0 80 0 pinlabel
(In.1) {/Helvetica 1.000 cf} 2 7 0 -56 32 pinlabel
(In.2) {/Helvetica 1.000 cf} 2 7 0 -56 -32 pinlabel
sce
endgate
} def

/buffer {
% -56 -40 112 80 bbox
begingate
0  1.00 -32 -40 -32 40 40 0 3 polygon
1  1.00 -32 0 -48 0 2 polygon
1  1.00 40 0 64 0 2 polygon
1.000 0.000 0.000 scb
(Out) {/Helvetica 1.000 cf} 2 4 0 64 0 pinlabel
(In) {/Helvetica 1.000 cf} 2 7 0 -48 0 pinlabel
sce
endgate
} def

/open-collector {
% -8 -16 16 32 bbox
begingate
1  1.00 -8 0 0 16 8 0 0 -16 -8 0 5 polygon
1  1.00 -8 -16 8 -16 2 polygon
endgate
} def

/schmitt {
% -16 -8 24 16 bbox
begingate
1  1.00 -16 8 0 -8 -16 -8 0 8 spline
1  1.00 -8 8 8 -8 -8 -8 8 8 spline
1  1.00 0 8 8 8 2 polygon
1  1.00 -8 -8 -16 -8 2 polygon
endgate
} def

/neg_and {
% -64 -48 144 96 bbox
begingate
1.00 0 32 0 and_gate
1  1.00 -40 -32 8 0.00 360.00 xcarc
1  1.00 -48 -32 -64 -32 2 polygon
1  1.00 -40 32 8 0.00 360.00 xcarc
1  1.00 -48 32 -64 32 2 polygon
endgate
} def

/neg_or {
% -64 -64 144 128 bbox
begingate
1  1.00 -32 16 8 0.00 360.00 xcarc
1  1.00 -64 16 -40 16 2 polygon
1.00 0 16 -16 or_gate
1  1.00 -32 -48 8 0.00 360.00 xcarc
1  1.00 -64 -48 -40 -48 2 polygon
endgate
} def

%%Page: 1 1
%%PageOrientation: Portrait
/pgsave save def bop
% 816 976 offsets
% 32.00 8.00 gridspace
0.7500 inchscale
2.6000 setlinewidth

1.00 0 448 1248 opamp
1  1.00 368 1296 336 1296 2 polygon
1  1.00 368 1200 336 1200 2 polygon
1  1.00 528 1248 560 1248 2 polygon
(Operational amplifier) {/Helvetica 1.000 cf} 2 16 0 256 1360 label
1  1.00 784 1328 944 1248 784 1168 3 polygon
1  1.00 752 1296 752 1200 784 1168 784 1328 spline
1  1.00 768 1296 736 1296 2 polygon
1  1.00 736 1200 768 1200 2 polygon
(-) {/Helvetica 1.000 cf} 2 16 0 776 1280 label
(+) {/Helvetica 1.000 cf} 2 16 0 776 1192 label
1  1.00 944 1248 976 1248 2 polygon
1.00 0 1264 1248 opamp_norton
1  1.00 1360 1248 1392 1248 2 polygon
1  1.00 1200 1296 1168 1296 2 polygon
1  1.00 1200 1200 1168 1200 2 polygon
(\(alternative\)) {/Helvetica 1.000 cf} 2 16 0 736 1360 label
(Norton op-amp) {/Helvetica 1.000 cf} 2 16 0 1120 1360 label
1.00 0 384 976 invert
(Inverter) {/Helvetica 1.000 cf} 2 16 0 320 1056 label
1.00 0 688 976 and_gate
1  1.00 336 976 320 976 2 polygon
1  1.00 448 976 464 976 2 polygon
(AND gate) {/Helvetica 1.000 cf} 2 16 0 592 1056 label
1.00 0 976 976 or_gate
1  1.00 912 1008 936 1008 2 polygon
1  1.00 912 944 936 944 2 polygon
1  1.00 1040 976 1072 976 2 polygon
(OR gate) {/Helvetica 1.000 cf} 2 16 0 912 1056 label
1.00 0 1264 976 xor_gate
1  1.00 1184 1008 1208 1008 2 polygon
1  1.00 1184 944 1208 944 2 polygon
1  1.00 1328 976 1360 976 2 polygon
(XOR gate) {/Helvetica 1.000 cf} 2 16 0 1184 1056 label
1.00 0 384 752 invert2
(Inverter) {/Helvetica 1.000 cf} 2 16 0 320 832 label
1.00 0 688 752 nand
1  1.00 624 1008 592 1008 2 polygon
1  1.00 624 944 592 944 2 polygon
1  1.00 736 976 768 976 2 polygon
1  1.00 624 784 592 784 2 polygon
1  1.00 624 720 592 720 2 polygon
(NAND gate) {/Helvetica 1.000 cf} 2 16 0 592 832 label
1.00 0 992 752 nor
1  1.00 912 784 936 784 2 polygon
1  1.00 912 720 936 720 2 polygon
1  1.00 752 752 768 752 2 polygon
1  1.00 1056 752 1072 752 2 polygon
(NOR gate) {/Helvetica 1.000 cf} 2 16 0 896 832 label
1.00 0 1264 752 xnor
1  1.00 1184 784 1208 784 2 polygon
1  1.00 1184 720 1208 720 2 polygon
1  1.00 1344 752 1360 752 2 polygon
(XNOR gate) {/Helvetica 1.000 cf} 2 16 0 1168 832 label
1.00 0 384 528 buffer
(Buffer) {/Helvetica 1.000 cf} 2 16 0 328 600 label
1.00 0 624 304 and_gate
1  1.00 560 336 528 336 2 polygon
1  1.00 560 272 528 272 2 polygon
1  1.00 672 304 704 304 2 polygon
1.00 0 608 304 open-collector
(Gate with open-) {/Helvetica 1.000 cf} 2 16 0 472 408 label
(collector output) {/Helvetica 1.000 cf} 2 16 0 480 368 label
1.00 0 1040 304 and_gate
1  1.00 976 336 944 336 2 polygon
1  1.00 976 272 944 272 2 polygon
1  1.00 1088 304 1120 304 2 polygon
(Gate with Schmitt) {/Helvetica 1.000 cf} 2 16 0 864 408 label
(trigger input) {/Helvetica 1.000 cf} 2 16 0 920 368 label
1.00 0 1024 304 schmitt
1  1.00 1040 528 1072 528 2 polygon
1  1.00 736 528 768 528 2 polygon
1.00 0 656 528 neg_and
(Negative-AND) {/Helvetica 1.000 cf} 2 16 0 552 632 label
(gate) {/Helvetica 1.000 cf} 2 16 0 632 592 label
1.00 0 960 544 neg_or
(Negative-OR) {/Helvetica 1.000 cf} 2 16 0 872 632 label
(gate) {/Helvetica 1.000 cf} 2 16 0 944 592 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
