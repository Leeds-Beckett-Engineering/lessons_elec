%!PS-Adobe-3.0 EPSF-3.0
%%Title: 01051.eps
%%Creator: Xcircuit v2.0
%%CreationDate: Sun Dec  2 10:30:52 2001
%%Pages: 1
%%BoundingBox: 68 68 350 372
%%DocumentNeededResources: font Helvetica font Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.0
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--2/25/99  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.0 2
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/cf { dup type /realtype eq {40 mul /fscale exch def} if dup /xfont exch def
   findfont fscale scalefont setfont } def
/Ss { gsave 0.67 dup scale gsave mty neg rmoveto
   glevel 1 add /glevel exch def } def
/ss { gsave 0.67 dup scale gsave mty 0.5 mul rmoveto
   glevel 1 add /glevel exch def } def
/ns { currentpoint transform   % preserve x position!
   glevel {grestore} repeat /glevel 0 def
   itransform pop currentpoint pop sub 0 rmoveto } def
/ul { showflag 1 eq { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { showflag 1 eq { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave true charpath flattenpath pathbbox pop exch pop sub
   grestore } def
/bs { stW 0 rmoveto } def
/pspc 0 def
/qS { (aa) stW (a a) stW sub 4 div 0 rmoveto } def
/hS { qS qS } def
/textx { dup 1 add copy 0 exch { exch dup type /stringtype eq
	{stringwidth pop add}{exec} ifelse } repeat neg ns } def
/mty { 0 topmat setmatrix (A) true charpath flattenpath pathbbox exch
   pop exch sub exch pop neg grestore } def
/texty { gsave 2 copy pop exec mty } def
/tcenter { textx grestore 0.5 mul 0 rmoveto } def
/tright  { textx grestore fspc sub 0 rmoveto } def
/tmiddle { texty 0.5 mul rmoveto } def
/ttop    { texty fspc sub rmoveto } def
/tshow {{ dup type /stringtype eq {show}{exec} ifelse} repeat ns } def

/label  { gsave translate 0 0 moveto rotate /just exch def just 16 and 0 gt
	{0 1 dtransform gsave pagemat setmatrix idtransform exch grestore
	1 0 dtransform gsave pagemat setmatrix idtransform exch grestore
	dup 0 eq {pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse
	{-1 /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse exch 0 lt
	{-1 /just just dup 12 and 4 ne {12 xor} if def} {1} ifelse scale } if
	/glevel 0 def /showflag 0 def /fspc pspc def
	just 1 and 0 gt {gsave just 2 and 0 gt {tright}{tcenter} ifelse}
	{fspc 0 rmoveto} ifelse
	just 4 and 0 gt {just 8 and 0 gt {ttop}{tmiddle} ifelse}
	{0 fspc rmoveto} ifelse
	/showflag 1 def tshow grestore } def
/pinlabel { hlevel 0 eq { /pspc 20 def label /pspc 0 def }
	{ pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/begingate { /hlevel hlevel 1 add def gsave translate 0 0 moveto dup 0 lt
	{neg 1 sub -1 1 scale} if rotate dup scale } bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore } bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt { newpath } { stroke } ifelse grestore } def
/scb { gsave setrgbcolor } bind def  /sce { grestore } bind def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 setgray } def
/insertion {/PSobj save def /showpage {} def bop translate} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/inductor {
% -14 -64 29 112 bbox
begingate
% fundamental
1  1.00 20 -28 20 -44 0 -48 0 -24 spline
1  1.00 -20 -20 -20 -32 0 -28 0 -24 spline
1  1.00 20 32 20 16 0 12 0 36 spline
1  1.00 20 12 20 -4 0 -8 0 16 spline
1  1.00 20 -8 20 -24 0 -28 0 -4 spline
1  1.00 -20 20 -20 8 0 12 0 16 spline
1  1.00 -20 0 -20 -12 0 -8 0 -4 spline
1  1.00 0 -48 0 -64 2 polygon
1  1.00 0 36 0 48 2 polygon
1.000 0.000 0.000 scb
(l.1) {/Times-Roman 1.000 cf} 2 9 0 0 48 pinlabel
(l.2) {/Times-Roman 1.000 cf} 2 13 0 0 -64 pinlabel
sce
0.000 1.000 0.000 scb
(spice:L%i %pl.1 %pl.2 1.0U) {/Times-Roman 1.000 cf} 2 0 0 -208 -160 infolabel
(sim:l %pl.1 %pl.2) {/Times-Roman 1.000 cf} 2 0 0 -208 -208 infolabel
sce
endgate
} def

/transformer {
% -62 -64 108 112 bbox
begingate
1.00 0 -48 0 inductor
1  1.00 -16 48 -16 -64 2 polygon
1  1.00 0 48 0 -64 2 polygon
1.00 180 32 -16 inductor
endgate
} def

/inductor_medium {
% -16 -112 31 208 bbox
begingate
1  1.00 0 96 0 80 2 polygon
1  1.00 24 78 22 46 -14 58 0 80 spline
1  1.00 23 62 21 30 -15 42 -1 64 spline
1  1.00 -19 60 -16 64 -2 64 -14 58 spline
1  1.00 -19 44 -16 48 -2 48 -14 42 spline
1  1.00 23 46 21 14 -15 26 -1 48 spline
1  1.00 -19 28 -16 32 -2 32 -14 26 spline
1  1.00 23 30 21 -2 -15 10 -1 32 spline
1  1.00 -19 12 -16 16 -2 16 -14 10 spline
1  1.00 23 14 21 -18 -15 -6 -1 16 spline
1  1.00 -19 -4 -16 0 -2 0 -14 -6 spline
1  1.00 23 -2 21 -34 -15 -22 -1 0 spline
1  1.00 -19 -20 -16 -16 -2 -16 -14 -22 spline
1  1.00 23 -18 21 -50 -15 -38 -1 -16 spline
1  1.00 -19 -36 -16 -32 -2 -32 -14 -38 spline
1  1.00 23 -34 21 -66 -15 -54 -1 -32 spline
1  1.00 -19 -52 -16 -48 -2 -48 -14 -54 spline
1  1.00 24 -50 22 -82 -14 -70 0 -48 spline
1  1.00 -18 -68 -15 -64 -1 -64 -13 -70 spline
1  1.00 14 -64 26 -83 0 -86 -2 -64 spline
1  1.00 0 -86 0 -98 2 polygon
1  1.00 0 -112 0 -96 2 polygon
endgate
} def

/transformer3 {
% -48 -96 110 208 bbox
begingate
1.00 0 -32 16 inductor_medium
1  1.00 0 96 0 -64 2 polygon
1  1.00 16 96 16 -64 2 polygon
1.00 -1 48 24 inductor
1  1.00 48 72 48 80 2 polygon
1  1.00 48 -40 48 -48 2 polygon
endgate
} def

/arrowhead {
% -12 -32 24 36 bbox
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249  1.00 endpath
endgate
} def

/arrow {
% -12 -40 24 80 bbox
begingate
1  0.80 0 -40 0 20 2 polygon
1.00 0 0 40 arrowhead
endgate
} def

/variac {
% -46 -64 102 112 bbox
begingate
1.00 90 16 0 arrow
1.00 0 -32 0 inductor
endgate
} def

/saturable_reactor {
% -80 -64 144 112 bbox
begingate
1.00 0 0 0 transformer
1  1.00 -80 0 64 0 2 polygon
1  1.00 -80 0 -80 16 2 polygon
1  1.00 64 0 64 -16 2 polygon
endgate
} def

/dot {
% -10 -10 20 20 bbox
begingate
248  1.00 0 0 6 0.00 360.00 xcarc
endgate
} def

/3_phase_Y {
% -155 -162 308 324 bbox
begingate
1.00 0 -145 152 dot
1  1.00 -114 128 -143 157 2 polygon
1.00 45 -81 95 inductor
1  1.00 -38 52 -4 20 2 polygon
1  1.00 36 52 1 19 2 polygon
1.00 315 78 94 inductor
1  1.00 110 125 141 156 2 polygon
1.00 0 143 152 dot
1  1.00 0 -23 0 24 2 polygon
1.00 0 -1 24 dot
1.00 180 0 -72 inductor
1  1.00 0 -117 0 -151 2 polygon
1.00 0 -1 -152 dot
endgate
} def

/synchro {
% -234 -178 474 354 bbox
begingate
1  1.00 0 -96 -224 -96 2 polygon
1.00 0 -224 -96 dot
1  1.00 -64 16 -224 16 2 polygon
1.00 0 -224 16 dot
5  1.00 80 16 160 0.00 360.00 xcarc
1.00 0 80 -16 3_phase_Y
1  1.00 -54 6 -59 16 2 polygon
1  1.00 -59 16 -64 16 2 polygon
1.00 30 -32 -32 inductor
1  1.00 -3 -82 5 -96 2 polygon
1  1.00 5 -96 0 -96 2 polygon
endgate
} def

%%Page: 1 1
%%PageOrientation: Portrait
/pgsave save def bop
% 720 978 offsets
% 32.00 8.00 gridspace
0.7500 inchscale
2.6000 setlinewidth

1.00 0 384 1170 transformer
(Transformer) {/Helvetica 1.000 cf} 2 16 0 272 1250 label
1.00 -1 784 1106 transformer3
(Step-up/step-down) {/Helvetica 1.000 cf} 2 16 0 608 1282 label
(transformer) {/Helvetica 1.000 cf} 2 16 0 680 1242 label
1  1.00 896 882 896 770 2 polygon
1  1.00 912 882 912 770 2 polygon
240  1.00 880 882 880 770 864 770 864 882 4 polygon
240  1.00 944 882 944 770 928 770 928 882 4 polygon
1  1.00 864 770 832 770 2 polygon
1  1.00 864 882 832 882 2 polygon
1  1.00 976 882 944 882 2 polygon
1  1.00 976 770 944 770 2 polygon
(Transformer) {/Helvetica 1.000 cf} 2 16 0 784 914 label
1  1.00 368 882 368 770 2 polygon
1  1.00 384 882 384 770 2 polygon
1  1.00 336 882 336 866 2 polygon
1  1.00 368 866 368 850 336 850 336 866 spline
1  1.00 368 850 368 834 336 834 336 850 spline
1  1.00 368 834 368 818 336 818 336 834 spline
1  1.00 368 818 368 802 336 802 336 818 spline
1  1.00 368 802 368 786 336 786 336 802 spline
1  1.00 336 786 336 770 2 polygon
1  1.00 416 882 416 866 2 polygon
1  1.00 384 866 384 850 416 850 416 866 spline
1  1.00 384 850 384 834 416 834 416 850 spline
1  1.00 384 834 384 818 416 818 416 834 spline
1  1.00 384 818 384 802 416 802 416 818 spline
1  1.00 384 802 384 786 416 786 416 802 spline
1  1.00 416 786 416 770 2 polygon
(Transformer) {/Helvetica 1.000 cf} 2 16 0 256 914 label
1.00 0 1168 1170 variac
(Variac) {/Helvetica 1.000 cf} 2 16 0 1072 1250 label
1.00 0 1152 834 saturable_reactor
(Saturable) {/Helvetica 1.000 cf} 2 16 0 1056 954 label
(reactor) {/Helvetica 1.000 cf} 2 16 0 1080 914 label
1.00 0 496 434 synchro
(Synchro) {/Helvetica 1.000 cf} 2 16 0 432 642 label
1  1.00 1136 466 64 0.00 360.00 xcarc
1  1.00 1136 466 45 0.00 360.00 xcarc
1  1.00 1200 466 1232 466 2 polygon
1  1.00 1040 482 1092 482 2 polygon
1  1.00 1040 450 1092 450 2 polygon
1  1.00 1232 514 1180 514 2 polygon
1  1.00 1232 418 1180 418 2 polygon
(Synchro) {/Helvetica 1.000 cf} 2 16 0 1060 566 label
1  1.00 600 882 616 866 600 850 616 834 600 818 616 802 600 786 616 770 600 754 
552 754 10 polygon
1  1.00 552 882 600 882 2 polygon
1  1.00 680 882 664 866 680 850 664 834 680 818 664 802 680 786 664 770 680 754 
728 754 10 polygon
1  1.00 728 882 680 882 2 polygon
1  1.00 632 882 632 754 2 polygon
1  1.00 648 882 648 754 2 polygon
(Transformer) {/Helvetica 1.000 cf} 2 16 0 520 914 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
