%!PS-Adobe-3.0 EPSF-3.0
%%Title: 01044.eps
%%Creator: Xcircuit v2.0
%%CreationDate: Mon Aug 27 19:25:27 2001
%%Pages: 1
%%BoundingBox: 68 68 359 198
%%DocumentNeededResources: font Helvetica font Helvetica-Bold 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.0
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--2/25/99  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.0 2
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/cf { dup type /realtype eq {40 mul /fscale exch def} if dup /xfont exch def
   findfont fscale scalefont setfont } def
/Ss { gsave 0.67 dup scale gsave mty neg rmoveto
   glevel 1 add /glevel exch def } def
/ss { gsave 0.67 dup scale gsave mty 0.5 mul rmoveto
   glevel 1 add /glevel exch def } def
/ns { currentpoint transform   % preserve x position!
   glevel {grestore} repeat /glevel 0 def
   itransform pop currentpoint pop sub 0 rmoveto } def
/ul { showflag 1 eq { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { showflag 1 eq { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave true charpath flattenpath pathbbox pop exch pop sub
   grestore } def
/bs { stW 0 rmoveto } def
/pspc 0 def
/qS { (aa) stW (a a) stW sub 4 div 0 rmoveto } def
/hS { qS qS } def
/textx { dup 1 add copy 0 exch { exch dup type /stringtype eq
	{stringwidth pop add}{exec} ifelse } repeat neg ns } def
/mty { 0 topmat setmatrix (A) true charpath flattenpath pathbbox exch
   pop exch sub exch pop neg grestore } def
/texty { gsave 2 copy pop exec mty } def
/tcenter { textx grestore 0.5 mul 0 rmoveto } def
/tright  { textx grestore fspc sub 0 rmoveto } def
/tmiddle { texty 0.5 mul rmoveto } def
/ttop    { texty fspc sub rmoveto } def
/tshow {{ dup type /stringtype eq {show}{exec} ifelse} repeat ns } def

/label  { gsave translate 0 0 moveto rotate /just exch def just 16 and 0 gt
	{0 1 dtransform gsave pagemat setmatrix idtransform exch grestore
	1 0 dtransform gsave pagemat setmatrix idtransform exch grestore
	dup 0 eq {pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse
	{-1 /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse exch 0 lt
	{-1 /just just dup 12 and 4 ne {12 xor} if def} {1} ifelse scale } if
	/glevel 0 def /showflag 0 def /fspc pspc def
	just 1 and 0 gt {gsave just 2 and 0 gt {tright}{tcenter} ifelse}
	{fspc 0 rmoveto} ifelse
	just 4 and 0 gt {just 8 and 0 gt {ttop}{tmiddle} ifelse}
	{0 fspc rmoveto} ifelse
	/showflag 1 def tshow grestore } def
/pinlabel { hlevel 0 eq { /pspc 20 def label /pspc 0 def }
	{ pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/begingate { /hlevel hlevel 1 add def gsave translate 0 0 moveto dup 0 lt
	{neg 1 sub -1 1 scale} if rotate dup scale } bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore } bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt { newpath } { stroke } ifelse grestore } def
/scb { gsave setrgbcolor } bind def  /sce { grestore } bind def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 setgray } def
/insertion {/PSobj save def /showpage {} def bop translate} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/arrowhead {
% -12 -32 24 36 bbox
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249  1.00 endpath
endgate
} def

/arrow {
% -12 -40 24 80 bbox
begingate
1  0.80 0 -40 0 20 2 polygon
1.00 0 0 40 arrowhead
endgate
} def

%%Page: 1 1
%%PageOrientation: Portrait
/pgsave save def bop
% 688 328 offsets
0.7500 inchscale
2.6000 setlinewidth

0.812 0.812 0.812 scb
240  1.00 272 552 272 488 944 488 944 552 4 polygon
240  1.00 272 424 272 360 944 360 944 424 4 polygon
240  1.00 384 488 384 424 1056 424 1056 488 4 polygon
sce
240  1.00 272 552 272 360 256 360 256 552 4 polygon
240  1.00 944 552 944 488 960 488 960 552 4 polygon
240  1.00 944 424 944 360 960 360 960 424 4 polygon
1  1.00 288 504 288 488 2 polygon
1  1.00 336 504 336 488 2 polygon
1  1.00 368 504 368 488 2 polygon
1  1.00 392 504 392 488 2 polygon
1  1.00 408 504 408 488 2 polygon
1  1.00 420 504 420 488 2 polygon
1  1.00 428 504 428 488 2 polygon
1  1.00 434 504 434 490 2 polygon
1  1.00 448 504 448 488 2 polygon
1  1.00 496 504 496 488 2 polygon
1  1.00 528 504 528 488 2 polygon
1  1.00 552 504 552 488 2 polygon
1  1.00 568 504 568 488 2 polygon
1  1.00 580 504 580 488 2 polygon
1  1.00 588 504 588 488 2 polygon
1  1.00 594 504 594 490 2 polygon
1  1.00 608 504 608 488 2 polygon
1  1.00 656 504 656 488 2 polygon
1  1.00 688 504 688 488 2 polygon
1  1.00 712 504 712 488 2 polygon
1  1.00 728 504 728 488 2 polygon
1  1.00 740 504 740 488 2 polygon
1  1.00 748 504 748 488 2 polygon
1  1.00 754 504 754 490 2 polygon
1  1.00 768 504 768 488 2 polygon
1  1.00 816 504 816 488 2 polygon
1  1.00 848 504 848 488 2 polygon
1  1.00 872 504 872 488 2 polygon
1  1.00 888 504 888 488 2 polygon
1  1.00 900 504 900 488 2 polygon
1  1.00 908 504 908 488 2 polygon
1  1.00 914 504 914 490 2 polygon
1  1.00 400 488 400 472 2 polygon
1  1.00 448 488 448 472 2 polygon
1  1.00 480 488 480 472 2 polygon
1  1.00 504 488 504 472 2 polygon
1  1.00 520 488 520 472 2 polygon
1  1.00 532 488 532 472 2 polygon
1  1.00 540 488 540 472 2 polygon
1  1.00 546 488 546 474 2 polygon
1  1.00 560 488 560 472 2 polygon
1  1.00 608 488 608 472 2 polygon
1  1.00 640 488 640 472 2 polygon
1  1.00 664 488 664 472 2 polygon
1  1.00 680 488 680 472 2 polygon
1  1.00 692 488 692 472 2 polygon
1  1.00 700 488 700 472 2 polygon
1  1.00 706 488 706 474 2 polygon
1  1.00 720 488 720 472 2 polygon
1  1.00 768 488 768 472 2 polygon
1  1.00 800 488 800 472 2 polygon
1  1.00 824 488 824 472 2 polygon
1  1.00 840 488 840 472 2 polygon
1  1.00 852 488 852 472 2 polygon
1  1.00 860 488 860 472 2 polygon
1  1.00 866 488 866 474 2 polygon
1  1.00 880 488 880 472 2 polygon
1  1.00 928 488 928 472 2 polygon
1  1.00 960 488 960 472 2 polygon
1  1.00 984 488 984 472 2 polygon
1  1.00 1000 488 1000 472 2 polygon
1  1.00 1012 488 1012 472 2 polygon
1  1.00 1020 488 1020 472 2 polygon
1  1.00 1026 488 1026 474 2 polygon
1  1.00 416 440 416 424 2 polygon
1  1.00 448 440 448 424 2 polygon
1  1.00 480 440 480 424 2 polygon
1  1.00 512 440 512 424 2 polygon
1  1.00 544 440 544 424 2 polygon
1  1.00 576 440 576 424 2 polygon
1  1.00 608 440 608 424 2 polygon
1  1.00 640 440 640 424 2 polygon
1  1.00 672 440 672 424 2 polygon
1  1.00 704 440 704 424 2 polygon
1  1.00 736 440 736 424 2 polygon
1  1.00 768 440 768 424 2 polygon
1  1.00 800 440 800 424 2 polygon
1  1.00 832 440 832 424 2 polygon
1  1.00 864 440 864 424 2 polygon
1  1.00 896 440 896 424 2 polygon
1  1.00 928 440 928 424 2 polygon
1  1.00 960 440 960 424 2 polygon
1  1.00 992 440 992 424 2 polygon
1  1.00 1024 440 1024 424 2 polygon
1  1.00 304 424 304 408 2 polygon
1  1.00 336 424 336 408 2 polygon
1  1.00 368 424 368 408 2 polygon
1  1.00 400 424 400 408 2 polygon
1  1.00 432 424 432 408 2 polygon
1  1.00 464 424 464 408 2 polygon
1  1.00 496 424 496 408 2 polygon
1  1.00 528 424 528 408 2 polygon
1  1.00 560 424 560 408 2 polygon
1  1.00 592 424 592 408 2 polygon
1  1.00 624 424 624 408 2 polygon
1  1.00 656 424 656 408 2 polygon
1  1.00 688 424 688 408 2 polygon
1  1.00 720 424 720 408 2 polygon
1  1.00 752 424 752 408 2 polygon
1  1.00 784 424 784 408 2 polygon
1  1.00 816 424 816 408 2 polygon
1  1.00 848 424 848 408 2 polygon
1  1.00 880 424 880 408 2 polygon
1  1.00 912 424 912 408 2 polygon
(Numerical quantities are represented by) {/Helvetica 1.000 cf} 2 16 0 272 296 label
(the positioning of the slide.) {/Helvetica 1.000 cf} 2 16 0 272 256 label
1.00 270 1224 456 arrow
1.00 90 1120 456 arrow
(Slide) {/Helvetica 1.000 cf} 2 16 0 1120 480 label
0  2.00 720 568 720 344 880 344 880 568 4 polygon
0.000 0.000 1.000 scb
1  1.00 800 568 800 344 2 polygon
sce
0  1.00 272 552 272 488 944 488 944 552 4 polygon
0  1.00 384 488 384 424 1056 424 1056 488 4 polygon
0  1.00 272 424 272 360 944 360 944 424 4 polygon
(Slide rule) {/Helvetica-Bold 1.000 cf} 2 16 0 496 664 label
1.00 135 832 600 arrow
(Cursor) {/Helvetica 1.000 cf} 2 16 0 864 632 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
