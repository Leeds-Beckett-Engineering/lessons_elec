%!PS-Adobe-3.0 EPSF-3.0
%%Title: 05128.eps
%%Creator: Xcircuit v2.0
%%CreationDate: Mon Jan 21 13:09:12 2002
%%Pages: 1
%%BoundingBox: 68 68 337 326
%%DocumentNeededResources: font Helvetica 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.0
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--2/25/99  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.0 2
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/cf { dup type /realtype eq {40 mul /fscale exch def} if dup /xfont exch def
   findfont fscale scalefont setfont } def
/Ss { gsave 0.67 dup scale gsave mty neg rmoveto
   glevel 1 add /glevel exch def } def
/ss { gsave 0.67 dup scale gsave mty 0.5 mul rmoveto
   glevel 1 add /glevel exch def } def
/ns { currentpoint transform   % preserve x position!
   glevel {grestore} repeat /glevel 0 def
   itransform pop currentpoint pop sub 0 rmoveto } def
/ul { showflag 1 eq { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { showflag 1 eq { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave true charpath flattenpath pathbbox pop exch pop sub
   grestore } def
/bs { stW 0 rmoveto } def
/pspc 0 def
/qS { (aa) stW (a a) stW sub 4 div 0 rmoveto } def
/hS { qS qS } def
/textx { dup 1 add copy 0 exch { exch dup type /stringtype eq
	{stringwidth pop add}{exec} ifelse } repeat neg ns } def
/mty { 0 topmat setmatrix (A) true charpath flattenpath pathbbox exch
   pop exch sub exch pop neg grestore } def
/texty { gsave 2 copy pop exec mty } def
/tcenter { textx grestore 0.5 mul 0 rmoveto } def
/tright  { textx grestore fspc sub 0 rmoveto } def
/tmiddle { texty 0.5 mul rmoveto } def
/ttop    { texty fspc sub rmoveto } def
/tshow {{ dup type /stringtype eq {show}{exec} ifelse} repeat ns } def

/label  { gsave translate 0 0 moveto rotate /just exch def just 16 and 0 gt
	{0 1 dtransform gsave pagemat setmatrix idtransform exch grestore
	1 0 dtransform gsave pagemat setmatrix idtransform exch grestore
	dup 0 eq {pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse
	{-1 /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse exch 0 lt
	{-1 /just just dup 12 and 4 ne {12 xor} if def} {1} ifelse scale } if
	/glevel 0 def /showflag 0 def /fspc pspc def
	just 1 and 0 gt {gsave just 2 and 0 gt {tright}{tcenter} ifelse}
	{fspc 0 rmoveto} ifelse
	just 4 and 0 gt {just 8 and 0 gt {ttop}{tmiddle} ifelse}
	{0 fspc rmoveto} ifelse
	/showflag 1 def tshow grestore } def
/pinlabel { hlevel 0 eq { /pspc 20 def label /pspc 0 def }
	{ pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/begingate { /hlevel hlevel 1 add def gsave translate 0 0 moveto dup 0 lt
	{neg 1 sub -1 1 scale} if rotate dup scale } bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore } bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt { newpath } { stroke } ifelse grestore } def
/scb { gsave setrgbcolor } bind def  /sce { grestore } bind def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 setgray } def
/insertion {/PSobj save def /showpage {} def bop translate} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/real_batt {
% -80 -128 160 256 bbox
begingate
1  1.00 -80 32 -32 128 80 128 32 32 -80 32 5 polygon
0  1.00 -80 32 -80 -128 32 -128 32 32 4 polygon
1  1.00 32 -128 80 -32 80 128 3 polygon
1  5.00 0 80 0 112 2 polygon
1  5.00 -48 48 -48 80 2 polygon
1.000 0.000 0.000 scb
(+) {/Helvetica 1.000 cf} 2 16 0 -40 32 label
sce
(-) {/Helvetica 1.000 cf} 2 16 0 8 64 label
0.000 0.000 1.000 scb
1  1.00 -24 -48 48 0.00 360.00 xcarc
sce
1.000 0.647 0.000 scb
241  1.00 -16 -8 -32 -32 -24 -32 -40 -56 -32 -56 -48 -80 -16 -48 -24 -48 -8 -24 
-16 -24 -8 -8 -16 -8 12 polygon
sce
endgate
} def

/switch1 {
% -144 -64 288 126 bbox
begingate
0.824 0.706 0.549 scb
240  1.00 -112 0 -112 -64 112 -64 112 0 4 polygon
sce
1  3.00 -144 0 144 0 2 polygon
0  1.00 -112 0 -112 -64 112 -64 112 0 4 polygon
0.600 0.600 0.600 scb
241  1.00 -64 -32 16 0.00 360.00 xcarc
sce
1  1.00 -64 -32 16 0.00 360.00 xcarc
1  1.00 -52 -22 -76 -42 2 polygon
0.600 0.600 0.600 scb
241  1.00 64 -32 16 0.00 360.00 xcarc
sce
1  1.00 64 -32 16 0.00 360.00 xcarc
1  1.00 76 -22 52 -42 2 polygon
1  1.00 -16 24 16 24 48 0 -48 0 spline
1  1.00 -20 16 -36 56 -22 62 -4 18 4 polygon
endgate
} def

/clip {
% -24 -12 52 20 bbox
begingate
0.600 0.600 0.600 scb
241  1.00 -24 -12 24 -12 28 -8 28 -4 24 0 -12 8 -12 4 0 0 0 -4 -24 -4 -24 -12 
11 polygon
sce
1  1.00 -24 -12 24 -12 28 -8 28 -4 24 0 -12 8 -12 4 0 0 0 -4 -24 -4 -24 -12 
11 polygon
1  1.00 28 -8 24 -4 20 -8 16 -4 12 -8 8 -4 4 -4 7 polygon
endgate
} def

/terminal_strip_3 {
% -208 -64 400 128 bbox
begingate
0  1.00 -96 48 -96 -48 -64 -48 -64 48 4 polygon
0  1.00 -192 48 -192 -48 -160 -48 -160 48 4 polygon
1  1.00 -176 32 8 0.00 360.00 xcarc
1  1.00 -172 38 -182 29 2 polygon
1  1.00 -170 35 -180 26 2 polygon
1  1.00 -176 -32 8 0.00 360.00 xcarc
1  1.00 -172 -26 -182 -35 2 polygon
1  1.00 -170 -29 -180 -38 2 polygon
0  1.00 -144 48 -144 -48 -112 -48 -112 48 4 polygon
1  1.00 -128 32 8 0.00 360.00 xcarc
1  1.00 -124 38 -134 29 2 polygon
1  1.00 -122 35 -132 26 2 polygon
1  1.00 -128 -32 8 0.00 360.00 xcarc
1  1.00 -124 -26 -134 -35 2 polygon
1  1.00 -122 -29 -132 -38 2 polygon
1  1.00 -80 32 8 0.00 360.00 xcarc
1  1.00 -76 38 -86 29 2 polygon
1  1.00 -74 35 -84 26 2 polygon
1  1.00 -80 -32 8 0.00 360.00 xcarc
1  1.00 -76 -26 -86 -35 2 polygon
1  1.00 -74 -29 -84 -38 2 polygon
0  1.00 -48 48 -48 -48 -16 -48 -16 48 4 polygon
1  1.00 -32 32 8 0.00 360.00 xcarc
1  1.00 -28 38 -38 29 2 polygon
1  1.00 -26 35 -36 26 2 polygon
1  1.00 -32 -32 8 0.00 360.00 xcarc
1  1.00 -28 -26 -38 -35 2 polygon
1  1.00 -26 -29 -36 -38 2 polygon
0  1.00 0 48 0 -48 32 -48 32 48 4 polygon
1  1.00 16 32 8 0.00 360.00 xcarc
1  1.00 20 38 10 29 2 polygon
1  1.00 22 35 12 26 2 polygon
1  1.00 16 -32 8 0.00 360.00 xcarc
1  1.00 20 -26 10 -35 2 polygon
1  1.00 22 -29 12 -38 2 polygon
0  1.00 48 48 48 -48 80 -48 80 48 4 polygon
1  1.00 64 32 8 0.00 360.00 xcarc
1  1.00 68 38 58 29 2 polygon
1  1.00 70 35 60 26 2 polygon
1  1.00 64 -32 8 0.00 360.00 xcarc
1  1.00 68 -26 58 -35 2 polygon
1  1.00 70 -29 60 -38 2 polygon
0  1.00 96 48 96 -48 128 -48 128 48 4 polygon
1  1.00 112 32 8 0.00 360.00 xcarc
1  1.00 116 38 106 29 2 polygon
1  1.00 118 35 108 26 2 polygon
1  1.00 112 -32 8 0.00 360.00 xcarc
1  1.00 116 -26 106 -35 2 polygon
1  1.00 118 -29 108 -38 2 polygon
0  1.00 144 48 144 -48 176 -48 176 48 4 polygon
1  1.00 160 32 8 0.00 360.00 xcarc
1  1.00 164 38 154 29 2 polygon
1  1.00 166 35 156 26 2 polygon
1  1.00 160 -32 8 0.00 360.00 xcarc
1  1.00 164 -26 154 -35 2 polygon
1  1.00 166 -29 156 -38 2 polygon
0.600 0.600 0.600 scb
0  2.00 -208 64 -208 -64 192 -64 192 64 4 polygon
sce
endgate
} def

/transformer2 {
% -112 -112 208 224 bbox
begingate
0.647 0.165 0.165 scb
241  1.00 -80 -32 -80 -80 -64 -96 48 -96 64 -80 64 -32 -80 -32 7 polygon
240  1.00 -112 -32 -112 32 96 32 96 -32 4 polygon
241  1.00 -80 32 -80 80 -64 96 48 96 64 80 64 32 -80 32 7 polygon
sce
1  2.00 -48 96 -48 112 2 polygon
1  2.00 32 96 32 112 2 polygon
1  2.00 32 -112 32 -96 2 polygon
1  2.00 -48 -112 -48 -96 2 polygon
0  1.00 -112 32 -112 -32 96 -32 96 32 4 polygon
1  1.00 -80 32 -80 80 -64 96 48 96 64 80 64 32 6 polygon
1  1.00 -80 -32 -80 -80 -64 -96 48 -96 64 -80 64 -32 6 polygon
endgate
} def

/lamp_neon {
% -16 -56 32 112 bbox
begingate
1  1.00 -16 32 -8 16 0 56 -8 -24 spline
1  1.00 16 32 8 16 0 56 8 -24 spline
1  1.00 -8 -32 8 -32 8 -24 -8 -24 spline
1  2.00 -4 20 -4 -8 2 polygon
1  2.00 4 20 4 -8 2 polygon
1  1.00 -4 -8 -4 -36 -16 -40 -16 -56 4 polygon
1  1.00 4 -8 4 -36 16 -40 16 -56 4 polygon
endgate
} def

/diode1 {
% -48 -12 96 24 bbox
begingate
0.600 0.600 0.600 scb
240  1.00 -32 12 -32 -12 32 -12 32 12 4 polygon
sce
0  1.00 -32 12 -32 -12 32 -12 32 12 4 polygon
1.000 1.000 1.000 scb
240  1.00 16 12 16 -12 20 -12 20 12 4 polygon
sce
1  2.00 -32 0 -48 0 2 polygon
1  2.00 32 0 48 0 2 polygon
endgate
} def

%%Page: 05127.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
% 800 1264 offsets
0.7500 inchscale
2.6000 setlinewidth

1.00 0 336 784 real_batt
1.00 0 656 1040 switch1
1.00 -271 280 888 clip
1.00 -1 360 896 clip
1  1.00 288 1024 592 896 592 992 288 912 spline
(Switch #1) {/Helvetica 1.000 cf} 2 16 0 576 1120 label
1.00 0 864 704 terminal_strip_3
1.00 0 720 384 transformer2
(120 V) {/Helvetica 1.000 cf} 2 16 0 528 480 label
(12 V) {/Helvetica 1.000 cf} 2 16 0 544 256 label
1.00 -271 664 512 clip
1.00 -271 744 512 clip
1  1.00 648 608 688 592 688 656 672 536 spline
1  1.00 712 584 736 600 736 656 752 536 spline
1  1.00 720 880 784 864 736 752 720 992 spline
1  1.00 504 848 680 904 688 752 384 888 spline
1.00 0 712 848 lamp_neon
1  1.00 696 792 688 752 2 polygon
1  1.00 728 792 736 752 2 polygon
1.00 0 1008 528 switch1
1  1.00 768 560 768 496 928 496 736 656 spline
1  1.00 704 592 864 592 880 656 688 656 spline
1.00 0 928 800 diode1
1  2.00 880 800 880 752 2 polygon
1  2.00 976 800 976 752 2 polygon
1  1.00 1056 592 1328 544 1088 496 976 656 spline
(Switch #2) {/Helvetica 1.000 cf} 2 16 0 928 416 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
