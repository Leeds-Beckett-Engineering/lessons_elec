%!PS-Adobe-3.0 EPSF-3.0
%%Title: 05311.eps
%%Creator: Xcircuit v2.0
%%CreationDate: Wed May  8 19:12:30 2002
%%Pages: 1
%%BoundingBox: 68 68 391 305
%%DocumentNeededResources: font Helvetica 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.0
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--2/25/99  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.0 2
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/cf { dup type /realtype eq {40 mul /fscale exch def} if dup /xfont exch def
   findfont fscale scalefont setfont } def
/Ss { gsave 0.67 dup scale gsave mty neg rmoveto
   glevel 1 add /glevel exch def } def
/ss { gsave 0.67 dup scale gsave mty 0.5 mul rmoveto
   glevel 1 add /glevel exch def } def
/ns { currentpoint transform   % preserve x position!
   glevel {grestore} repeat /glevel 0 def
   itransform pop currentpoint pop sub 0 rmoveto } def
/ul { showflag 1 eq { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { showflag 1 eq { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave true charpath flattenpath pathbbox pop exch pop sub
   grestore } def
/bs { stW 0 rmoveto } def
/pspc 0 def
/qS { (aa) stW (a a) stW sub 4 div 0 rmoveto } def
/hS { qS qS } def
/textx { dup 1 add copy 0 exch { exch dup type /stringtype eq
	{stringwidth pop add}{exec} ifelse } repeat neg ns } def
/mty { 0 topmat setmatrix (A) true charpath flattenpath pathbbox exch
   pop exch sub exch pop neg grestore } def
/texty { gsave 2 copy pop exec mty } def
/tcenter { textx grestore 0.5 mul 0 rmoveto } def
/tright  { textx grestore fspc sub 0 rmoveto } def
/tmiddle { texty 0.5 mul rmoveto } def
/ttop    { texty fspc sub rmoveto } def
/tshow {{ dup type /stringtype eq {show}{exec} ifelse} repeat ns } def

/label  { gsave translate 0 0 moveto rotate /just exch def just 16 and 0 gt
	{0 1 dtransform gsave pagemat setmatrix idtransform exch grestore
	1 0 dtransform gsave pagemat setmatrix idtransform exch grestore
	dup 0 eq {pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse
	{-1 /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse exch 0 lt
	{-1 /just just dup 12 and 4 ne {12 xor} if def} {1} ifelse scale } if
	/glevel 0 def /showflag 0 def /fspc pspc def
	just 1 and 0 gt {gsave just 2 and 0 gt {tright}{tcenter} ifelse}
	{fspc 0 rmoveto} ifelse
	just 4 and 0 gt {just 8 and 0 gt {ttop}{tmiddle} ifelse}
	{0 fspc rmoveto} ifelse
	/showflag 1 def tshow grestore } def
/pinlabel { hlevel 0 eq { /pspc 20 def label /pspc 0 def }
	{ pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/begingate { /hlevel hlevel 1 add def gsave translate 0 0 moveto dup 0 lt
	{neg 1 sub -1 1 scale} if rotate dup scale } bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore } bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt { newpath } { stroke } ifelse grestore } def
/scb { gsave setrgbcolor } bind def  /sce { grestore } bind def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 setgray } def
/insertion {/PSobj save def /showpage {} def bop translate} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/clip {
% -24 -12 52 20 bbox
begingate
0.600 0.600 0.600 scb
241  1.00 -24 -12 24 -12 28 -8 28 -4 24 0 -12 8 -12 4 0 0 0 -4 -24 -4 -24 -12 
11 polygon
sce
1  1.00 -24 -12 24 -12 28 -8 28 -4 24 0 -12 8 -12 4 0 0 0 -4 -24 -4 -24 -12 
11 polygon
1  1.00 28 -8 24 -4 20 -8 16 -4 12 -8 8 -4 4 -4 7 polygon
endgate
} def

/resistor4 {
% -48 -8 96 16 bbox
begingate
0.800 0.800 0.800 scb
240  1.00 -22 6 -22 -6 22 -6 22 6 4 polygon
241  1.00 -42 14 -42 -14 -22 -6 -22 6 spline
241  1.00 42 14 42 -14 22 -6 22 6 spline
sce
1  1.00 -42 -18 -42 18 -22 6 -22 -6 spline
1  1.00 42 -18 42 18 22 6 22 -6 spline
1.000 0.647 0.000 scb
240  1.00 -18 6 -18 -6 -14 -6 -14 6 4 polygon
240  1.00 -10 6 -10 -6 -6 -6 -6 6 4 polygon
240  1.00 -2 6 -2 -6 2 -6 2 6 4 polygon
sce
0.898 0.898 0.898 scb
240  1.00 10 6 10 -6 14 -6 14 6 4 polygon
sce
1  1.00 -22 6 22 6 2 polygon
1  1.00 -22 -6 22 -6 2 polygon
1  2.00 -38 0 -48 0 2 polygon
1  2.00 48 0 38 0 2 polygon
endgate
} def

/capacitor1 {
% -32 -48 64 96 bbox
begingate
0.647 0.165 0.165 scb
241  1.00 0 16 32 0.00 360.00 xcarc
sce
1  2.00 -16 -16 -32 -32 -32 -48 3 polygon
1  2.00 16 -16 32 -32 32 -48 3 polygon
1  2.00 -16 -16 -16 -12 2 polygon
1  2.00 16 -16 16 -12 2 polygon
1  1.00 0 16 32 0.00 360.00 xcarc
endgate
} def

/dot {
% -10 -10 20 20 bbox
begingate
248  1.00 0 0 6 0.00 360.00 xcarc
endgate
} def

%%Page: 05001.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
% 704 768 offsets
0.7500 inchscale
2.6000 setlinewidth

0  1.00 256 752 256 512 320 512 320 752 4 polygon
1  1.00 320 752 512 896 512 656 320 512 4 polygon
1  1.00 512 896 448 896 256 752 3 polygon
1  1.00 336 736 336 688 416 752 416 800 336 736 5 polygon
1  1.00 416 656 496 720 2 polygon
1  1.00 416 640 496 704 2 polygon
1  1.00 416 624 496 688 2 polygon
1  1.00 416 672 496 736 2 polygon
1  1.00 416 688 496 752 2 polygon
1  1.00 288 544 8 0.00 360.00 xcarc
(phones) {/Helvetica 0.500 cf} 2 16 0 256 560 label
0.600 0.600 0.600 scb
5  1.00 288 432 288 544 2 polygon
sce
("Mono" headphone) {/Helvetica 1.000 cf} 2 16 0 304 372 label
240  1.00 276 376 276 312 300 312 300 376 4 polygon
0  1.00 284 408 284 376 292 376 292 408 4 polygon
1  1.00 284 408 286 412 284 418 288 422 4 polygon
1  1.00 292 408 290 412 292 418 288 422 4 polygon
(Radio) {/Helvetica 1.000 cf} 2 16 0 540 800 label
0.600 0.600 0.600 scb
240  1.00 660 512 660 480 684 480 684 512 4 polygon
sce
0.800 0.800 0.800 scb
240  1.00 664 524 664 512 680 512 680 524 4 polygon
sce
1  2.00 672 524 672 536 2 polygon
("Phono" plug) {/Helvetica 1.000 cf} 2 16 0 704 496 label
(plug) {/Helvetica 1.000 cf} 2 16 0 344 328 label
1.00 270 680 560 clip
1  1.00 672 640 696 672 928 672 672 584 spline
1  1.00 640 768 484 656 620 544 928 768 spline
1.00 270 1144 720 resistor4
1.00 0 1072 816 capacitor1
1.00 0 1144 768 dot
1.00 0 1144 672 dot
1  1.00 1144 672 1248 672 2 polygon
1  1.00 1144 768 1248 768 2 polygon
(. . .) {/Helvetica 1.000 cf} 2 16 0 1264 768 label
(. . .) {/Helvetica 1.000 cf} 2 16 0 1264 672 label
1  2.00 304 768 480 1072 2 polygon
1.00 0 304 768 dot
1  1.00 416 800 432 752 464 768 464 832 spline
1  1.00 512 800 496 848 464 832 464 768 spline
1  3.00 672 224 280 216 288 312 672 480 spline
0  1.00 660 512 660 480 684 480 684 512 4 polygon
0  1.00 664 524 664 512 680 512 680 524 4 polygon
1.00 330 644 540 clip
0.600 0.600 0.600 scb
3  1.00 1376 960 992 960 992 576 1376 576 4 polygon
sce
(Amplifier circuit) {/Helvetica 1.000 cf} 2 16 0 1056 896 label
1.00 0 992 768 dot
1.00 0 992 672 dot
(Audio) {/Helvetica 1.000 cf} 2 16 0 920 728 label
(input) {/Helvetica 1.000 cf} 2 16 0 928 696 label
1  2.00 1152 768 1104 768 2 polygon
1  2.00 1040 768 976 768 2 polygon
1  2.00 976 672 1152 672 2 polygon
1.00 0 952 776 clip
1.00 0 952 680 clip
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
