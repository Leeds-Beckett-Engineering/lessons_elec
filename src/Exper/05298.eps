%!PS-Adobe-3.0 EPSF-3.0
%%Title: 05298.eps
%%Creator: Xcircuit v2.0
%%CreationDate: Sun Apr 21 16:16:22 2002
%%Pages: 1
%%BoundingBox: 68 68 311 261
%%DocumentNeededResources: font Helvetica font Helvetica-Oblique 
%%+ font Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.0
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--2/25/99  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.0 2
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/cf { dup type /realtype eq {40 mul /fscale exch def} if dup /xfont exch def
   findfont fscale scalefont setfont } def
/Ss { gsave 0.67 dup scale gsave mty neg rmoveto
   glevel 1 add /glevel exch def } def
/ss { gsave 0.67 dup scale gsave mty 0.5 mul rmoveto
   glevel 1 add /glevel exch def } def
/ns { currentpoint transform   % preserve x position!
   glevel {grestore} repeat /glevel 0 def
   itransform pop currentpoint pop sub 0 rmoveto } def
/ul { showflag 1 eq { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { showflag 1 eq { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave true charpath flattenpath pathbbox pop exch pop sub
   grestore } def
/bs { stW 0 rmoveto } def
/pspc 0 def
/qS { (aa) stW (a a) stW sub 4 div 0 rmoveto } def
/hS { qS qS } def
/textx { dup 1 add copy 0 exch { exch dup type /stringtype eq
	{stringwidth pop add}{exec} ifelse } repeat neg ns } def
/mty { 0 topmat setmatrix (A) true charpath flattenpath pathbbox exch
   pop exch sub exch pop neg grestore } def
/texty { gsave 2 copy pop exec mty } def
/tcenter { textx grestore 0.5 mul 0 rmoveto } def
/tright  { textx grestore fspc sub 0 rmoveto } def
/tmiddle { texty 0.5 mul rmoveto } def
/ttop    { texty fspc sub rmoveto } def
/tshow {{ dup type /stringtype eq {show}{exec} ifelse} repeat ns } def

/label  { gsave translate 0 0 moveto rotate /just exch def just 16 and 0 gt
	{0 1 dtransform gsave pagemat setmatrix idtransform exch grestore
	1 0 dtransform gsave pagemat setmatrix idtransform exch grestore
	dup 0 eq {pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse
	{-1 /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse exch 0 lt
	{-1 /just just dup 12 and 4 ne {12 xor} if def} {1} ifelse scale } if
	/glevel 0 def /showflag 0 def /fspc pspc def
	just 1 and 0 gt {gsave just 2 and 0 gt {tright}{tcenter} ifelse}
	{fspc 0 rmoveto} ifelse
	just 4 and 0 gt {just 8 and 0 gt {ttop}{tmiddle} ifelse}
	{0 fspc rmoveto} ifelse
	/showflag 1 def tshow grestore } def
/pinlabel { hlevel 0 eq { /pspc 20 def label /pspc 0 def }
	{ pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/begingate { /hlevel hlevel 1 add def gsave translate 0 0 moveto dup 0 lt
	{neg 1 sub -1 1 scale} if rotate dup scale } bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore } bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt { newpath } { stroke } ifelse grestore } def
/scb { gsave setrgbcolor } bind def  /sce { grestore } bind def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 setgray } def
/insertion {/PSobj save def /showpage {} def bop translate} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/dip_14 {
% -448 -256 896 512 bbox
begingate
1  2.00 -400 32 -400 -32 -448 -32 -448 32 spline
0  2.00 -448 192 -448 -192 448 -192 448 192 4 polygon
0  1.00 -416 256 -416 192 -352 192 -352 256 4 polygon
(14) {/Times-Roman 1.000 cf} 2 16 0 -404 208 label
0  1.00 -288 256 -288 192 -224 192 -224 256 4 polygon
(13) {/Times-Roman 1.000 cf} 2 16 0 -276 208 label
0  1.00 -160 256 -160 192 -96 192 -96 256 4 polygon
(12) {/Times-Roman 1.000 cf} 2 16 0 -148 208 label
(11) {/Times-Roman 1.000 cf} 2 16 0 -16 208 label
0  1.00 -32 256 -32 192 32 192 32 256 4 polygon
0  1.00 96 256 96 192 160 192 160 256 4 polygon
(10) {/Times-Roman 1.000 cf} 2 16 0 104 208 label
0  1.00 224 256 224 192 288 192 288 256 4 polygon
(9) {/Times-Roman 1.000 cf} 2 16 0 248 208 label
0  1.00 352 256 352 192 416 192 416 256 4 polygon
(8) {/Times-Roman 1.000 cf} 2 16 0 368 208 label
0  1.00 352 -192 352 -256 416 -256 416 -192 4 polygon
(7) {/Times-Roman 1.000 cf} 2 16 0 368 -240 label
0  1.00 224 -192 224 -256 288 -256 288 -192 4 polygon
(6) {/Times-Roman 1.000 cf} 2 16 0 240 -240 label
(5) {/Times-Roman 1.000 cf} 2 16 0 112 -240 label
0  1.00 96 -192 96 -256 160 -256 160 -192 4 polygon
(4) {/Times-Roman 1.000 cf} 2 16 0 -16 -240 label
0  1.00 -32 -192 -32 -256 32 -256 32 -192 4 polygon
0  1.00 -160 -192 -160 -256 -96 -256 -96 -192 4 polygon
(3) {/Times-Roman 1.000 cf} 2 16 0 -144 -240 label
0  1.00 -288 -192 -288 -256 -224 -256 -224 -192 4 polygon
(2) {/Times-Roman 1.000 cf} 2 16 0 -272 -240 label
0  1.00 -416 -192 -416 -256 -352 -256 -352 -192 4 polygon
(1) {/Times-Roman 1.000 cf} 2 16 0 -392 -240 label
endgate
} def

/nor {
% -64 -48 128 96 bbox
begingate
1  1.00 -64 48 -35 48 2 polygon
1  1.00 -64 -48 -35 -48 2 polygon
1  1.00 -128 0 80 -37.00 37.00 xcarc
1  1.00 56 0 8 0.00 360.00 xcarc
1  1.00 -35 -48 96 30.00 90.00 xcarc
1  1.00 -35 48 96 270.00 330.00 xcarc
1.000 0.000 0.000 scb
(Out) {/Helvetica 1.000 cf} 2 4 0 64 0 pinlabel
(In.1) {/Helvetica 1.000 cf} 2 7 0 -56 32 pinlabel
(In.2) {/Helvetica 1.000 cf} 2 7 0 -56 -32 pinlabel
sce
endgate
} def

%%Page: 05291.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
% 722 570 offsets
% 32.00 8.00 gridspace
0.7000 inchscale
2.6000 setlinewidth

1.00 0 722 570 dip_14
(DD) {ss} (V) {/Helvetica 1.000 cf} 4 16 0 306 850 label
(Gnd) {/Helvetica 1.000 cf} 2 16 0 1066 274 label
1  1.00 338 378 338 522 402 522 3 polygon
1  1.00 402 458 386 458 386 410 466 410 466 378 5 polygon
1  1.00 530 490 594 490 594 378 3 polygon
1  1.00 978 378 978 522 914 522 3 polygon
1  1.00 914 458 930 458 930 410 850 410 850 378 5 polygon
1  1.00 786 490 722 490 722 378 3 polygon
1  1.00 1106 762 1106 618 1042 618 3 polygon
1  1.00 1042 682 1058 682 1058 730 978 730 978 762 5 polygon
1  1.00 914 650 850 650 850 762 3 polygon
1  1.00 466 762 466 618 530 618 3 polygon
1  1.00 530 682 514 682 514 730 594 730 594 762 5 polygon
1  1.00 658 650 722 650 722 762 3 polygon
("Pinout," or "connection" diagram for) {/Helvetica-Oblique 1.000 cf} 2 16 0 402 954 label
1.00 0 466 490 nor
1  1.00 402 522 410 522 2 polygon
1  1.00 402 458 410 458 2 polygon
1.00 -1 850 490 nor
1  1.00 914 522 906 522 2 polygon
1  1.00 914 458 906 458 2 polygon
1.00 -1 978 650 nor
1  1.00 1042 682 1034 682 2 polygon
1  1.00 1042 618 1034 618 2 polygon
1.00 0 594 650 nor
1  1.00 530 682 538 682 2 polygon
1  1.00 530 618 538 618 2 polygon
(the 4001 quad NOR gate) {/Helvetica-Oblique 1.000 cf} 2 16 0 498 914 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
