%!PS-Adobe-3.0 EPSF-3.0
%%Title: 05023.eps
%%Creator: Xcircuit v2.0
%%CreationDate: Sun Jan  6 20:35:22 2002
%%Pages: 1
%%BoundingBox: 68 68 406 290
%%DocumentNeededResources: font Helvetica font Helvetica-Oblique 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.0
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--2/25/99  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.0 2
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/cf { dup type /realtype eq {40 mul /fscale exch def} if dup /xfont exch def
   findfont fscale scalefont setfont } def
/Ss { gsave 0.67 dup scale gsave mty neg rmoveto
   glevel 1 add /glevel exch def } def
/ss { gsave 0.67 dup scale gsave mty 0.5 mul rmoveto
   glevel 1 add /glevel exch def } def
/ns { currentpoint transform   % preserve x position!
   glevel {grestore} repeat /glevel 0 def
   itransform pop currentpoint pop sub 0 rmoveto } def
/ul { showflag 1 eq { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { showflag 1 eq { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave true charpath flattenpath pathbbox pop exch pop sub
   grestore } def
/bs { stW 0 rmoveto } def
/pspc 0 def
/qS { (aa) stW (a a) stW sub 4 div 0 rmoveto } def
/hS { qS qS } def
/textx { dup 1 add copy 0 exch { exch dup type /stringtype eq
	{stringwidth pop add}{exec} ifelse } repeat neg ns } def
/mty { 0 topmat setmatrix (A) true charpath flattenpath pathbbox exch
   pop exch sub exch pop neg grestore } def
/texty { gsave 2 copy pop exec mty } def
/tcenter { textx grestore 0.5 mul 0 rmoveto } def
/tright  { textx grestore fspc sub 0 rmoveto } def
/tmiddle { texty 0.5 mul rmoveto } def
/ttop    { texty fspc sub rmoveto } def
/tshow {{ dup type /stringtype eq {show}{exec} ifelse} repeat ns } def

/label  { gsave translate 0 0 moveto rotate /just exch def just 16 and 0 gt
	{0 1 dtransform gsave pagemat setmatrix idtransform exch grestore
	1 0 dtransform gsave pagemat setmatrix idtransform exch grestore
	dup 0 eq {pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse
	{-1 /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse exch 0 lt
	{-1 /just just dup 12 and 4 ne {12 xor} if def} {1} ifelse scale } if
	/glevel 0 def /showflag 0 def /fspc pspc def
	just 1 and 0 gt {gsave just 2 and 0 gt {tright}{tcenter} ifelse}
	{fspc 0 rmoveto} ifelse
	just 4 and 0 gt {just 8 and 0 gt {ttop}{tmiddle} ifelse}
	{0 fspc rmoveto} ifelse
	/showflag 1 def tshow grestore } def
/pinlabel { hlevel 0 eq { /pspc 20 def label /pspc 0 def }
	{ pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/begingate { /hlevel hlevel 1 add def gsave translate 0 0 moveto dup 0 lt
	{neg 1 sub -1 1 scale} if rotate dup scale } bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore } bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt { newpath } { stroke } ifelse grestore } def
/scb { gsave setrgbcolor } bind def  /sce { grestore } bind def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 setgray } def
/insertion {/PSobj save def /showpage {} def bop translate} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/real_batt {
% -80 -128 160 256 bbox
begingate
1  1.00 -80 32 -32 128 80 128 32 32 -80 32 5 polygon
0  1.00 -80 32 -80 -128 32 -128 32 32 4 polygon
1  1.00 32 -128 80 -32 80 128 3 polygon
1  5.00 0 80 0 112 2 polygon
1  5.00 -48 48 -48 80 2 polygon
1.000 0.000 0.000 scb
(+) {/Helvetica 1.000 cf} 2 16 0 -40 32 label
sce
(-) {/Helvetica 1.000 cf} 2 16 0 8 64 label
0.000 0.000 1.000 scb
1  1.00 -24 -48 48 0.00 360.00 xcarc
sce
1.000 0.647 0.000 scb
241  1.00 -16 -8 -32 -32 -24 -32 -40 -56 -32 -56 -48 -80 -16 -48 -24 -48 -8 -24 
-16 -24 -8 -8 -16 -8 12 polygon
sce
endgate
} def

/clip {
% -24 -12 52 20 bbox
begingate
0.600 0.600 0.600 scb
241  1.00 -24 -12 24 -12 28 -8 28 -4 24 0 -12 8 -12 4 0 0 0 -4 -24 -4 -24 -12 
11 polygon
sce
1  1.00 -24 -12 24 -12 28 -8 28 -4 24 0 -12 8 -12 4 0 0 0 -4 -24 -4 -24 -12 
11 polygon
1  1.00 28 -8 24 -4 20 -8 16 -4 12 -8 8 -4 4 -4 7 polygon
endgate
} def

/fin {
% -32 -16 64 24 bbox
begingate
1  1.00 -32 8 32 8 32 -16 3 polygon
endgate
} def

/dot {
% -10 -10 20 20 bbox
begingate
248  1.00 0 0 6 0.00 360.00 xcarc
endgate
} def

/connect {
% -10 -18 20 36 bbox
begingate
0  1.00 -8 16 -8 -16 8 -16 8 16 4 polygon
1.00 0 0 8 dot
1.00 0 0 -8 dot
endgate
} def

/alternator1 {
% -208 -192 402 371 bbox
begingate
1  1.00 -48 -32 160 0.00 360.00 xcarc
1  1.00 146 250 290 3 118 -114 -42 161 spline
1  1.00 -44 160 -132 104 2 polygon
1  1.00 116 -116 28 -172 2 polygon
1  1.00 -48 -32 48 0.00 360.00 xcarc
1  1.00 -62 -24 -48 -16 -34 -24 3 polygon
1  1.00 -62 -40 -48 -48 -34 -40 3 polygon
1  1.00 -62 -24 -62 -40 2 polygon
1  1.00 -34 -24 -34 -40 2 polygon
241  1.00 -48 -32 6 0.00 360.00 xcarc
1  1.00 48 -24 48 -96 24 -96 3 polygon
1.00 0 -16 56 fin
1.00 315 36 8 fin
1.00 225 -4 -116 fin
1  1.00 -48 -128 -112 -128 -112 -104 3 polygon
1  1.00 -114 -103 -159 -57 -143 -40 3 polygon
1  1.00 -146 -36 -146 28 -122 29 3 polygon
1  1.00 -119 35 -75 81 -57 64 3 polygon
1  1.00 -122 30 -120 34 2 polygon
1  1.00 -146 -36 -144 -40 2 polygon
1  1.00 -114 -104 -112 -104 2 polygon
1  1.00 -48 -128 -38 -128 2 polygon
1  1.00 24 -96 24 -98 2 polygon
1  1.00 16 40 20 36 2 polygon
1  1.00 -58 64 -48 64 2 polygon
1.00 75 72 160 connect
1  3.00 176 96 184 104 2 polygon
endgate
} def

%%Page: 05020.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
% 1225 786 offsets
0.7000 inchscale
2.6000 setlinewidth

1.00 0 1017 402 real_batt
1.00 285 1017 530 clip
1.00 0 1273 818 alternator1
1.000 0.000 0.000 scb
1  1.00 1193 1074 1213 1042 1257 990 1129 1074 spline
1  1.00 1185 1042 1197 1018 1229 978 1129 1042 spline
1  1.00 1169 1010 1169 998 1201 962 1129 1010 spline
sce
1.00 285 969 514 clip
1.00 45 1505 666 clip
1.00 30 1425 666 clip
1.00 0 1105 1082 clip
1.00 0 1105 1018 clip
1.000 0.000 0.000 scb
1  1.00 459 802 443 722 395 722 507 802 spline
1  1.00 453 834 437 770 389 770 501 834 spline
sce
1.00 -1 697 818 alternator1
1.000 0.000 0.000 scb
1  1.00 777 1074 757 1042 713 990 841 1074 spline
1  1.00 785 1042 773 1018 741 978 841 1042 spline
1  1.00 801 1010 801 998 769 962 841 1010 spline
sce
1.00 0 369 778 clip
1.00 0 369 730 clip
1.00 -1 865 1082 clip
1.00 -1 865 1018 clip
1  1.00 249 770 249 722 345 722 345 770 spline
1.00 -1 865 1050 clip
1  1.00 937 1058 1017 1090 1081 1074 889 1074 spline
1  1.00 937 1026 1017 1058 1081 1042 889 1042 spline
1  1.00 937 994 1017 1026 1081 1010 889 1010 spline
1.00 0 1105 1050 clip
1.000 0.000 0.000 scb
1  1.00 1493 782 1493 686 1445 670 1461 798 spline
1  1.00 1517 818 1549 722 1517 674 1469 834 spline
sce
1  1.00 953 626 1369 530 1497 642 1001 546 spline
1  1.00 889 626 1289 578 1433 658 953 530 spline
(Motor) {/Helvetica-Oblique 1.000 cf} 2 16 0 505 1026 label
(Generator) {/Helvetica-Oblique 1.000 cf} 2 16 0 1289 1026 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
