%!PS-Adobe-3.0 EPSF-3.0
%%Title: 03249.eps
%%Creator: Xcircuit v3.2
%%CreationDate: Sun Mar 18 11:59:50 2007
%%Pages: 1
%%BoundingBox: 68 68 406 181
%%DocumentNeededResources: font Times-Roman font Helvetica font Helvetica-Bold 
%%+ font Symbol 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.1
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--1/5/04  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 3.1 0
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 384 and 0 gt {/mshow {pop} def} {/mshow {show}
	def} ifelse just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {dup type
	/arraytype eq {exec} {12 string cvs true charpath flattenpath} ifelse}
	ifelse} repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {mshow} {dup type
	/arraytype eq {exec} {12 string cvs mshow} ifelse} ifelse} repeat
	grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore} def     

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginDocumentSetup

/diode {
begingate
248 1.00 -18 -16 0 16 18 -16 3 polygon
1 1.00 0 -48 0 -16 2 polygon
1 1.00 0 48 0 16 2 polygon
1 1.00 -18 16 18 16 2 polygon
1.000 0.000 0.000 scb
(d.m) {/Times-Roman cf} 2 9 0 1.00 0 48 pinlabel
(d.p) {/Times-Roman cf} 2 13 0 1.00 0 -48 pinlabel
endgate
} def

/battery {
% trivial
begingate
1 1.00 -32 32 32 32 2 polygon
1 1.00 0 64 0 32 2 polygon
1 1.00 -16 12 16 12 2 polygon
1 1.00 -16 -28 16 -28 2 polygon
1 1.00 -32 -8 32 -8 2 polygon
1 1.00 0 -64 0 -28 2 polygon
1.000 0.000 0.000 scb
(b.p) {/Times-Roman cf} 2 9 0 1.00 0 64 pinlabel
(b.m) {/Times-Roman cf} 2 13 0 1.00 0 -64 pinlabel
endgate
} def

/lamp {
begingate
1 1.00 0 32 0 80 2 polygon
1 1.00 0 0 35 0.00 360.00 xcarc
1 1.00 26 44 26 -47 2 22 2 -24 spline
1 1.00 0 32 4 16 2 polygon
1 1.00 0 -32 0 -80 2 polygon
1 1.00 0 -32 4 -20 2 polygon
endgate
} def

/dot {
begingate
248 1.00 0 0 6 0.00 360.00 xcarc
endgate
} def

/multimeter_tiny {
begingate
0.600 0.600 0.600 scb
240 1.00 -40 56 -40 32 24 32 24 56 4 polygon
1.000 0.000 0.000 scb
1.00 0 -32 -64 dot
sce
1.00 0 16 -64 dot
1.000 0.000 0.000 scb
1.00 0 16 -48 dot
0.600 0.600 0.600 scb
1 1.00 -8 0 24 0.00 360.00 xcarc
1 1.00 -8 0 20 0.00 360.00 xcarc
1 0.20 -8 0 1 0.00 360.00 xcarc
sce
0 1.00 -48 64 -48 -80 32 -80 32 64 4 polygon
1.000 0.000 0.000 scb
(W) {/Symbol cf} (V ) {/Helvetica-Bold cf} 4 16 0 0.20 -8 -50 label
sce
(COM) {/Helvetica-Bold cf} 2 16 0 0.20 -10 -66 label
1.000 0.000 0.000 scb
(A) {/Helvetica-Bold cf} 2 16 0 0.20 -24 -66 label
endgate
} def

/arrowhead {
% trivial
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 1.00 endpath
endgate
} def

/arrowhead90 {
begingate
1.00 270 -16 0 arrowhead
endgate
} def


%%EndDocumentSetup

%%Page: 1 1
%%PageOrientation: Portrait
/pgsave save def bop
0.7500 inchscale
2.6000 setlinewidth 592 456 translate

1.00 90 -80 -32 diode
1.00 0 -192 -112 battery
1.00 0 32 -112 lamp
1 1.00 -32 -32 32 -32 32 -64 3 polygon
1 1.00 -128 -32 -192 -32 -192 -80 3 polygon
1 1.00 -192 -144 -192 -192 32 -192 32 -160 4 polygon
1.000 1.000 0.000 scb
1 1.00 0 -80 -32 -48 2 polygon
1 1.00 64 -80 96 -48 2 polygon
1 1.00 64 -144 96 -176 2 polygon
1 1.00 0 -144 -32 -176 2 polygon
1 1.00 -16 -112 -64 -112 2 polygon
1 1.00 80 -112 128 -112 2 polygon
sce
(+) {/Helvetica cf} 2 16 0 1.00 -224 -64 label
(-) {/Helvetica cf} 2 16 0 1.00 -224 -176 label
1.00 90 528 -32 diode
-1.00 180 416 -112 battery
1.00 0 640 -112 lamp
1 1.00 576 -32 640 -32 640 -64 3 polygon
1 1.00 480 -32 416 -32 416 -80 3 polygon
1 1.00 416 -144 416 -192 640 -192 640 -160 4 polygon
(+) {/Helvetica cf} 2 28 0 1.00 384 -160 label
(-) {/Helvetica cf} 2 28 0 1.00 384 -48 label
(6 V) {/Times-Roman cf} 2 16 0 0.75 -304 -128 label
(6 V) {/Times-Roman cf} 2 16 0 0.75 304 -128 label
(+) {/Helvetica cf} 2 19 0 1.00 568 -16 label
(-) {/Helvetica cf} 2 19 0 1.00 512 -16 label
1.00 0 -72 96 multimeter_tiny
(0.7 V) {/Times-Roman cf} 2 16 0 0.50 -104 136 label
1.000 0.000 0.000 scb
-1.00 180 -136 -24 arrowhead
sce
-1.00 180 -16 -24 arrowhead
1 1.00 -24 32 -16 16 -16 -32 -56 32 spline
1.000 0.000 0.000 scb
1 1.00 -136 88 -144 16 -136 -32 -56 48 spline
sce
(-) {/Helvetica cf} 2 16 0 1.00 -64 -32 label
(+) {/Helvetica cf} 2 16 0 1.00 -120 -16 label
1.00 0 200 -48 multimeter_tiny
1.000 0.000 0.000 scb
1.00 0 48 -32 arrowhead90
sce
1.00 0 48 -192 arrowhead90
1 1.00 136 -192 208 -200 216 -112 48 -192 spline
1.000 0.000 0.000 scb
1 1.00 152 -64 128 -24 56 -32 216 -96 spline
sce
(5.3 V) {/Times-Roman cf} 2 16 0 0.50 168 -8 label
1.00 0 808 -48 multimeter_tiny
1 1.00 744 -192 816 -200 824 -112 656 -192 spline
1.000 0.000 0.000 scb
1 1.00 760 -64 736 -24 664 -32 824 -96 spline
1.00 0 656 -32 arrowhead90
sce
1.00 0 656 -192 arrowhead90
1.00 0 536 112 multimeter_tiny
-1.00 180 472 -40 arrowhead
1.000 0.000 0.000 scb
-1.00 180 592 -40 arrowhead
sce
(6.0 V) {/Times-Roman cf} 2 16 0 0.50 504 152 label
(0.0 V) {/Times-Roman cf} 2 16 0 0.50 776 -8 label
1.000 0.000 0.000 scb
1 1.00 592 64 592 56 592 -16 552 64 spline
sce
1 1.00 552 16 464 16 472 -16 552 48 spline
1 1.00 -80 96 -96 112 2 polygon
1 1.00 192 -48 176 -32 2 polygon
1 1.00 528 112 512 128 2 polygon
1 1.00 800 -48 784 -32 2 polygon
(\(a\)) {/Helvetica cf} 2 16 0 0.75 -304 -192 label
(\(b\)) {/Helvetica cf} 2 16 0 0.75 304 -192 label
5 1.00 -336 -160 -336 -128 2 polygon
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
