%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (13100.eps)
%%CreationDate: (2022-11-26T19:09:22+00:00)
%%BoundingBox: -0 -0 175 38
%%HiResBoundingBox: 0 0 174.667 38
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 175 38
userdict begin
DisplayImage
0 0
174.667 38
12
262 57
1
1
1
1
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFCFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFCFFFFFFFFFFFFFFFFFFFFFFFFF81FFC007F1C000703FFFFFFFFFFFFFFFFFFFFFFFCFFFFFF
FFFFFFFFFFFFFFFFFFF00FFC00FF1E1E0F87FFFFFFFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFF
FFFFFFE38FFC00FE1F1E1FCFFFFFFFFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFFFFFFFFE78FF9
F8FC1F0F0F9FFFFFFFFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFFFFFFFFEFCFFBF8F81F0F0F9F
FFFFFFFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFFFFFFFFFF8FFFF9F91F8F8F9FFFFFFFFFFFFF
FFFFFFFFFFFCFFFFFFFFFFFFFFFFFFFFFFFFFF1FFFF1F31F87073FFFFFFFFFFFFFFFFFFFFFFFFC
FFFFFFFFFFFFFFFFFFFFFFFFFE0FFFF1E31F87073FFFFFFFFFFFFFFFFFFFFFFFFCFFFFFFFFFFFF
FFFFFFFFFFFFF80FFFF3E71FC2023FFFFFFFFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFFFFFFFF
FF07FFE3CF1FC2427FFFFFFFFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFFFFFFFFFFC7FFE39F1F
E2627FFFFFFFFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFFFFFFFFFFC7FFE78007E0607FFFFFFF
FFFFFFFFFFFFFFFFFCFF81FFFF18000E07FFFFFFFFFFE7FFC78007E0E0FFFFFFFFFFC0FFF81C07
C0FFFCFF08FFFF1C3C1F0FFFFFFFFFFFC7FFC7FF1FF0F0FFFFFFFFFF847FF00E0FE1FFFCFF1C7F
FE1E3C3F9FFFFFFFFFFFC79FCFFF1FF1F0FFFFFFFFFF8E3FE38F0FF3FFFCFE3C7FFC1E1E1F3FFF
FFFFFFE38F0F8FFF1FF1F9FFFFFFFFFF1E3FE78F0FE3FFFCFE3E3FF81E1E1F3FE3FC7FFFE01F0F
8FFF1FF9F9FFFFFFFFFF1F1FEFCF87E7FFFCFE3E3FF91F1F1F3FE1F8FFFFF0FF9F9FFFFFFBF9FF
FFFFFFFF1F1FFF8F87C7FFFCFC3E3FF31F0E0E7FF0F1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1F1F
FF1FC3CFFFFCFC7E3FE31F0E0E7FF863FFFFFFFFFFFFFFFFFFFFFFFFC000FE3F1FFE0FC3CFFFFC
FC7E3FE71F84047FFC07FFFFFFFFFFFFFFFFFFFFFFFFC000FE3F1FF80FE38FFFFCFC7E3FCF1F84
84FFFE0FFFF8000000000000000000FFFFFFFE3F1FFF07E19FFFFCFC7E3F9F1FC4C4FFFF0FFFF8
000000000000000000FFFFFFFE3F1FFFC7F11FFFFCFC3E3F8007C0C0FFFE07FFFFFFFFFFFFFFFF
FFFFFFFFFFFFFE1F1FFFC7F03FFFFCFE3E3F8007C1C1FFFC43FFFFFFFFFFFFFFFFFFFFFFFFC000
FF1F1FFFE7F83FFFFCFE3E3FFF1FE1E1FFF8E1FFFFFFFFFFFFFFFFFFFFFFFFC000FF1F1FFFC7F8
3FFFFCFE3C79FF1FE3E1FFF1F0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF1E39FFC7F87FFFFCFF1C70
FF1FE3F3FFE3F87FFFFFE030001C0FFFFFFFFFFFFFFF8E30E38FFC7FFFFCFF80F0FF1FF3F3FFE7
FCFFFFFFC038783E1FFFFFFFFFFFFFFFC070E01FFCFFFFFCFFC3F9FFFFF7F3FFFFFFFFFFFFC07C
787F3FFFFFFFFFFFFFFFE1F9F0FFFEFFFFFCFFFFFFFFFFFFFFFFFFFFFFFFFF8FFC3C3E7FFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFFFFFFFFFF8FFC3C3E7FFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFCFFFFFFFFFFFFFFFFFFFFFFFFFF01FE3E3E7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC
FFFFFFFFFFFFFFFFFFFFFFFFFF00FE1C1CFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFCFFFFFFFFFFFF
FFFFFFFFFFFFFFE07E1C1CFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFFFFFFFF
FFF83F0808FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFFFFFFFFFFFE3F0909FF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFFFFFFFFFFFE3F8989FFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFFFFFFFFFFFE3F8181FFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFCFFFFFFFFFFFFFFFFFFFFFFFFFFFE3F8383FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFCFFFFFF
FFFFFFFFFFFFFFFFFFFFFE3FC3C3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFF
FFFFFFFF7E7FC7C3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFFFFFFFFFE1C7F
C7E7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFFFFFFFFFE01FFE7E7FFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFFFFFFFFFF87FFEFE7FFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFCFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFCFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFC
end
%%PageTrailer
%%Trailer
%%EOF
