%!PS-Adobe-3.0 EPSF-3.0
%%Title: 03356.eps
%%Creator: Xcircuit v2.0
%%CreationDate: Sun Apr 28 15:43:04 2002
%%Pages: 1
%%BoundingBox: 68 68 407 243
%%DocumentNeededResources: font Helvetica font Helvetica-Oblique 
%%+ font Times-Italic font Symbol 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.0
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--2/25/99  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.0 2
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/cf { dup type /realtype eq {40 mul /fscale exch def} if dup /xfont exch def
   findfont fscale scalefont setfont } def
/Ss { gsave 0.67 dup scale gsave mty neg rmoveto
   glevel 1 add /glevel exch def } def
/ss { gsave 0.67 dup scale gsave mty 0.5 mul rmoveto
   glevel 1 add /glevel exch def } def
/ns { currentpoint transform   % preserve x position!
   glevel {grestore} repeat /glevel 0 def
   itransform pop currentpoint pop sub 0 rmoveto } def
/ul { showflag 1 eq { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { showflag 1 eq { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave true charpath flattenpath pathbbox pop exch pop sub
   grestore } def
/bs { stW 0 rmoveto } def
/pspc 0 def
/qS { (aa) stW (a a) stW sub 4 div 0 rmoveto } def
/hS { qS qS } def
/textx { dup 1 add copy 0 exch { exch dup type /stringtype eq
	{stringwidth pop add}{exec} ifelse } repeat neg ns } def
/mty { 0 topmat setmatrix (A) true charpath flattenpath pathbbox exch
   pop exch sub exch pop neg grestore } def
/texty { gsave 2 copy pop exec mty } def
/tcenter { textx grestore 0.5 mul 0 rmoveto } def
/tright  { textx grestore fspc sub 0 rmoveto } def
/tmiddle { texty 0.5 mul rmoveto } def
/ttop    { texty fspc sub rmoveto } def
/tshow {{ dup type /stringtype eq {show}{exec} ifelse} repeat ns } def

/label  { gsave translate 0 0 moveto rotate /just exch def just 16 and 0 gt
	{0 1 dtransform gsave pagemat setmatrix idtransform exch grestore
	1 0 dtransform gsave pagemat setmatrix idtransform exch grestore
	dup 0 eq {pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse
	{-1 /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse exch 0 lt
	{-1 /just just dup 12 and 4 ne {12 xor} if def} {1} ifelse scale } if
	/glevel 0 def /showflag 0 def /fspc pspc def
	just 1 and 0 gt {gsave just 2 and 0 gt {tright}{tcenter} ifelse}
	{fspc 0 rmoveto} ifelse
	just 4 and 0 gt {just 8 and 0 gt {ttop}{tmiddle} ifelse}
	{0 fspc rmoveto} ifelse
	/showflag 1 def tshow grestore } def
/pinlabel { hlevel 0 eq { /pspc 20 def label /pspc 0 def }
	{ pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/begingate { /hlevel hlevel 1 add def gsave translate 0 0 moveto dup 0 lt
	{neg 1 sub -1 1 scale} if rotate dup scale } bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore } bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt { newpath } { stroke } ifelse grestore } def
/scb { gsave setrgbcolor } bind def  /sce { grestore } bind def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 setgray } def
/insertion {/PSobj save def /showpage {} def bop translate} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/dot {
% -10 -10 20 20 bbox
begingate
248  1.00 0 0 6 0.00 360.00 xcarc
endgate
} def

/arrowhead {
% -12 -32 24 36 bbox
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249  1.00 endpath
endgate
} def

/arrowhead90 {
% -20 -12 36 24 bbox
begingate
1.00 90 -16 0 arrowhead
endgate
} def

/arrow {
% -12 -40 24 80 bbox
begingate
1  0.80 0 -40 0 20 2 polygon
1.00 0 0 40 arrowhead
endgate
} def

%%Page: 02351.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
% 962 882 offsets
0.7000 inchscale
2.6000 setlinewidth

0.600 0.600 0.600 scb
241  1.00 610 834 32 0.00 360.00 xcarc
sce
1.00 0 610 834 dot
1  1.00 610 834 32 0.00 360.00 xcarc
1  1.00 802 834 834 834 834 882 770 882 738 914 626 914 594 882 546 882 546 834 
578 834 10 polygon
0.600 0.600 0.600 scb
241  1.00 770 834 32 0.00 360.00 xcarc
sce
1  1.00 770 834 32 0.00 360.00 xcarc
1  1.00 738 834 642 834 2 polygon
1.00 0 770 834 dot
1  2.00 370 802 1538 802 2 polygon
1.000 0.000 0.000 scb
241  1.00 650 890 698 890 698 906 730 874 698 842 698 858 650 858 650 890 
8 polygon
sce
1  1.00 738 914 738 882 770 882 3 polygon
1  1.00 834 882 818 866 834 850 3 polygon
0.800 0.800 0.800 scb
1  1.00 594 914 482 914 2 polygon
1  1.00 578 898 482 898 2 polygon
1  1.00 530 882 482 882 2 polygon
1  1.00 530 866 482 866 2 polygon
1  1.00 530 850 482 850 2 polygon
1  1.00 530 834 482 834 2 polygon
sce
1.00 0 386 754 arrowhead90
1  1.00 370 786 370 722 2 polygon
1  1.00 546 786 546 722 2 polygon
1.00 -1 530 754 arrowhead90
0.000 0.000 1.000 scb
(x) {/Times-Italic 1.000 cf} 2 16 0 450 746 label
sce
1  1.00 386 754 434 754 2 polygon
1  1.00 530 754 498 754 2 polygon
1  1.00 418 610 418 418 674 418 3 polygon
(Time) {/Helvetica-Oblique 1.000 cf} 2 16 0 450 370 label
1.00 270 610 386 arrow
0.000 0.000 1.000 scb
(Position) {/Helvetica-Oblique 1.000 cf} 2 16 0 482 626 label
sce
1.00 270 1026 386 arrow
(Time) {/Helvetica-Oblique 1.000 cf} 2 16 0 866 370 label
1  1.00 834 610 834 418 1090 418 3 polygon
0.627 0.125 0.941 scb
(Velocity) {/Helvetica-Oblique 1.000 cf} 2 16 0 882 626 label
sce
0.000 0.000 1.000 scb
1  1.00 546 418 674 498 674 610 418 418 spline
sce
0.627 0.125 0.941 scb
1  1.00 834 418 1090 610 2 polygon
sce
1.000 0.000 0.000 scb
241  1.00 882 890 946 890 946 906 978 874 946 842 946 858 882 858 882 890 
8 polygon
241  1.00 1042 890 1138 890 1138 906 1170 874 1138 842 1138 858 1042 858 1042 
890 8 polygon
241  1.00 1234 890 1394 890 1394 906 1426 874 1394 842 1394 858 1234 858 1234 
890 8 polygon
sce
1  1.00 1250 610 1250 418 1506 418 3 polygon
(Time) {/Helvetica-Oblique 1.000 cf} 2 16 0 1282 370 label
1.00 270 1442 386 arrow
1.000 0.000 1.000 scb
(Acceleration) {/Helvetica-Oblique 1.000 cf} 2 16 0 1266 626 label
1  1.00 1250 514 1506 514 2 polygon
sce
0.000 1.000 0.000 scb
1  1.00 674 338 834 338 2 polygon
1  1.00 690 354 674 338 690 322 3 polygon
(Integration) {/Helvetica 1.000 cf} 2 16 0 658 274 label
(Integration) {/Helvetica 1.000 cf} 2 16 0 1074 274 label
1  1.00 1090 338 1250 338 2 polygon
1  1.00 1106 354 1090 338 1106 322 3 polygon
sce
1.000 0.000 1.000 scb
(a) {/Times-Italic 1.000 cf} 2 16 0 1202 514 label
sce
0.000 0.000 1.000 scb
( a dt) {/Times-Italic 1.000 cf} (\362\362) {/Symbol 1.000 cf} 4 16 0 274 514 label
sce
0.627 0.125 0.941 scb
( a dt) {/Times-Italic 1.000 cf} (\362) {/Symbol 1.000 cf} 4 16 0 722 514 label
sce
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
